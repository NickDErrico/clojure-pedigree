websources:
  build: ./images/sources
  volumes:
    - ./site:/usr/src/app

neosources:
  build: ./images/sources
  volumes:
    - ./neo:/usr/src/app

node.sources:
  build: ./images/sources
  volumes:
    - ./neo:/usr/src/app

# base image for koa api services
koa.api.base:
  image: busybox
  volumes:
    - ./logs:/logs
    - ./.cache/npm:/root/.npm
    - ./node.libs/pg.logger:/usr/local/lib/node_modules/pg.logger
    - ./node.libs/pg.koa.api:/usr/local/lib/node_modules/pg.koa.api

# base image for postgres storage
postgres.storage:
  image: busybox
  volumes:
    - /var/lib/postgresql/data

# base image for neo4j storage
neo4j.storage:
  image: busybox
  volumes:
    - /data

# database-related microservices
db.person:
  build: ./images/koa.api
  volumes:
    - ./db.person:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4000:80"
  links:
    - postgres:postgres
    - neo4j:neo4j

db.user:
  build: ./images/koa.api
  volumes:
    - ./db.user:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4002:80"
  links:
    - postgres:postgres

db.pedigree-relation:
  build: ./images/koa.api
  volumes:
    - ./db.pedigree-relation:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4003:80"
  links:
    - neo4j:neo4j

db.marriage-relation:
  build: ./images/koa.api
  volumes:
    - ./db.marriage-relation:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4004:80"
  links:
    - neo4j:neo4j

# api logic service
api.logic:
  build: ./images/koa.api
  volumes:
    - ./api.logic:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4005:80"

# logging-related containers
svc.fluentd:
  build: ./images/fluentd
  volumes:
    - ./logs:/var/log
  links:
    - svc.elasticsearch:svc.elasticsearch

svc.elasticsearch:
  build: ./images/elasticsearch

svc.kibana:
  build: ./images/kibana
  links:
    - svc.elasticsearch:elasticsearch
  ports:
    - 5601:5601

#####
server:
  build: ./images/server
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./.cache/m2:/root/.m2
    - .:/usr/src/root
  volumes_from:
    - websources
  env_file:
    - docker.env
  ports:
    - "3000:3000"
    - "7888:7888"
  links:
    - postgres:postgres
    - neonode:neonode
    - api.logic:api.logic

postgres:
  build: ./images/postgres
  env_file:
    - docker.env
  ports:
    - "5432:5432"
  volumes_from:
    - postgres.storage

schemup:
  build: ./images/schemup
  links:
    - postgres
  volumes:
    - ./schema:/schema
  working_dir: /schema
  env_file:
    - docker.env

neo4j:
  build: ./images/neo4j
  ports:
    - "7474:7474"
  env_file:
    - docker.env
  environment:
    NEO4J_AUTH: none
  volumes_from:
    - neo4j.storage

frontend:
  build: ./images/frontend
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./.cache/npm:/root/.npm
  volumes_from:
    - websources
  env_file:
    - docker.env

neonode:
  build: ./images/neonode
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./.cache/npm:/root/.npm
  volumes_from:
    - neosources
  env_file:
    - docker.env
  ports:
    - "3001:3000"
  links:
    - neo4j:neo4j
