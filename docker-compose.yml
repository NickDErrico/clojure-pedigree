# base image for koa api services
koa.api.base:
  image: busybox
  volumes:
    - ./logs:/logs
    - ./.cache/npm:/root/.npm
    - ./node.libs/pd.logger:/usr/local/lib/node_modules/pd.logger
    - ./node.libs/pd.koa.api:/usr/local/lib/node_modules/pd.koa.api
    - ./node.libs/pd.services:/usr/local/lib/node_modules/pd.services

# base image for postgres storage
postgres.storage:
  image: busybox
  volumes:
    - /var/lib/postgresql/data

# base image for neo4j storage
neo4j.storage:
  image: busybox
  volumes:
    - /data

# database-related microservices
svc.person:
  build: ./images/koa.api.base
  volumes:
    - ./svc.person:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4000:80"
  links:
    - postgres:postgres
    - neo4j:neo4j

svc.user:
  build: ./images/koa.api.base
  volumes:
    - ./svc.user:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4002:80"
  links:
    - postgres:postgres

svc.pedigree-relation:
  build: ./images/koa.api.base
  volumes:
    - ./svc.pedigree-relation:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4003:80"
  links:
    - neo4j:neo4j

svc.marriage-relation:
  build: ./images/koa.api.base
  volumes:
    - ./svc.marriage-relation:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4004:80"
  links:
    - neo4j:neo4j

svc.minor-content:
  build: ./images/koa.api.base
  volumes:
    - ./svc.minor-content:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4006:80"
  links:
    - postgres:postgres

svc.image:
  build: ./images/koa.api.base
  volumes:
    - ./svc.image:/usr/src/app
    - ./data/images:/data
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4007:80"
  links:
    - postgres:postgres

svc.tree:
  build: ./images/koa.api.base
  volumes:
    - ./svc.tree:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4010:80"
  links:
    - neo4j:neo4j

svc.api-tree:
  build: ./images/koa.api.base
  volumes:
    - ./svc.api-tree:/usr/src/app
  volumes_from:
    - koa.api.base
  env_file:
    - docker.env
  command: nodemon --legacy-watch app.js
  ports:
    - "4011:80"
  links:
    - svc.tree:svc.tree
    - svc.person:svc.person
    - svc.pedigree-relation:svc.pedigree-relation
    - svc.marriage-relation:svc.marriage-relation

#####
svc.web:
  build: ./images/clojure.base
  command: lein run
  volumes:
    - ./.cache/m2:/root/.m2
    - ./data:/app-data
    - ./svc.web:/usr/src/app
    - ./logs:/logs
  env_file:
    - docker.env
  ports:
    - "3000:3000"
    - "7888:7888"
  links:
    - postgres:postgres
    - svc.user:svc.user
    - svc.person:svc.person
    - svc.minor-content:svc.minor-content
    - svc.pedigree-relation:svc.pedigree-relation
    - svc.marriage-relation:svc.marriage-relation
    - svc.image:svc.image
    - svc.api-tree:svc.api-tree

postgres:
  image: postgres:9.4.5
  env_file:
    - docker.env
  ports:
    - "5432:5432"
  volumes_from:
    - postgres.storage

schemup:
  build: ./images/schemup
  links:
    - postgres
  volumes:
    - ./schema:/schema
  working_dir: /schema
  env_file:
    - docker.env

neo4j:
  image: neo4j:2.3.1
  ports:
    - "7474:7474"
  env_file:
    - docker.env
  environment:
    NEO4J_AUTH: none
  volumes_from:
    - neo4j.storage

frontend:
  build: ./images/frontend
  command: node
  volumes:
    - ./.cache/npm:/root/.npm
    - ./svc.web:/usr/src/app
  env_file:
    - docker.env

# logging-related containers
log.fluentd:
  build: ./images/fluentd
  volumes:
    - ./logs:/var/log
  links:
    - log.elasticsearch:log.elasticsearch

log.elasticsearch:
  image: elasticsearch:2.3.1

log.kibana:
  image: kibana:4.5.0
  links:
    - log.elasticsearch:elasticsearch
  ports:
    - 5601:5601
