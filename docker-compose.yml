websources:
  build: ./images/sources
  volumes:
    - ./site:/usr/src/app

neosources:
  build: ./images/sources
  volumes:
    - ./neo:/usr/src/app

node.sources:
  build: ./images/sources
  volumes:
    - ./neo:/usr/src/app

svc.models.run:
  build: ./images/svc.models.run
  volumes:
    - ./svc.models:/usr/src/app
    - ./logs:/logs
  env_file:
    - docker.env
  command: sh -c 'while true; do sleep 10000; done'
  ports:
    - "4000:80"
  links:
    - postgres:postgres
    - neonode:neonode

server:
  build: ./images/server
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./cache/.m2:/root/.m2
    - .:/usr/src/root
  volumes_from:
    - websources
  env_file:
    - docker.env
  ports:
    - "3000:3000"
    - "7888:7888"
  links:
    - postgres:postgres
    - neonode:neonode

postgres:
  build: ./images/postgres
  environment:
    POSTGRES_PASSWORD: password
    POSTGRES_DB: pedigree
  env_file:
    - docker.env
  ports:
    - "5432:5432"

schemup:
  build: ./images/schemup
  links:
    - postgres
  volumes:
    - ./schema:/schema
  working_dir: /schema
  env_file:
    - docker.env

neo4j:
  build: ./images/neo4j
  ports:
    - "7474:7474"
  env_file:
    - docker.env
  environment:
    NEO4J_AUTH: none

frontend:
  build: ./images/frontend
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./cache/.frontend_npm:/root/.npm
  volumes_from:
    - websources
  env_file:
    - docker.env

neonode:
  build: ./images/neonode
  command: sh -c 'while true; do sleep 10000; done'
  volumes:
    - ./cache/.neonode_npm:/root/.npm
  volumes_from:
    - neosources
  env_file:
    - docker.env
  ports:
    - "3001:3000"
  links:
    - neo4j:neo4j
