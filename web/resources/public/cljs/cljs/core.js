// Compiled by ClojureScript 0.0-3165 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3165";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6271__delegate = function (args){
return console.log.apply(console,(function (){var G__6270 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6270) : cljs.core.into_array.call(null,G__6270));
})());
};
var G__6271 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6272__i = 0, G__6272__a = new Array(arguments.length -  0);
while (G__6272__i < G__6272__a.length) {G__6272__a[G__6272__i] = arguments[G__6272__i + 0]; ++G__6272__i;}
  args = new cljs.core.IndexedSeq(G__6272__a,0);
} 
return G__6271__delegate.call(this,args);};
G__6271.cljs$lang$maxFixedArity = 0;
G__6271.cljs$lang$applyTo = (function (arglist__6273){
var args = cljs.core.seq(arglist__6273);
return G__6271__delegate(args);
});
G__6271.cljs$core$IFn$_invoke$arity$variadic = G__6271__delegate;
return G__6271;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__6275 = x;
return goog.isString(G__6275);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6277 = x__$1;
return goog.typeOf(G__6277);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4081__auto__ = ty;
if(cljs.core.truth_(and__4081__auto__)){
return ty.cljs$lang$type;
} else {
return and__4081__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6279 = obj;
return goog.typeOf(G__6279);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6281 = Symbol;
return goog.typeOf(G__6281);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4978__auto___6283 = len;
var i_6284 = (0);
while(true){
if((i_6284 < n__4978__auto___6283)){
(new_arr[i_6284] = (arr[i_6284]));

var G__6285 = (i_6284 + (1));
i_6284 = G__6285;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6286 = (i + (1));
i = G__6286;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__6295__delegate = function (array,i,idxs){
var G__6292 = cljs$core$aget;
var G__6293 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6294 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6292,G__6293,G__6294) : cljs.core.apply.call(null,G__6292,G__6293,G__6294));
};
var G__6295 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6296__i = 0, G__6296__a = new Array(arguments.length -  2);
while (G__6296__i < G__6296__a.length) {G__6296__a[G__6296__i] = arguments[G__6296__i + 2]; ++G__6296__i;}
  idxs = new cljs.core.IndexedSeq(G__6296__a,0);
} 
return G__6295__delegate.call(this,array,i,idxs);};
G__6295.cljs$lang$maxFixedArity = 2;
G__6295.cljs$lang$applyTo = (function (arglist__6297){
var array = cljs.core.first(arglist__6297);
arglist__6297 = cljs.core.next(arglist__6297);
var i = cljs.core.first(arglist__6297);
var idxs = cljs.core.rest(arglist__6297);
return G__6295__delegate(array,i,idxs);
});
G__6295.cljs$core$IFn$_invoke$arity$variadic = G__6295__delegate;
return G__6295;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__6298 = null;
if (arguments.length > 2) {
var G__6299__i = 0, G__6299__a = new Array(arguments.length -  2);
while (G__6299__i < G__6299__a.length) {G__6299__a[G__6299__i] = arguments[G__6299__i + 2]; ++G__6299__i;}
G__6298 = new cljs.core.IndexedSeq(G__6299__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__6308__delegate = function (array,idx,idx2,idxv){
var G__6304 = cljs$core$aset;
var G__6305 = (array[idx]);
var G__6306 = idx2;
var G__6307 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6304,G__6305,G__6306,G__6307) : cljs.core.apply.call(null,G__6304,G__6305,G__6306,G__6307));
};
var G__6308 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6309__i = 0, G__6309__a = new Array(arguments.length -  3);
while (G__6309__i < G__6309__a.length) {G__6309__a[G__6309__i] = arguments[G__6309__i + 3]; ++G__6309__i;}
  idxv = new cljs.core.IndexedSeq(G__6309__a,0);
} 
return G__6308__delegate.call(this,array,idx,idx2,idxv);};
G__6308.cljs$lang$maxFixedArity = 3;
G__6308.cljs$lang$applyTo = (function (arglist__6310){
var array = cljs.core.first(arglist__6310);
arglist__6310 = cljs.core.next(arglist__6310);
var idx = cljs.core.first(arglist__6310);
arglist__6310 = cljs.core.next(arglist__6310);
var idx2 = cljs.core.first(arglist__6310);
var idxv = cljs.core.rest(arglist__6310);
return G__6308__delegate(array,idx,idx2,idxv);
});
G__6308.cljs$core$IFn$_invoke$arity$variadic = G__6308__delegate;
return G__6308;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__6311 = null;
if (arguments.length > 3) {
var G__6312__i = 0, G__6312__a = new Array(arguments.length -  3);
while (G__6312__i < G__6312__a.length) {G__6312__a[G__6312__i] = arguments[G__6312__i + 3]; ++G__6312__i;}
G__6311 = new cljs.core.IndexedSeq(G__6312__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__6318 = (function (a,x){
a.push(x);

return a;
});
var G__6319 = [];
var G__6320 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6318,G__6319,G__6320) : cljs.core.reduce.call(null,G__6318,G__6319,G__6320));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6321__i = 0, G__6321__a = new Array(arguments.length -  2);
while (G__6321__i < G__6321__a.length) {G__6321__a[G__6321__i] = arguments[G__6321__i + 2]; ++G__6321__i;}
  args = new cljs.core.IndexedSeq(G__6321__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__6322){
var obj = cljs.core.first(arglist__6322);
arglist__6322 = cljs.core.next(arglist__6322);
var s = cljs.core.first(arglist__6322);
var args = cljs.core.rest(arglist__6322);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj6324 = {};
return obj6324;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj6326 = {};
return obj6326;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6372 = x__4729__auto__;
return goog.typeOf(G__6372);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6374 = x__4729__auto__;
return goog.typeOf(G__6374);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6376 = x__4729__auto__;
return goog.typeOf(G__6376);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6378 = x__4729__auto__;
return goog.typeOf(G__6378);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6380 = x__4729__auto__;
return goog.typeOf(G__6380);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6382 = x__4729__auto__;
return goog.typeOf(G__6382);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6384 = x__4729__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6386 = x__4729__auto__;
return goog.typeOf(G__6386);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6388 = x__4729__auto__;
return goog.typeOf(G__6388);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6390 = x__4729__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6392 = x__4729__auto__;
return goog.typeOf(G__6392);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6394 = x__4729__auto__;
return goog.typeOf(G__6394);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6396 = x__4729__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6398 = x__4729__auto__;
return goog.typeOf(G__6398);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6400 = x__4729__auto__;
return goog.typeOf(G__6400);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6402 = x__4729__auto__;
return goog.typeOf(G__6402);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6404 = x__4729__auto__;
return goog.typeOf(G__6404);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6406 = x__4729__auto__;
return goog.typeOf(G__6406);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6408 = x__4729__auto__;
return goog.typeOf(G__6408);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6410 = x__4729__auto__;
return goog.typeOf(G__6410);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6412 = x__4729__auto__;
return goog.typeOf(G__6412);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._invoke[(function (){var G__6414 = x__4729__auto__;
return goog.typeOf(G__6414);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._invoke["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj6416 = {};
return obj6416;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__4081__auto__ = value;
if(and__4081__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4081__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4729__auto__ = (((value == null))?null:value);
return (function (){var or__4093__auto__ = (cljs.core._clone[(function (){var G__6420 = x__4729__auto__;
return goog.typeOf(G__6420);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._clone["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj6422 = {};
return obj6422;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._count[(function (){var G__6426 = x__4729__auto__;
return goog.typeOf(G__6426);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._count["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj6428 = {};
return obj6428;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._empty[(function (){var G__6432 = x__4729__auto__;
return goog.typeOf(G__6432);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._empty["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj6434 = {};
return obj6434;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._conj[(function (){var G__6438 = x__4729__auto__;
return goog.typeOf(G__6438);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._conj["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj6440 = {};
return obj6440;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._nth[(function (){var G__6446 = x__4729__auto__;
return goog.typeOf(G__6446);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._nth["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._nth[(function (){var G__6448 = x__4729__auto__;
return goog.typeOf(G__6448);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._nth["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj6450 = {};
return obj6450;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj6452 = {};
return obj6452;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._first[(function (){var G__6456 = x__4729__auto__;
return goog.typeOf(G__6456);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._first["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._rest[(function (){var G__6460 = x__4729__auto__;
return goog.typeOf(G__6460);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._rest["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj6462 = {};
return obj6462;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._next[(function (){var G__6466 = x__4729__auto__;
return goog.typeOf(G__6466);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._next["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj6468 = {};
return obj6468;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._lookup[(function (){var G__6474 = x__4729__auto__;
return goog.typeOf(G__6474);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._lookup["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._lookup[(function (){var G__6476 = x__4729__auto__;
return goog.typeOf(G__6476);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._lookup["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj6478 = {};
return obj6478;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6482 = x__4729__auto__;
return goog.typeOf(G__6482);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._assoc[(function (){var G__6486 = x__4729__auto__;
return goog.typeOf(G__6486);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._assoc["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj6488 = {};
return obj6488;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._dissoc[(function (){var G__6492 = x__4729__auto__;
return goog.typeOf(G__6492);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj6494 = {};
return obj6494;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._key[(function (){var G__6498 = x__4729__auto__;
return goog.typeOf(G__6498);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._key["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._val[(function (){var G__6502 = x__4729__auto__;
return goog.typeOf(G__6502);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._val["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj6504 = {};
return obj6504;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._disjoin[(function (){var G__6508 = x__4729__auto__;
return goog.typeOf(G__6508);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj6510 = {};
return obj6510;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._peek[(function (){var G__6514 = x__4729__auto__;
return goog.typeOf(G__6514);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._peek["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._pop[(function (){var G__6518 = x__4729__auto__;
return goog.typeOf(G__6518);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._pop["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj6520 = {};
return obj6520;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._assoc_n[(function (){var G__6524 = x__4729__auto__;
return goog.typeOf(G__6524);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj6526 = {};
return obj6526;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._deref[(function (){var G__6530 = x__4729__auto__;
return goog.typeOf(G__6530);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._deref["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6532 = {};
return obj6532;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6536 = x__4729__auto__;
return goog.typeOf(G__6536);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj6538 = {};
return obj6538;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._meta[(function (){var G__6542 = x__4729__auto__;
return goog.typeOf(G__6542);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._meta["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj6544 = {};
return obj6544;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._with_meta[(function (){var G__6548 = x__4729__auto__;
return goog.typeOf(G__6548);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj6550 = {};
return obj6550;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._reduce[(function (){var G__6556 = x__4729__auto__;
return goog.typeOf(G__6556);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._reduce["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._reduce[(function (){var G__6558 = x__4729__auto__;
return goog.typeOf(G__6558);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._reduce["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj6560 = {};
return obj6560;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._kv_reduce[(function (){var G__6564 = x__4729__auto__;
return goog.typeOf(G__6564);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj6566 = {};
return obj6566;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._equiv[(function (){var G__6570 = x__4729__auto__;
return goog.typeOf(G__6570);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._equiv["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj6572 = {};
return obj6572;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._hash[(function (){var G__6576 = x__4729__auto__;
return goog.typeOf(G__6576);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._hash["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj6578 = {};
return obj6578;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._seq[(function (){var G__6582 = x__4729__auto__;
return goog.typeOf(G__6582);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._seq["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj6584 = {};
return obj6584;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj6586 = {};
return obj6586;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj6588 = {};
return obj6588;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj6590 = {};
return obj6590;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._rseq[(function (){var G__6594 = x__4729__auto__;
return goog.typeOf(G__6594);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._rseq["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj6596 = {};
return obj6596;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._sorted_seq[(function (){var G__6600 = x__4729__auto__;
return goog.typeOf(G__6600);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6604 = x__4729__auto__;
return goog.typeOf(G__6604);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._entry_key[(function (){var G__6608 = x__4729__auto__;
return goog.typeOf(G__6608);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._comparator[(function (){var G__6612 = x__4729__auto__;
return goog.typeOf(G__6612);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._comparator["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj6614 = {};
return obj6614;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__4081__auto__ = writer;
if(and__4081__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4081__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4729__auto__ = (((writer == null))?null:writer);
return (function (){var or__4093__auto__ = (cljs.core._write[(function (){var G__6618 = x__4729__auto__;
return goog.typeOf(G__6618);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._write["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__4081__auto__ = writer;
if(and__4081__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4081__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4729__auto__ = (((writer == null))?null:writer);
return (function (){var or__4093__auto__ = (cljs.core._flush[(function (){var G__6622 = x__4729__auto__;
return goog.typeOf(G__6622);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._flush["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj6624 = {};
return obj6624;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._pr_writer[(function (){var G__6628 = x__4729__auto__;
return goog.typeOf(G__6628);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj6630 = {};
return obj6630;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__4081__auto__ = d;
if(and__4081__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4081__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4729__auto__ = (((d == null))?null:d);
return (function (){var or__4093__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6634 = x__4729__auto__;
return goog.typeOf(G__6634);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj6636 = {};
return obj6636;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._notify_watches[(function (){var G__6640 = x__4729__auto__;
return goog.typeOf(G__6640);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._add_watch[(function (){var G__6644 = x__4729__auto__;
return goog.typeOf(G__6644);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__4081__auto__ = this$;
if(and__4081__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4081__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4729__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4093__auto__ = (cljs.core._remove_watch[(function (){var G__6648 = x__4729__auto__;
return goog.typeOf(G__6648);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj6650 = {};
return obj6650;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._as_transient[(function (){var G__6654 = x__4729__auto__;
return goog.typeOf(G__6654);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj6656 = {};
return obj6656;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._conj_BANG_[(function (){var G__6660 = x__4729__auto__;
return goog.typeOf(G__6660);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6664 = x__4729__auto__;
return goog.typeOf(G__6664);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj6666 = {};
return obj6666;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6670 = x__4729__auto__;
return goog.typeOf(G__6670);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj6672 = {};
return obj6672;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6676 = x__4729__auto__;
return goog.typeOf(G__6676);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj6678 = {};
return obj6678;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6682 = x__4729__auto__;
return goog.typeOf(G__6682);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._pop_BANG_[(function (){var G__6686 = x__4729__auto__;
return goog.typeOf(G__6686);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj6688 = {};
return obj6688;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__4081__auto__ = tcoll;
if(and__4081__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4729__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4093__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6692 = x__4729__auto__;
return goog.typeOf(G__6692);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj6694 = {};
return obj6694;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._compare[(function (){var G__6698 = x__4729__auto__;
return goog.typeOf(G__6698);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._compare["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj6700 = {};
return obj6700;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._drop_first[(function (){var G__6704 = x__4729__auto__;
return goog.typeOf(G__6704);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj6706 = {};
return obj6706;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._chunked_first[(function (){var G__6710 = x__4729__auto__;
return goog.typeOf(G__6710);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._chunked_rest[(function (){var G__6714 = x__4729__auto__;
return goog.typeOf(G__6714);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj6716 = {};
return obj6716;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._chunked_next[(function (){var G__6720 = x__4729__auto__;
return goog.typeOf(G__6720);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj6722 = {};
return obj6722;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._name[(function (){var G__6726 = x__4729__auto__;
return goog.typeOf(G__6726);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._name["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._namespace[(function (){var G__6730 = x__4729__auto__;
return goog.typeOf(G__6730);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._namespace["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj6732 = {};
return obj6732;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj6734 = {};
return obj6734;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._reset_BANG_[(function (){var G__6738 = x__4729__auto__;
return goog.typeOf(G__6738);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj6740 = {};
return obj6740;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._swap_BANG_[(function (){var G__6750 = x__4729__auto__;
return goog.typeOf(G__6750);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._swap_BANG_[(function (){var G__6752 = x__4729__auto__;
return goog.typeOf(G__6752);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._swap_BANG_[(function (){var G__6754 = x__4729__auto__;
return goog.typeOf(G__6754);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._swap_BANG_[(function (){var G__6756 = x__4729__auto__;
return goog.typeOf(G__6756);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj6758 = {};
return obj6758;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__4081__auto__ = o;
if(and__4081__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4081__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4729__auto__ = (((o == null))?null:o);
return (function (){var or__4093__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6762 = x__4729__auto__;
return goog.typeOf(G__6762);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj6764 = {};
return obj6764;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__4081__auto__ = coll;
if(and__4081__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4081__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4729__auto__ = (((coll == null))?null:coll);
return (function (){var or__4093__auto__ = (cljs.core._iterator[(function (){var G__6768 = x__4729__auto__;
return goog.typeOf(G__6768);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._iterator["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6771 = (4294967295);
var G__6772 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6771,G__6772) : Math.imul.call(null,G__6771,G__6772));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__6775 = a;
var G__6776 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6775,G__6776) : Math.imul.call(null,G__6775,G__6776));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6777 = (i + (2));
var G__6778 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6777;
h1 = G__6778;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6780 = {};
return obj6780;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6781 = (i + (1));
var G__6782 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6781;
hash = G__6782;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6786 = {};
return obj6786;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__6789 = o;
if(G__6789){
var bit__4760__auto__ = (G__6789.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4760__auto__) || (G__6789.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6790 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6790) : Math.floor.call(null,G__6790));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4081__auto__ = cljs.core.not(a.ns);
if(and__4081__auto__){
return b.ns;
} else {
return and__4081__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6797 = a.ns;
var G__6798 = b.ns;
return goog.array.defaultCompare(G__6797,G__6798);
})();
if(((0) === nsc)){
var G__6799 = a.name;
var G__6800 = b.name;
return goog.array.defaultCompare(G__6799,G__6800);
} else {
return nsc;
}
}
} else {
var G__6801 = a.name;
var G__6802 = b.name;
return goog.array.defaultCompare(G__6801,G__6802);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4509__auto__ = self__._hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6804 = null;
var G__6804__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6804__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6804 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6804__2.call(this,self__,coll);
case 3:
return G__6804__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6804.cljs$core$IFn$_invoke$arity$2 = G__6804__2;
G__6804.cljs$core$IFn$_invoke$arity$3 = G__6804__3;
return G__6804;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6803){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6803)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6852 = null;
var G__6852__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6852__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6852__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6852__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6852__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6852__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6852__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6852__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6852__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6852__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6852__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6852__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6852__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6852__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6852__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6852__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6852__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6852__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6852__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6852__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6852__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6852__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6808 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6809 = a;
var G__6810 = b;
var G__6811 = c;
var G__6812 = d;
var G__6813 = e;
var G__6814 = f;
var G__6815 = g;
var G__6816 = h;
var G__6817 = i;
var G__6818 = j;
var G__6819 = k;
var G__6820 = l;
var G__6821 = m;
var G__6822 = n;
var G__6823 = o;
var G__6824 = p;
var G__6825 = q;
var G__6826 = r;
var G__6827 = s;
var G__6828 = t;
var G__6829 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829) : cljs.core.apply.call(null,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829));
});
G__6852 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6852__1.call(this,self__);
case 2:
return G__6852__2.call(this,self__,a);
case 3:
return G__6852__3.call(this,self__,a,b);
case 4:
return G__6852__4.call(this,self__,a,b,c);
case 5:
return G__6852__5.call(this,self__,a,b,c,d);
case 6:
return G__6852__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6852__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6852__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6852__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6852__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6852__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6852__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6852__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6852__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6852__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6852__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6852__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6852__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6852__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6852__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6852__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6852__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6852.cljs$core$IFn$_invoke$arity$1 = G__6852__1;
G__6852.cljs$core$IFn$_invoke$arity$2 = G__6852__2;
G__6852.cljs$core$IFn$_invoke$arity$3 = G__6852__3;
G__6852.cljs$core$IFn$_invoke$arity$4 = G__6852__4;
G__6852.cljs$core$IFn$_invoke$arity$5 = G__6852__5;
G__6852.cljs$core$IFn$_invoke$arity$6 = G__6852__6;
G__6852.cljs$core$IFn$_invoke$arity$7 = G__6852__7;
G__6852.cljs$core$IFn$_invoke$arity$8 = G__6852__8;
G__6852.cljs$core$IFn$_invoke$arity$9 = G__6852__9;
G__6852.cljs$core$IFn$_invoke$arity$10 = G__6852__10;
G__6852.cljs$core$IFn$_invoke$arity$11 = G__6852__11;
G__6852.cljs$core$IFn$_invoke$arity$12 = G__6852__12;
G__6852.cljs$core$IFn$_invoke$arity$13 = G__6852__13;
G__6852.cljs$core$IFn$_invoke$arity$14 = G__6852__14;
G__6852.cljs$core$IFn$_invoke$arity$15 = G__6852__15;
G__6852.cljs$core$IFn$_invoke$arity$16 = G__6852__16;
G__6852.cljs$core$IFn$_invoke$arity$17 = G__6852__17;
G__6852.cljs$core$IFn$_invoke$arity$18 = G__6852__18;
G__6852.cljs$core$IFn$_invoke$arity$19 = G__6852__19;
G__6852.cljs$core$IFn$_invoke$arity$20 = G__6852__20;
G__6852.cljs$core$IFn$_invoke$arity$21 = G__6852__21;
G__6852.cljs$core$IFn$_invoke$arity$22 = G__6852__22;
return G__6852;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6807){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6807)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6830 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6831 = a;
var G__6832 = b;
var G__6833 = c;
var G__6834 = d;
var G__6835 = e;
var G__6836 = f;
var G__6837 = g;
var G__6838 = h;
var G__6839 = i;
var G__6840 = j;
var G__6841 = k;
var G__6842 = l;
var G__6843 = m;
var G__6844 = n;
var G__6845 = o;
var G__6846 = p;
var G__6847 = q;
var G__6848 = r;
var G__6849 = s;
var G__6850 = t;
var G__6851 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851) : cljs.core.apply.call(null,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__6854 = x;
if(G__6854){
var bit__4767__auto__ = null;
if(cljs.core.truth_((function (){var or__4093__auto__ = bit__4767__auto__;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return G__6854.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6854.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6854);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6854);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__6856 = value;
if(G__6856){
var bit__4767__auto__ = (G__6856.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4767__auto__) || (G__6856.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6856.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6856);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6856);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6858 = coll;
if(G__6858){
var bit__4760__auto__ = (G__6858.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4760__auto__) || (G__6858.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6860 = coll;
if(G__6860){
var bit__4760__auto__ = (G__6860.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4760__auto__) || (G__6860.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__6862 = coll;
if(G__6862){
var bit__4760__auto__ = (G__6862.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4760__auto__) || (G__6862.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6864 = coll;
if(G__6864){
var bit__4760__auto__ = (G__6864.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4760__auto__) || (G__6864.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__6869__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6870 = y;
var G__6871 = cljs.core.first(more);
var G__6872 = cljs.core.next(more);
x = G__6870;
y = G__6871;
more = G__6872;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6869 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6873__i = 0, G__6873__a = new Array(arguments.length -  2);
while (G__6873__i < G__6873__a.length) {G__6873__a[G__6873__i] = arguments[G__6873__i + 2]; ++G__6873__i;}
  more = new cljs.core.IndexedSeq(G__6873__a,0);
} 
return G__6869__delegate.call(this,x,y,more);};
G__6869.cljs$lang$maxFixedArity = 2;
G__6869.cljs$lang$applyTo = (function (arglist__6874){
var x = cljs.core.first(arglist__6874);
arglist__6874 = cljs.core.next(arglist__6874);
var y = cljs.core.first(arglist__6874);
var more = cljs.core.rest(arglist__6874);
return G__6869__delegate(x,y,more);
});
G__6869.cljs$core$IFn$_invoke$arity$variadic = G__6869__delegate;
return G__6869;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__6875 = null;
if (arguments.length > 2) {
var G__6876__i = 0, G__6876__a = new Array(arguments.length -  2);
while (G__6876__i < G__6876__a.length) {G__6876__a[G__6876__i] = arguments[G__6876__i + 2]; ++G__6876__i;}
G__6875 = new cljs.core.IndexedSeq(G__6876__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6877 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6877) : cljs.core.es6_iterator_seq.call(null,G__6877));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6878 = (n + (1));
var G__6879 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6880 = cljs.core.next(coll__$1);
n = G__6878;
hash_code = G__6879;
coll__$1 = G__6880;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6881 = (n + (1));
var G__6882 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6883 = cljs.core.next(coll__$1);
n = G__6881;
hash_code = G__6882;
coll__$1 = G__6883;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__6884 = this$__$1.valueOf();
var G__6885 = other.valueOf();
return goog.array.defaultCompare(G__6884,G__6885);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6886 = o;
return goog.getUid(G__6886);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6888 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6888) : cljs.core.deref.call(null,G__6888));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6895 = val;
var G__6896 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6895,G__6896) : f.call(null,G__6895,G__6896));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6901 = nval;
var G__6902 = (n + (1));
val = G__6901;
n = G__6902;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6897 = val__$1;
var G__6898 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6897,G__6898) : f.call(null,G__6897,G__6898));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6903 = nval;
var G__6904 = (n + (1));
val__$1 = G__6903;
n = G__6904;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6899 = val__$1;
var G__6900 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6899,G__6900) : f.call(null,G__6899,G__6900));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6905 = nval;
var G__6906 = (n + (1));
val__$1 = G__6905;
n = G__6906;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6913 = val;
var G__6914 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6913,G__6914) : f.call(null,G__6913,G__6914));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6919 = nval;
var G__6920 = (n + (1));
val = G__6919;
n = G__6920;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6915 = val__$1;
var G__6916 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6915,G__6916) : f.call(null,G__6915,G__6916));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6921 = nval;
var G__6922 = (n + (1));
val__$1 = G__6921;
n = G__6922;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6917 = val__$1;
var G__6918 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6917,G__6918) : f.call(null,G__6917,G__6918));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6923 = nval;
var G__6924 = (n + (1));
val__$1 = G__6923;
n = G__6924;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__6926 = x;
if(G__6926){
var bit__4767__auto__ = (G__6926.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4767__auto__) || (G__6926.cljs$core$ICounted$)){
return true;
} else {
if((!G__6926.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6926);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6926);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__6928 = x;
if(G__6928){
var bit__4767__auto__ = (G__6928.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4767__auto__) || (G__6928.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6928.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6928);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6928);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6929 = coll__$1;
var G__6930 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6929,G__6930) : cljs.core.equiv_sequential.call(null,G__6929,G__6930));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6931 = o;
var G__6932 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6931,G__6932) : cljs.core.cons.call(null,G__6931,G__6932));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6935 = coll__$1;
var G__6936 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6935,G__6936) : cljs.core.equiv_sequential.call(null,G__6935,G__6936));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6937 = cljs.core.List.EMPTY;
var G__6938 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6937,G__6938) : cljs.core.with_meta.call(null,G__6937,G__6938));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6939 = f;
var G__6940 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6939,G__6940) : cljs.core.seq_reduce.call(null,G__6939,G__6940));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6941 = f;
var G__6942 = start;
var G__6943 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6941,G__6942,G__6943) : cljs.core.seq_reduce.call(null,G__6941,G__6942,G__6943));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6944 = o;
var G__6945 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6944,G__6945) : cljs.core.cons.call(null,G__6944,G__6945));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6946 = sn;
s = G__6946;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__6951__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6952 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6953 = cljs.core.first(xs);
var G__6954 = cljs.core.next(xs);
coll = G__6952;
x = G__6953;
xs = G__6954;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6951 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6955__i = 0, G__6955__a = new Array(arguments.length -  2);
while (G__6955__i < G__6955__a.length) {G__6955__a[G__6955__i] = arguments[G__6955__i + 2]; ++G__6955__i;}
  xs = new cljs.core.IndexedSeq(G__6955__a,0);
} 
return G__6951__delegate.call(this,coll,x,xs);};
G__6951.cljs$lang$maxFixedArity = 2;
G__6951.cljs$lang$applyTo = (function (arglist__6956){
var coll = cljs.core.first(arglist__6956);
arglist__6956 = cljs.core.next(arglist__6956);
var x = cljs.core.first(arglist__6956);
var xs = cljs.core.rest(arglist__6956);
return G__6951__delegate(coll,x,xs);
});
G__6951.cljs$core$IFn$_invoke$arity$variadic = G__6951__delegate;
return G__6951;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__6957 = null;
if (arguments.length > 2) {
var G__6958__i = 0, G__6958__a = new Array(arguments.length -  2);
while (G__6958__i < G__6958__a.length) {G__6958__a[G__6958__i] = arguments[G__6958__i + 2]; ++G__6958__i;}
G__6957 = new cljs.core.IndexedSeq(G__6958__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6957);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6959 = cljs.core.next(s);
var G__6960 = (acc + (1));
s = G__6959;
acc = G__6960;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__6962 = coll;
if(G__6962){
var bit__4760__auto__ = (G__6962.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4760__auto__) || (G__6962.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6963 = cljs.core.next(coll);
var G__6964 = (n - (1));
coll = G__6963;
n = G__6964;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6965 = cljs.core.next(coll);
var G__6966 = (n - (1));
var G__6967 = not_found;
coll = G__6965;
n = G__6966;
not_found = G__6967;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6972 = coll;
if(G__6972){
var bit__4760__auto__ = (G__6972.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4760__auto__) || (G__6972.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6973 = coll;
if(G__6973){
var bit__4767__auto__ = (G__6973.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4767__auto__) || (G__6973.cljs$core$ISeq$)){
return true;
} else {
if((!G__6973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6973);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6974 = coll;
if(G__6974){
var bit__4760__auto__ = (G__6974.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4760__auto__) || (G__6974.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6975 = coll;
if(G__6975){
var bit__4767__auto__ = (G__6975.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4767__auto__) || (G__6975.cljs$core$ISeq$)){
return true;
} else {
if((!G__6975.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6975);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6975);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6976 = (n__$1 - (1));
var G__6977 = cljs.core.rest(xs);
n__$1 = G__6976;
xs = G__6977;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6980 = o;
if(G__6980){
var bit__4760__auto__ = (G__6980.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4760__auto__) || (G__6980.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6981 = o;
if(G__6981){
var bit__4760__auto__ = (G__6981.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4760__auto__) || (G__6981.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__6985__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6986 = ret;
var G__6987 = cljs.core.first(kvs);
var G__6988 = cljs.core.second(kvs);
var G__6989 = cljs.core.nnext(kvs);
coll = G__6986;
k = G__6987;
v = G__6988;
kvs = G__6989;
continue;
} else {
return ret;
}
break;
}
};
var G__6985 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6990__i = 0, G__6990__a = new Array(arguments.length -  3);
while (G__6990__i < G__6990__a.length) {G__6990__a[G__6990__i] = arguments[G__6990__i + 3]; ++G__6990__i;}
  kvs = new cljs.core.IndexedSeq(G__6990__a,0);
} 
return G__6985__delegate.call(this,coll,k,v,kvs);};
G__6985.cljs$lang$maxFixedArity = 3;
G__6985.cljs$lang$applyTo = (function (arglist__6991){
var coll = cljs.core.first(arglist__6991);
arglist__6991 = cljs.core.next(arglist__6991);
var k = cljs.core.first(arglist__6991);
arglist__6991 = cljs.core.next(arglist__6991);
var v = cljs.core.first(arglist__6991);
var kvs = cljs.core.rest(arglist__6991);
return G__6985__delegate(coll,k,v,kvs);
});
G__6985.cljs$core$IFn$_invoke$arity$variadic = G__6985__delegate;
return G__6985;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__6992 = null;
if (arguments.length > 3) {
var G__6993__i = 0, G__6993__a = new Array(arguments.length -  3);
while (G__6993__i < G__6993__a.length) {G__6993__a[G__6993__i] = arguments[G__6993__i + 3]; ++G__6993__i;}
G__6992 = new cljs.core.IndexedSeq(G__6993__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__6996__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6997 = ret;
var G__6998 = cljs.core.first(ks);
var G__6999 = cljs.core.next(ks);
coll = G__6997;
k = G__6998;
ks = G__6999;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6996 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7000__i = 0, G__7000__a = new Array(arguments.length -  2);
while (G__7000__i < G__7000__a.length) {G__7000__a[G__7000__i] = arguments[G__7000__i + 2]; ++G__7000__i;}
  ks = new cljs.core.IndexedSeq(G__7000__a,0);
} 
return G__6996__delegate.call(this,coll,k,ks);};
G__6996.cljs$lang$maxFixedArity = 2;
G__6996.cljs$lang$applyTo = (function (arglist__7001){
var coll = cljs.core.first(arglist__7001);
arglist__7001 = cljs.core.next(arglist__7001);
var k = cljs.core.first(arglist__7001);
var ks = cljs.core.rest(arglist__7001);
return G__6996__delegate(coll,k,ks);
});
G__6996.cljs$core$IFn$_invoke$arity$variadic = G__6996__delegate;
return G__6996;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__7002 = null;
if (arguments.length > 2) {
var G__7003__i = 0, G__7003__a = new Array(arguments.length -  2);
while (G__7003__i < G__7003__a.length) {G__7003__a[G__7003__i] = arguments[G__7003__i + 2]; ++G__7003__i;}
G__7002 = new cljs.core.IndexedSeq(G__7003__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__4093__auto__ = (function (){var G__7008 = f;
return goog.isFunction(G__7008);
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var G__7009 = f;
if(G__7009){
var bit__4767__auto__ = null;
if(cljs.core.truth_((function (){var or__4093__auto____$1 = bit__4767__auto__;
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
return G__7009.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7009.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7009);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7009);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7475 = null;
var G__7475__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7475__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7011 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7011) : self__.afn.call(null,G__7011));
});
var G__7475__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7012 = a;
var G__7013 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7012,G__7013) : self__.afn.call(null,G__7012,G__7013));
});
var G__7475__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7014 = a;
var G__7015 = b;
var G__7016 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7014,G__7015,G__7016) : self__.afn.call(null,G__7014,G__7015,G__7016));
});
var G__7475__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7017 = a;
var G__7018 = b;
var G__7019 = c;
var G__7020 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7017,G__7018,G__7019,G__7020) : self__.afn.call(null,G__7017,G__7018,G__7019,G__7020));
});
var G__7475__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7021 = a;
var G__7022 = b;
var G__7023 = c;
var G__7024 = d;
var G__7025 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7021,G__7022,G__7023,G__7024,G__7025) : self__.afn.call(null,G__7021,G__7022,G__7023,G__7024,G__7025));
});
var G__7475__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7026 = a;
var G__7027 = b;
var G__7028 = c;
var G__7029 = d;
var G__7030 = e;
var G__7031 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7026,G__7027,G__7028,G__7029,G__7030,G__7031) : self__.afn.call(null,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031));
});
var G__7475__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7032 = a;
var G__7033 = b;
var G__7034 = c;
var G__7035 = d;
var G__7036 = e;
var G__7037 = f;
var G__7038 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038) : self__.afn.call(null,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038));
});
var G__7475__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7039 = a;
var G__7040 = b;
var G__7041 = c;
var G__7042 = d;
var G__7043 = e;
var G__7044 = f;
var G__7045 = g;
var G__7046 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046) : self__.afn.call(null,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046));
});
var G__7475__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7047 = a;
var G__7048 = b;
var G__7049 = c;
var G__7050 = d;
var G__7051 = e;
var G__7052 = f;
var G__7053 = g;
var G__7054 = h;
var G__7055 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055) : self__.afn.call(null,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055));
});
var G__7475__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7056 = a;
var G__7057 = b;
var G__7058 = c;
var G__7059 = d;
var G__7060 = e;
var G__7061 = f;
var G__7062 = g;
var G__7063 = h;
var G__7064 = i;
var G__7065 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065) : self__.afn.call(null,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065));
});
var G__7475__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7066 = a;
var G__7067 = b;
var G__7068 = c;
var G__7069 = d;
var G__7070 = e;
var G__7071 = f;
var G__7072 = g;
var G__7073 = h;
var G__7074 = i;
var G__7075 = j;
var G__7076 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076) : self__.afn.call(null,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076));
});
var G__7475__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7077 = a;
var G__7078 = b;
var G__7079 = c;
var G__7080 = d;
var G__7081 = e;
var G__7082 = f;
var G__7083 = g;
var G__7084 = h;
var G__7085 = i;
var G__7086 = j;
var G__7087 = k;
var G__7088 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088) : self__.afn.call(null,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088));
});
var G__7475__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7089 = a;
var G__7090 = b;
var G__7091 = c;
var G__7092 = d;
var G__7093 = e;
var G__7094 = f;
var G__7095 = g;
var G__7096 = h;
var G__7097 = i;
var G__7098 = j;
var G__7099 = k;
var G__7100 = l;
var G__7101 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101) : self__.afn.call(null,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101));
});
var G__7475__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7102 = a;
var G__7103 = b;
var G__7104 = c;
var G__7105 = d;
var G__7106 = e;
var G__7107 = f;
var G__7108 = g;
var G__7109 = h;
var G__7110 = i;
var G__7111 = j;
var G__7112 = k;
var G__7113 = l;
var G__7114 = m;
var G__7115 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115) : self__.afn.call(null,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115));
});
var G__7475__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7116 = a;
var G__7117 = b;
var G__7118 = c;
var G__7119 = d;
var G__7120 = e;
var G__7121 = f;
var G__7122 = g;
var G__7123 = h;
var G__7124 = i;
var G__7125 = j;
var G__7126 = k;
var G__7127 = l;
var G__7128 = m;
var G__7129 = n;
var G__7130 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130) : self__.afn.call(null,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130));
});
var G__7475__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7131 = a;
var G__7132 = b;
var G__7133 = c;
var G__7134 = d;
var G__7135 = e;
var G__7136 = f;
var G__7137 = g;
var G__7138 = h;
var G__7139 = i;
var G__7140 = j;
var G__7141 = k;
var G__7142 = l;
var G__7143 = m;
var G__7144 = n;
var G__7145 = o;
var G__7146 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146) : self__.afn.call(null,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146));
});
var G__7475__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7147 = a;
var G__7148 = b;
var G__7149 = c;
var G__7150 = d;
var G__7151 = e;
var G__7152 = f;
var G__7153 = g;
var G__7154 = h;
var G__7155 = i;
var G__7156 = j;
var G__7157 = k;
var G__7158 = l;
var G__7159 = m;
var G__7160 = n;
var G__7161 = o;
var G__7162 = p;
var G__7163 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163) : self__.afn.call(null,G__7147,G__7148,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163));
});
var G__7475__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7164 = a;
var G__7165 = b;
var G__7166 = c;
var G__7167 = d;
var G__7168 = e;
var G__7169 = f;
var G__7170 = g;
var G__7171 = h;
var G__7172 = i;
var G__7173 = j;
var G__7174 = k;
var G__7175 = l;
var G__7176 = m;
var G__7177 = n;
var G__7178 = o;
var G__7179 = p;
var G__7180 = q;
var G__7181 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181) : self__.afn.call(null,G__7164,G__7165,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181));
});
var G__7475__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7182 = a;
var G__7183 = b;
var G__7184 = c;
var G__7185 = d;
var G__7186 = e;
var G__7187 = f;
var G__7188 = g;
var G__7189 = h;
var G__7190 = i;
var G__7191 = j;
var G__7192 = k;
var G__7193 = l;
var G__7194 = m;
var G__7195 = n;
var G__7196 = o;
var G__7197 = p;
var G__7198 = q;
var G__7199 = r;
var G__7200 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200) : self__.afn.call(null,G__7182,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200));
});
var G__7475__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7201 = a;
var G__7202 = b;
var G__7203 = c;
var G__7204 = d;
var G__7205 = e;
var G__7206 = f;
var G__7207 = g;
var G__7208 = h;
var G__7209 = i;
var G__7210 = j;
var G__7211 = k;
var G__7212 = l;
var G__7213 = m;
var G__7214 = n;
var G__7215 = o;
var G__7216 = p;
var G__7217 = q;
var G__7218 = r;
var G__7219 = s;
var G__7220 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7201,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220) : self__.afn.call(null,G__7201,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220));
});
var G__7475__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7221 = self__.afn;
var G__7222 = a;
var G__7223 = b;
var G__7224 = c;
var G__7225 = d;
var G__7226 = e;
var G__7227 = f;
var G__7228 = g;
var G__7229 = h;
var G__7230 = i;
var G__7231 = j;
var G__7232 = k;
var G__7233 = l;
var G__7234 = m;
var G__7235 = n;
var G__7236 = o;
var G__7237 = p;
var G__7238 = q;
var G__7239 = r;
var G__7240 = s;
var G__7241 = t;
var G__7242 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242) : cljs.core.apply.call(null,G__7221,G__7222,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242));
});
G__7475 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7475__1.call(this,self__);
case 2:
return G__7475__2.call(this,self__,a);
case 3:
return G__7475__3.call(this,self__,a,b);
case 4:
return G__7475__4.call(this,self__,a,b,c);
case 5:
return G__7475__5.call(this,self__,a,b,c,d);
case 6:
return G__7475__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7475__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7475__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7475__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7475__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7475__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7475__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7475__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7475__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7475__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7475__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7475__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7475__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7475__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7475__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7475__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7475__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7475.cljs$core$IFn$_invoke$arity$1 = G__7475__1;
G__7475.cljs$core$IFn$_invoke$arity$2 = G__7475__2;
G__7475.cljs$core$IFn$_invoke$arity$3 = G__7475__3;
G__7475.cljs$core$IFn$_invoke$arity$4 = G__7475__4;
G__7475.cljs$core$IFn$_invoke$arity$5 = G__7475__5;
G__7475.cljs$core$IFn$_invoke$arity$6 = G__7475__6;
G__7475.cljs$core$IFn$_invoke$arity$7 = G__7475__7;
G__7475.cljs$core$IFn$_invoke$arity$8 = G__7475__8;
G__7475.cljs$core$IFn$_invoke$arity$9 = G__7475__9;
G__7475.cljs$core$IFn$_invoke$arity$10 = G__7475__10;
G__7475.cljs$core$IFn$_invoke$arity$11 = G__7475__11;
G__7475.cljs$core$IFn$_invoke$arity$12 = G__7475__12;
G__7475.cljs$core$IFn$_invoke$arity$13 = G__7475__13;
G__7475.cljs$core$IFn$_invoke$arity$14 = G__7475__14;
G__7475.cljs$core$IFn$_invoke$arity$15 = G__7475__15;
G__7475.cljs$core$IFn$_invoke$arity$16 = G__7475__16;
G__7475.cljs$core$IFn$_invoke$arity$17 = G__7475__17;
G__7475.cljs$core$IFn$_invoke$arity$18 = G__7475__18;
G__7475.cljs$core$IFn$_invoke$arity$19 = G__7475__19;
G__7475.cljs$core$IFn$_invoke$arity$20 = G__7475__20;
G__7475.cljs$core$IFn$_invoke$arity$21 = G__7475__21;
G__7475.cljs$core$IFn$_invoke$arity$22 = G__7475__22;
return G__7475;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7010){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7010)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7243 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7243) : self__.afn.call(null,G__7243));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7244 = a;
var G__7245 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7244,G__7245) : self__.afn.call(null,G__7244,G__7245));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7246 = a;
var G__7247 = b;
var G__7248 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7246,G__7247,G__7248) : self__.afn.call(null,G__7246,G__7247,G__7248));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7249 = a;
var G__7250 = b;
var G__7251 = c;
var G__7252 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7249,G__7250,G__7251,G__7252) : self__.afn.call(null,G__7249,G__7250,G__7251,G__7252));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7253 = a;
var G__7254 = b;
var G__7255 = c;
var G__7256 = d;
var G__7257 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7253,G__7254,G__7255,G__7256,G__7257) : self__.afn.call(null,G__7253,G__7254,G__7255,G__7256,G__7257));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7258 = a;
var G__7259 = b;
var G__7260 = c;
var G__7261 = d;
var G__7262 = e;
var G__7263 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7258,G__7259,G__7260,G__7261,G__7262,G__7263) : self__.afn.call(null,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7264 = a;
var G__7265 = b;
var G__7266 = c;
var G__7267 = d;
var G__7268 = e;
var G__7269 = f;
var G__7270 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270) : self__.afn.call(null,G__7264,G__7265,G__7266,G__7267,G__7268,G__7269,G__7270));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7271 = a;
var G__7272 = b;
var G__7273 = c;
var G__7274 = d;
var G__7275 = e;
var G__7276 = f;
var G__7277 = g;
var G__7278 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278) : self__.afn.call(null,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7279 = a;
var G__7280 = b;
var G__7281 = c;
var G__7282 = d;
var G__7283 = e;
var G__7284 = f;
var G__7285 = g;
var G__7286 = h;
var G__7287 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287) : self__.afn.call(null,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286,G__7287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7288 = a;
var G__7289 = b;
var G__7290 = c;
var G__7291 = d;
var G__7292 = e;
var G__7293 = f;
var G__7294 = g;
var G__7295 = h;
var G__7296 = i;
var G__7297 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297) : self__.afn.call(null,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7298 = a;
var G__7299 = b;
var G__7300 = c;
var G__7301 = d;
var G__7302 = e;
var G__7303 = f;
var G__7304 = g;
var G__7305 = h;
var G__7306 = i;
var G__7307 = j;
var G__7308 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308) : self__.afn.call(null,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7309 = a;
var G__7310 = b;
var G__7311 = c;
var G__7312 = d;
var G__7313 = e;
var G__7314 = f;
var G__7315 = g;
var G__7316 = h;
var G__7317 = i;
var G__7318 = j;
var G__7319 = k;
var G__7320 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320) : self__.afn.call(null,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317,G__7318,G__7319,G__7320));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7321 = a;
var G__7322 = b;
var G__7323 = c;
var G__7324 = d;
var G__7325 = e;
var G__7326 = f;
var G__7327 = g;
var G__7328 = h;
var G__7329 = i;
var G__7330 = j;
var G__7331 = k;
var G__7332 = l;
var G__7333 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329,G__7330,G__7331,G__7332,G__7333) : self__.afn.call(null,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329,G__7330,G__7331,G__7332,G__7333));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7334 = a;
var G__7335 = b;
var G__7336 = c;
var G__7337 = d;
var G__7338 = e;
var G__7339 = f;
var G__7340 = g;
var G__7341 = h;
var G__7342 = i;
var G__7343 = j;
var G__7344 = k;
var G__7345 = l;
var G__7346 = m;
var G__7347 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347) : self__.afn.call(null,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7348 = a;
var G__7349 = b;
var G__7350 = c;
var G__7351 = d;
var G__7352 = e;
var G__7353 = f;
var G__7354 = g;
var G__7355 = h;
var G__7356 = i;
var G__7357 = j;
var G__7358 = k;
var G__7359 = l;
var G__7360 = m;
var G__7361 = n;
var G__7362 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362) : self__.afn.call(null,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7363 = a;
var G__7364 = b;
var G__7365 = c;
var G__7366 = d;
var G__7367 = e;
var G__7368 = f;
var G__7369 = g;
var G__7370 = h;
var G__7371 = i;
var G__7372 = j;
var G__7373 = k;
var G__7374 = l;
var G__7375 = m;
var G__7376 = n;
var G__7377 = o;
var G__7378 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378) : self__.afn.call(null,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7379 = a;
var G__7380 = b;
var G__7381 = c;
var G__7382 = d;
var G__7383 = e;
var G__7384 = f;
var G__7385 = g;
var G__7386 = h;
var G__7387 = i;
var G__7388 = j;
var G__7389 = k;
var G__7390 = l;
var G__7391 = m;
var G__7392 = n;
var G__7393 = o;
var G__7394 = p;
var G__7395 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395) : self__.afn.call(null,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7396 = a;
var G__7397 = b;
var G__7398 = c;
var G__7399 = d;
var G__7400 = e;
var G__7401 = f;
var G__7402 = g;
var G__7403 = h;
var G__7404 = i;
var G__7405 = j;
var G__7406 = k;
var G__7407 = l;
var G__7408 = m;
var G__7409 = n;
var G__7410 = o;
var G__7411 = p;
var G__7412 = q;
var G__7413 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413) : self__.afn.call(null,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7414 = a;
var G__7415 = b;
var G__7416 = c;
var G__7417 = d;
var G__7418 = e;
var G__7419 = f;
var G__7420 = g;
var G__7421 = h;
var G__7422 = i;
var G__7423 = j;
var G__7424 = k;
var G__7425 = l;
var G__7426 = m;
var G__7427 = n;
var G__7428 = o;
var G__7429 = p;
var G__7430 = q;
var G__7431 = r;
var G__7432 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421,G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432) : self__.afn.call(null,G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421,G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7433 = a;
var G__7434 = b;
var G__7435 = c;
var G__7436 = d;
var G__7437 = e;
var G__7438 = f;
var G__7439 = g;
var G__7440 = h;
var G__7441 = i;
var G__7442 = j;
var G__7443 = k;
var G__7444 = l;
var G__7445 = m;
var G__7446 = n;
var G__7447 = o;
var G__7448 = p;
var G__7449 = q;
var G__7450 = r;
var G__7451 = s;
var G__7452 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440,G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452) : self__.afn.call(null,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440,G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7453 = self__.afn;
var G__7454 = a;
var G__7455 = b;
var G__7456 = c;
var G__7457 = d;
var G__7458 = e;
var G__7459 = f;
var G__7460 = g;
var G__7461 = h;
var G__7462 = i;
var G__7463 = j;
var G__7464 = k;
var G__7465 = l;
var G__7466 = m;
var G__7467 = n;
var G__7468 = o;
var G__7469 = p;
var G__7470 = q;
var G__7471 = r;
var G__7472 = s;
var G__7473 = t;
var G__7474 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460,G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470,G__7471,G__7472,G__7473,G__7474) : cljs.core.apply.call(null,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460,G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469,G__7470,G__7471,G__7472,G__7473,G__7474));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7479 = o;
if(G__7479){
var bit__4767__auto__ = (G__7479.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4767__auto__) || (G__7479.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7479.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7479);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7479);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__4081__auto__ = !((o == null));
if(and__4081__auto__){
var G__7483 = o;
if(G__7483){
var bit__4767__auto__ = (G__7483.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4767__auto__) || (G__7483.cljs$core$IMeta$)){
return true;
} else {
if((!G__7483.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7483);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7483);
}
} else {
return and__4081__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__7486__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7487 = ret;
var G__7488 = cljs.core.first(ks);
var G__7489 = cljs.core.next(ks);
coll = G__7487;
k = G__7488;
ks = G__7489;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7486 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7490__i = 0, G__7490__a = new Array(arguments.length -  2);
while (G__7490__i < G__7490__a.length) {G__7490__a[G__7490__i] = arguments[G__7490__i + 2]; ++G__7490__i;}
  ks = new cljs.core.IndexedSeq(G__7490__a,0);
} 
return G__7486__delegate.call(this,coll,k,ks);};
G__7486.cljs$lang$maxFixedArity = 2;
G__7486.cljs$lang$applyTo = (function (arglist__7491){
var coll = cljs.core.first(arglist__7491);
arglist__7491 = cljs.core.next(arglist__7491);
var k = cljs.core.first(arglist__7491);
var ks = cljs.core.rest(arglist__7491);
return G__7486__delegate(coll,k,ks);
});
G__7486.cljs$core$IFn$_invoke$arity$variadic = G__7486__delegate;
return G__7486;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__7492 = null;
if (arguments.length > 2) {
var G__7493__i = 0, G__7493__a = new Array(arguments.length -  2);
while (G__7493__i < G__7493__a.length) {G__7493__a[G__7493__i] = arguments[G__7493__i + 2]; ++G__7493__i;}
G__7492 = new cljs.core.IndexedSeq(G__7493__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7495 = x;
if(G__7495){
var bit__4767__auto__ = (G__7495.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4767__auto__) || (G__7495.cljs$core$ICollection$)){
return true;
} else {
if((!G__7495.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7495);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7495);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7497 = x;
if(G__7497){
var bit__4767__auto__ = (G__7497.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4767__auto__) || (G__7497.cljs$core$ISet$)){
return true;
} else {
if((!G__7497.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7497);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7497);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__7499 = x;
if(G__7499){
var bit__4767__auto__ = (G__7499.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4767__auto__) || (G__7499.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7499.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7499);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__7501 = x;
if(G__7501){
var bit__4767__auto__ = (G__7501.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4767__auto__) || (G__7501.cljs$core$ISequential$)){
return true;
} else {
if((!G__7501.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7501);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7501);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__7503 = x;
if(G__7503){
var bit__4767__auto__ = (G__7503.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4767__auto__) || (G__7503.cljs$core$ISorted$)){
return true;
} else {
if((!G__7503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7503);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__7505 = x;
if(G__7505){
var bit__4767__auto__ = (G__7505.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4767__auto__) || (G__7505.cljs$core$IReduce$)){
return true;
} else {
if((!G__7505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7505);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7507 = x;
if(G__7507){
var bit__4767__auto__ = (G__7507.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4767__auto__) || (G__7507.cljs$core$IMap$)){
return true;
} else {
if((!G__7507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7507);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__7509 = x;
if(G__7509){
var bit__4767__auto__ = (G__7509.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4767__auto__) || (G__7509.cljs$core$IVector$)){
return true;
} else {
if((!G__7509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7509);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__7511 = x;
if(G__7511){
var bit__4760__auto__ = (G__7511.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4760__auto__) || (G__7511.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj7517 = {};
return obj7517;
});
var cljs$core$js_obj__1 = (function() { 
var G__7520__delegate = function (keyvals){
var G__7518 = goog.object.create;
var G__7519 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7518,G__7519) : cljs.core.apply.call(null,G__7518,G__7519));
};
var G__7520 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7521__i = 0, G__7521__a = new Array(arguments.length -  0);
while (G__7521__i < G__7521__a.length) {G__7521__a[G__7521__i] = arguments[G__7521__i + 0]; ++G__7521__i;}
  keyvals = new cljs.core.IndexedSeq(G__7521__a,0);
} 
return G__7520__delegate.call(this,keyvals);};
G__7520.cljs$lang$maxFixedArity = 0;
G__7520.cljs$lang$applyTo = (function (arglist__7522){
var keyvals = cljs.core.seq(arglist__7522);
return G__7520__delegate(keyvals);
});
G__7520.cljs$core$IFn$_invoke$arity$variadic = G__7520__delegate;
return G__7520;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__7523 = null;
if (arguments.length > 0) {
var G__7524__i = 0, G__7524__a = new Array(arguments.length -  0);
while (G__7524__i < G__7524__a.length) {G__7524__a[G__7524__i] = arguments[G__7524__i + 0]; ++G__7524__i;}
G__7523 = new cljs.core.IndexedSeq(G__7524__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__7527_7529 = obj;
var G__7528_7530 = ((function (G__7527_7529,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7527_7529,keys))
;
goog.object.forEach(G__7527_7529,G__7528_7530);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7531 = (i__$1 + (1));
var G__7532 = (j__$1 + (1));
var G__7533 = (len__$1 - (1));
i__$1 = G__7531;
j__$1 = G__7532;
len__$1 = G__7533;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7534 = (i__$1 - (1));
var G__7535 = (j__$1 - (1));
var G__7536 = (len__$1 - (1));
i__$1 = G__7534;
j__$1 = G__7535;
len__$1 = G__7536;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7538 = {};
return obj7538;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7540 = s;
if(G__7540){
var bit__4767__auto__ = (G__7540.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4767__auto__) || (G__7540.cljs$core$ISeq$)){
return true;
} else {
if((!G__7540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7540);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__7542 = s;
if(G__7542){
var bit__4767__auto__ = (G__7542.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4767__auto__) || (G__7542.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7542.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7542);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__4093__auto__ = cljs.core.fn_QMARK_(f);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var G__7546 = f;
if(G__7546){
var bit__4767__auto__ = (G__7546.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4767__auto__) || (G__7546.cljs$core$IFn$)){
return true;
} else {
if((!G__7546.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7546);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7559 = n;
return isNaN(G__7559);
})())) && (!((n === Infinity))) && (((function (){var G__7560 = n;
return parseFloat(G__7560);
})() === (function (){var G__7561 = n;
var G__7562 = (10);
return parseInt(G__7561,G__7562);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__7563__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7564 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7565 = etc;
s = G__7564;
xs = G__7565;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7566__i = 0, G__7566__a = new Array(arguments.length -  2);
while (G__7566__i < G__7566__a.length) {G__7566__a[G__7566__i] = arguments[G__7566__i + 2]; ++G__7566__i;}
  more = new cljs.core.IndexedSeq(G__7566__a,0);
} 
return G__7563__delegate.call(this,x,y,more);};
G__7563.cljs$lang$maxFixedArity = 2;
G__7563.cljs$lang$applyTo = (function (arglist__7567){
var x = cljs.core.first(arglist__7567);
arglist__7567 = cljs.core.next(arglist__7567);
var y = cljs.core.first(arglist__7567);
var more = cljs.core.rest(arglist__7567);
return G__7563__delegate(x,y,more);
});
G__7563.cljs$core$IFn$_invoke$arity$variadic = G__7563__delegate;
return G__7563;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__7568 = null;
if (arguments.length > 2) {
var G__7569__i = 0, G__7569__a = new Array(arguments.length -  2);
while (G__7569__i < G__7569__a.length) {G__7569__a[G__7569__i] = arguments[G__7569__i + 2]; ++G__7569__i;}
G__7568 = new cljs.core.IndexedSeq(G__7569__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7573 = x;
if(G__7573){
var bit__4760__auto__ = (G__7573.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4760__auto__) || (G__7573.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7574 = x;
var G__7575 = y;
return goog.array.defaultCompare(G__7574,G__7575);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7580 = xs;
var G__7581 = ys;
var G__7582 = len;
var G__7583 = (n + (1));
xs = G__7580;
ys = G__7581;
len = G__7582;
n = G__7583;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7588 = x;
var G__7589 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7588,G__7589) : f.call(null,G__7588,G__7589));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7590 = y;
var G__7591 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7590,G__7591) : f.call(null,G__7590,G__7591));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7597 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7597) : cljs.core.to_array.call(null,G__7597));
})();
var G__7598_7600 = a;
var G__7599_7601 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7598_7600,G__7599_7601);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7607 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7607) : keyfn.call(null,G__7607));
})(),(function (){var G__7608 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7608) : keyfn.call(null,G__7608));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7614 = f;
var G__7615 = cljs.core.first(s);
var G__7616 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7614,G__7615,G__7616) : cljs.core.reduce.call(null,G__7614,G__7615,G__7616));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7617 = val__$1;
var G__7618 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7617,G__7618) : f.call(null,G__7617,G__7618));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7619 = nval;
var G__7620 = cljs.core.next(coll__$1);
val__$1 = G__7619;
coll__$1 = G__7620;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__7624 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7624) : cljs.core.to_array.call(null,G__7624));
})();
var G__7625_7627 = a;
goog.array.shuffle(G__7625_7627);

var G__7626 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7626) : cljs.core.vec.call(null,G__7626));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__7630 = coll;
if(G__7630){
var bit__4760__auto__ = (G__7630.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4760__auto__) || (G__7630.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__7631 = coll;
if(G__7631){
var bit__4760__auto__ = (G__7631.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4760__auto__) || (G__7631.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__7640 = null;
var G__7640__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7640__1 = (function (x){
var G__7637 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7637) : cf.call(null,G__7637));
});
var G__7640__2 = (function (x,y){
var G__7638 = x;
var G__7639 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7638,G__7639) : f.call(null,G__7638,G__7639));
});
G__7640 = function(x,y){
switch(arguments.length){
case 0:
return G__7640__0.call(this);
case 1:
return G__7640__1.call(this,x);
case 2:
return G__7640__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7640.cljs$core$IFn$_invoke$arity$0 = G__7640__0;
G__7640.cljs$core$IFn$_invoke$arity$1 = G__7640__1;
G__7640.cljs$core$IFn$_invoke$arity$2 = G__7640__2;
return G__7640;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7647 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7647) : xform.call(null,G__7647));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7648 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7648) : f__$1.call(null,G__7648));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__7649__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__7649 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7650__i = 0, G__7650__a = new Array(arguments.length -  2);
while (G__7650__i < G__7650__a.length) {G__7650__a[G__7650__i] = arguments[G__7650__i + 2]; ++G__7650__i;}
  more = new cljs.core.IndexedSeq(G__7650__a,0);
} 
return G__7649__delegate.call(this,x,y,more);};
G__7649.cljs$lang$maxFixedArity = 2;
G__7649.cljs$lang$applyTo = (function (arglist__7651){
var x = cljs.core.first(arglist__7651);
arglist__7651 = cljs.core.next(arglist__7651);
var y = cljs.core.first(arglist__7651);
var more = cljs.core.rest(arglist__7651);
return G__7649__delegate(x,y,more);
});
G__7649.cljs$core$IFn$_invoke$arity$variadic = G__7649__delegate;
return G__7649;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__7652 = null;
if (arguments.length > 2) {
var G__7653__i = 0, G__7653__a = new Array(arguments.length -  2);
while (G__7653__i < G__7653__a.length) {G__7653__a[G__7653__i] = arguments[G__7653__i + 2]; ++G__7653__i;}
G__7652 = new cljs.core.IndexedSeq(G__7653__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__7654__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__7654 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7655__i = 0, G__7655__a = new Array(arguments.length -  2);
while (G__7655__i < G__7655__a.length) {G__7655__a[G__7655__i] = arguments[G__7655__i + 2]; ++G__7655__i;}
  more = new cljs.core.IndexedSeq(G__7655__a,0);
} 
return G__7654__delegate.call(this,x,y,more);};
G__7654.cljs$lang$maxFixedArity = 2;
G__7654.cljs$lang$applyTo = (function (arglist__7656){
var x = cljs.core.first(arglist__7656);
arglist__7656 = cljs.core.next(arglist__7656);
var y = cljs.core.first(arglist__7656);
var more = cljs.core.rest(arglist__7656);
return G__7654__delegate(x,y,more);
});
G__7654.cljs$core$IFn$_invoke$arity$variadic = G__7654__delegate;
return G__7654;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__7657 = null;
if (arguments.length > 2) {
var G__7658__i = 0, G__7658__a = new Array(arguments.length -  2);
while (G__7658__i < G__7658__a.length) {G__7658__a[G__7658__i] = arguments[G__7658__i + 2]; ++G__7658__i;}
G__7657 = new cljs.core.IndexedSeq(G__7658__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__7659__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__7659 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7660__i = 0, G__7660__a = new Array(arguments.length -  2);
while (G__7660__i < G__7660__a.length) {G__7660__a[G__7660__i] = arguments[G__7660__i + 2]; ++G__7660__i;}
  more = new cljs.core.IndexedSeq(G__7660__a,0);
} 
return G__7659__delegate.call(this,x,y,more);};
G__7659.cljs$lang$maxFixedArity = 2;
G__7659.cljs$lang$applyTo = (function (arglist__7661){
var x = cljs.core.first(arglist__7661);
arglist__7661 = cljs.core.next(arglist__7661);
var y = cljs.core.first(arglist__7661);
var more = cljs.core.rest(arglist__7661);
return G__7659__delegate(x,y,more);
});
G__7659.cljs$core$IFn$_invoke$arity$variadic = G__7659__delegate;
return G__7659;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__7662 = null;
if (arguments.length > 2) {
var G__7663__i = 0, G__7663__a = new Array(arguments.length -  2);
while (G__7663__i < G__7663__a.length) {G__7663__a[G__7663__i] = arguments[G__7663__i + 2]; ++G__7663__i;}
G__7662 = new cljs.core.IndexedSeq(G__7663__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__7668__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7668 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7669__i = 0, G__7669__a = new Array(arguments.length -  2);
while (G__7669__i < G__7669__a.length) {G__7669__a[G__7669__i] = arguments[G__7669__i + 2]; ++G__7669__i;}
  more = new cljs.core.IndexedSeq(G__7669__a,0);
} 
return G__7668__delegate.call(this,x,y,more);};
G__7668.cljs$lang$maxFixedArity = 2;
G__7668.cljs$lang$applyTo = (function (arglist__7670){
var x = cljs.core.first(arglist__7670);
arglist__7670 = cljs.core.next(arglist__7670);
var y = cljs.core.first(arglist__7670);
var more = cljs.core.rest(arglist__7670);
return G__7668__delegate(x,y,more);
});
G__7668.cljs$core$IFn$_invoke$arity$variadic = G__7668__delegate;
return G__7668;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__7671 = null;
if (arguments.length > 2) {
var G__7672__i = 0, G__7672__a = new Array(arguments.length -  2);
while (G__7672__i < G__7672__a.length) {G__7672__a[G__7672__i] = arguments[G__7672__i + 2]; ++G__7672__i;}
G__7671 = new cljs.core.IndexedSeq(G__7672__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__7673__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7674 = y;
var G__7675 = cljs.core.first(more);
var G__7676 = cljs.core.next(more);
x = G__7674;
y = G__7675;
more = G__7676;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7673 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7677__i = 0, G__7677__a = new Array(arguments.length -  2);
while (G__7677__i < G__7677__a.length) {G__7677__a[G__7677__i] = arguments[G__7677__i + 2]; ++G__7677__i;}
  more = new cljs.core.IndexedSeq(G__7677__a,0);
} 
return G__7673__delegate.call(this,x,y,more);};
G__7673.cljs$lang$maxFixedArity = 2;
G__7673.cljs$lang$applyTo = (function (arglist__7678){
var x = cljs.core.first(arglist__7678);
arglist__7678 = cljs.core.next(arglist__7678);
var y = cljs.core.first(arglist__7678);
var more = cljs.core.rest(arglist__7678);
return G__7673__delegate(x,y,more);
});
G__7673.cljs$core$IFn$_invoke$arity$variadic = G__7673__delegate;
return G__7673;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__7679 = null;
if (arguments.length > 2) {
var G__7680__i = 0, G__7680__a = new Array(arguments.length -  2);
while (G__7680__i < G__7680__a.length) {G__7680__a[G__7680__i] = arguments[G__7680__i + 2]; ++G__7680__i;}
G__7679 = new cljs.core.IndexedSeq(G__7680__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__7681__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7682 = y;
var G__7683 = cljs.core.first(more);
var G__7684 = cljs.core.next(more);
x = G__7682;
y = G__7683;
more = G__7684;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7681 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7685__i = 0, G__7685__a = new Array(arguments.length -  2);
while (G__7685__i < G__7685__a.length) {G__7685__a[G__7685__i] = arguments[G__7685__i + 2]; ++G__7685__i;}
  more = new cljs.core.IndexedSeq(G__7685__a,0);
} 
return G__7681__delegate.call(this,x,y,more);};
G__7681.cljs$lang$maxFixedArity = 2;
G__7681.cljs$lang$applyTo = (function (arglist__7686){
var x = cljs.core.first(arglist__7686);
arglist__7686 = cljs.core.next(arglist__7686);
var y = cljs.core.first(arglist__7686);
var more = cljs.core.rest(arglist__7686);
return G__7681__delegate(x,y,more);
});
G__7681.cljs$core$IFn$_invoke$arity$variadic = G__7681__delegate;
return G__7681;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__7687 = null;
if (arguments.length > 2) {
var G__7688__i = 0, G__7688__a = new Array(arguments.length -  2);
while (G__7688__i < G__7688__a.length) {G__7688__a[G__7688__i] = arguments[G__7688__i + 2]; ++G__7688__i;}
G__7687 = new cljs.core.IndexedSeq(G__7688__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__7689__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7690 = y;
var G__7691 = cljs.core.first(more);
var G__7692 = cljs.core.next(more);
x = G__7690;
y = G__7691;
more = G__7692;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7693__i = 0, G__7693__a = new Array(arguments.length -  2);
while (G__7693__i < G__7693__a.length) {G__7693__a[G__7693__i] = arguments[G__7693__i + 2]; ++G__7693__i;}
  more = new cljs.core.IndexedSeq(G__7693__a,0);
} 
return G__7689__delegate.call(this,x,y,more);};
G__7689.cljs$lang$maxFixedArity = 2;
G__7689.cljs$lang$applyTo = (function (arglist__7694){
var x = cljs.core.first(arglist__7694);
arglist__7694 = cljs.core.next(arglist__7694);
var y = cljs.core.first(arglist__7694);
var more = cljs.core.rest(arglist__7694);
return G__7689__delegate(x,y,more);
});
G__7689.cljs$core$IFn$_invoke$arity$variadic = G__7689__delegate;
return G__7689;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__7695 = null;
if (arguments.length > 2) {
var G__7696__i = 0, G__7696__a = new Array(arguments.length -  2);
while (G__7696__i < G__7696__a.length) {G__7696__a[G__7696__i] = arguments[G__7696__i + 2]; ++G__7696__i;}
G__7695 = new cljs.core.IndexedSeq(G__7696__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__7697__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7698 = y;
var G__7699 = cljs.core.first(more);
var G__7700 = cljs.core.next(more);
x = G__7698;
y = G__7699;
more = G__7700;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7701__i = 0, G__7701__a = new Array(arguments.length -  2);
while (G__7701__i < G__7701__a.length) {G__7701__a[G__7701__i] = arguments[G__7701__i + 2]; ++G__7701__i;}
  more = new cljs.core.IndexedSeq(G__7701__a,0);
} 
return G__7697__delegate.call(this,x,y,more);};
G__7697.cljs$lang$maxFixedArity = 2;
G__7697.cljs$lang$applyTo = (function (arglist__7702){
var x = cljs.core.first(arglist__7702);
arglist__7702 = cljs.core.next(arglist__7702);
var y = cljs.core.first(arglist__7702);
var more = cljs.core.rest(arglist__7702);
return G__7697__delegate(x,y,more);
});
G__7697.cljs$core$IFn$_invoke$arity$variadic = G__7697__delegate;
return G__7697;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__7703 = null;
if (arguments.length > 2) {
var G__7704__i = 0, G__7704__a = new Array(arguments.length -  2);
while (G__7704__i < G__7704__a.length) {G__7704__a[G__7704__i] = arguments[G__7704__i + 2]; ++G__7704__i;}
G__7703 = new cljs.core.IndexedSeq(G__7704__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4405__auto__ = x;
var y__4406__auto__ = y;
return ((x__4405__auto__ > y__4406__auto__) ? x__4405__auto__ : y__4406__auto__);
});
var cljs$core$max__3 = (function() { 
var G__7705__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4405__auto__ = x;
var y__4406__auto__ = y;
return ((x__4405__auto__ > y__4406__auto__) ? x__4405__auto__ : y__4406__auto__);
})(),more);
};
var G__7705 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7706__i = 0, G__7706__a = new Array(arguments.length -  2);
while (G__7706__i < G__7706__a.length) {G__7706__a[G__7706__i] = arguments[G__7706__i + 2]; ++G__7706__i;}
  more = new cljs.core.IndexedSeq(G__7706__a,0);
} 
return G__7705__delegate.call(this,x,y,more);};
G__7705.cljs$lang$maxFixedArity = 2;
G__7705.cljs$lang$applyTo = (function (arglist__7707){
var x = cljs.core.first(arglist__7707);
arglist__7707 = cljs.core.next(arglist__7707);
var y = cljs.core.first(arglist__7707);
var more = cljs.core.rest(arglist__7707);
return G__7705__delegate(x,y,more);
});
G__7705.cljs$core$IFn$_invoke$arity$variadic = G__7705__delegate;
return G__7705;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__7708 = null;
if (arguments.length > 2) {
var G__7709__i = 0, G__7709__a = new Array(arguments.length -  2);
while (G__7709__i < G__7709__a.length) {G__7709__a[G__7709__i] = arguments[G__7709__i + 2]; ++G__7709__i;}
G__7708 = new cljs.core.IndexedSeq(G__7709__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4412__auto__ = x;
var y__4413__auto__ = y;
return ((x__4412__auto__ < y__4413__auto__) ? x__4412__auto__ : y__4413__auto__);
});
var cljs$core$min__3 = (function() { 
var G__7710__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4412__auto__ = x;
var y__4413__auto__ = y;
return ((x__4412__auto__ < y__4413__auto__) ? x__4412__auto__ : y__4413__auto__);
})(),more);
};
var G__7710 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7711__i = 0, G__7711__a = new Array(arguments.length -  2);
while (G__7711__i < G__7711__a.length) {G__7711__a[G__7711__i] = arguments[G__7711__i + 2]; ++G__7711__i;}
  more = new cljs.core.IndexedSeq(G__7711__a,0);
} 
return G__7710__delegate.call(this,x,y,more);};
G__7710.cljs$lang$maxFixedArity = 2;
G__7710.cljs$lang$applyTo = (function (arglist__7712){
var x = cljs.core.first(arglist__7712);
arglist__7712 = cljs.core.next(arglist__7712);
var y = cljs.core.first(arglist__7712);
var more = cljs.core.rest(arglist__7712);
return G__7710__delegate(x,y,more);
});
G__7710.cljs$core$IFn$_invoke$arity$variadic = G__7710__delegate;
return G__7710;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__7713 = null;
if (arguments.length > 2) {
var G__7714__i = 0, G__7714__a = new Array(arguments.length -  2);
while (G__7714__i < G__7714__a.length) {G__7714__a[G__7714__i] = arguments[G__7714__i + 2]; ++G__7714__i;}
G__7713 = new cljs.core.IndexedSeq(G__7714__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__7715__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__7715 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7716__i = 0, G__7716__a = new Array(arguments.length -  2);
while (G__7716__i < G__7716__a.length) {G__7716__a[G__7716__i] = arguments[G__7716__i + 2]; ++G__7716__i;}
  more = new cljs.core.IndexedSeq(G__7716__a,0);
} 
return G__7715__delegate.call(this,x,y,more);};
G__7715.cljs$lang$maxFixedArity = 2;
G__7715.cljs$lang$applyTo = (function (arglist__7717){
var x = cljs.core.first(arglist__7717);
arglist__7717 = cljs.core.next(arglist__7717);
var y = cljs.core.first(arglist__7717);
var more = cljs.core.rest(arglist__7717);
return G__7715__delegate(x,y,more);
});
G__7715.cljs$core$IFn$_invoke$arity$variadic = G__7715__delegate;
return G__7715;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__7718 = null;
if (arguments.length > 2) {
var G__7719__i = 0, G__7719__a = new Array(arguments.length -  2);
while (G__7719__i < G__7719__a.length) {G__7719__a[G__7719__i] = arguments[G__7719__i + 2]; ++G__7719__i;}
G__7718 = new cljs.core.IndexedSeq(G__7719__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__7720__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__7720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7721__i = 0, G__7721__a = new Array(arguments.length -  2);
while (G__7721__i < G__7721__a.length) {G__7721__a[G__7721__i] = arguments[G__7721__i + 2]; ++G__7721__i;}
  more = new cljs.core.IndexedSeq(G__7721__a,0);
} 
return G__7720__delegate.call(this,x,y,more);};
G__7720.cljs$lang$maxFixedArity = 2;
G__7720.cljs$lang$applyTo = (function (arglist__7722){
var x = cljs.core.first(arglist__7722);
arglist__7722 = cljs.core.next(arglist__7722);
var y = cljs.core.first(arglist__7722);
var more = cljs.core.rest(arglist__7722);
return G__7720__delegate(x,y,more);
});
G__7720.cljs$core$IFn$_invoke$arity$variadic = G__7720__delegate;
return G__7720;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__7723 = null;
if (arguments.length > 2) {
var G__7724__i = 0, G__7724__a = new Array(arguments.length -  2);
while (G__7724__i < G__7724__a.length) {G__7724__a[G__7724__i] = arguments[G__7724__i + 2]; ++G__7724__i;}
G__7723 = new cljs.core.IndexedSeq(G__7724__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__7729__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7729 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7730__i = 0, G__7730__a = new Array(arguments.length -  2);
while (G__7730__i < G__7730__a.length) {G__7730__a[G__7730__i] = arguments[G__7730__i + 2]; ++G__7730__i;}
  more = new cljs.core.IndexedSeq(G__7730__a,0);
} 
return G__7729__delegate.call(this,x,y,more);};
G__7729.cljs$lang$maxFixedArity = 2;
G__7729.cljs$lang$applyTo = (function (arglist__7731){
var x = cljs.core.first(arglist__7731);
arglist__7731 = cljs.core.next(arglist__7731);
var y = cljs.core.first(arglist__7731);
var more = cljs.core.rest(arglist__7731);
return G__7729__delegate(x,y,more);
});
G__7729.cljs$core$IFn$_invoke$arity$variadic = G__7729__delegate;
return G__7729;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__7732 = null;
if (arguments.length > 2) {
var G__7733__i = 0, G__7733__a = new Array(arguments.length -  2);
while (G__7733__i < G__7733__a.length) {G__7733__a[G__7733__i] = arguments[G__7733__i + 2]; ++G__7733__i;}
G__7732 = new cljs.core.IndexedSeq(G__7733__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__7734__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__7734 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7735__i = 0, G__7735__a = new Array(arguments.length -  2);
while (G__7735__i < G__7735__a.length) {G__7735__a[G__7735__i] = arguments[G__7735__i + 2]; ++G__7735__i;}
  more = new cljs.core.IndexedSeq(G__7735__a,0);
} 
return G__7734__delegate.call(this,x,y,more);};
G__7734.cljs$lang$maxFixedArity = 2;
G__7734.cljs$lang$applyTo = (function (arglist__7736){
var x = cljs.core.first(arglist__7736);
arglist__7736 = cljs.core.next(arglist__7736);
var y = cljs.core.first(arglist__7736);
var more = cljs.core.rest(arglist__7736);
return G__7734__delegate(x,y,more);
});
G__7734.cljs$core$IFn$_invoke$arity$variadic = G__7734__delegate;
return G__7734;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__7737 = null;
if (arguments.length > 2) {
var G__7738__i = 0, G__7738__a = new Array(arguments.length -  2);
while (G__7738__i < G__7738__a.length) {G__7738__a[G__7738__i] = arguments[G__7738__i + 2]; ++G__7738__i;}
G__7737 = new cljs.core.IndexedSeq(G__7738__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7737);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__7739__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__7739 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7740__i = 0, G__7740__a = new Array(arguments.length -  2);
while (G__7740__i < G__7740__a.length) {G__7740__a[G__7740__i] = arguments[G__7740__i + 2]; ++G__7740__i;}
  more = new cljs.core.IndexedSeq(G__7740__a,0);
} 
return G__7739__delegate.call(this,x,y,more);};
G__7739.cljs$lang$maxFixedArity = 2;
G__7739.cljs$lang$applyTo = (function (arglist__7741){
var x = cljs.core.first(arglist__7741);
arglist__7741 = cljs.core.next(arglist__7741);
var y = cljs.core.first(arglist__7741);
var more = cljs.core.rest(arglist__7741);
return G__7739__delegate(x,y,more);
});
G__7739.cljs$core$IFn$_invoke$arity$variadic = G__7739__delegate;
return G__7739;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__7742 = null;
if (arguments.length > 2) {
var G__7743__i = 0, G__7743__a = new Array(arguments.length -  2);
while (G__7743__i < G__7743__a.length) {G__7743__a[G__7743__i] = arguments[G__7743__i + 2]; ++G__7743__i;}
G__7742 = new cljs.core.IndexedSeq(G__7743__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__7746 = x;
var G__7747 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7746,G__7747) : cljs.core.mod.call(null,G__7746,G__7747));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__7748__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__7748 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7749__i = 0, G__7749__a = new Array(arguments.length -  2);
while (G__7749__i < G__7749__a.length) {G__7749__a[G__7749__i] = arguments[G__7749__i + 2]; ++G__7749__i;}
  more = new cljs.core.IndexedSeq(G__7749__a,0);
} 
return G__7748__delegate.call(this,x,y,more);};
G__7748.cljs$lang$maxFixedArity = 2;
G__7748.cljs$lang$applyTo = (function (arglist__7750){
var x = cljs.core.first(arglist__7750);
arglist__7750 = cljs.core.next(arglist__7750);
var y = cljs.core.first(arglist__7750);
var more = cljs.core.rest(arglist__7750);
return G__7748__delegate(x,y,more);
});
G__7748.cljs$core$IFn$_invoke$arity$variadic = G__7748__delegate;
return G__7748;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__7751 = null;
if (arguments.length > 2) {
var G__7752__i = 0, G__7752__a = new Array(arguments.length -  2);
while (G__7752__i < G__7752__a.length) {G__7752__a[G__7752__i] = arguments[G__7752__i + 2]; ++G__7752__i;}
G__7751 = new cljs.core.IndexedSeq(G__7752__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__7753__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__7753 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7754__i = 0, G__7754__a = new Array(arguments.length -  2);
while (G__7754__i < G__7754__a.length) {G__7754__a[G__7754__i] = arguments[G__7754__i + 2]; ++G__7754__i;}
  more = new cljs.core.IndexedSeq(G__7754__a,0);
} 
return G__7753__delegate.call(this,x,y,more);};
G__7753.cljs$lang$maxFixedArity = 2;
G__7753.cljs$lang$applyTo = (function (arglist__7755){
var x = cljs.core.first(arglist__7755);
arglist__7755 = cljs.core.next(arglist__7755);
var y = cljs.core.first(arglist__7755);
var more = cljs.core.rest(arglist__7755);
return G__7753__delegate(x,y,more);
});
G__7753.cljs$core$IFn$_invoke$arity$variadic = G__7753__delegate;
return G__7753;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__7756 = null;
if (arguments.length > 2) {
var G__7757__i = 0, G__7757__a = new Array(arguments.length -  2);
while (G__7757__i < G__7757__a.length) {G__7757__a[G__7757__i] = arguments[G__7757__i + 2]; ++G__7757__i;}
G__7756 = new cljs.core.IndexedSeq(G__7757__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__7760 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7760) : Math.floor.call(null,G__7760));
} else {
var G__7761 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7761) : Math.ceil.call(null,G__7761));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__7762__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__7762 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7763__i = 0, G__7763__a = new Array(arguments.length -  2);
while (G__7763__i < G__7763__a.length) {G__7763__a[G__7763__i] = arguments[G__7763__i + 2]; ++G__7763__i;}
  more = new cljs.core.IndexedSeq(G__7763__a,0);
} 
return G__7762__delegate.call(this,x,y,more);};
G__7762.cljs$lang$maxFixedArity = 2;
G__7762.cljs$lang$applyTo = (function (arglist__7764){
var x = cljs.core.first(arglist__7764);
arglist__7764 = cljs.core.next(arglist__7764);
var y = cljs.core.first(arglist__7764);
var more = cljs.core.rest(arglist__7764);
return G__7762__delegate(x,y,more);
});
G__7762.cljs$core$IFn$_invoke$arity$variadic = G__7762__delegate;
return G__7762;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__7765 = null;
if (arguments.length > 2) {
var G__7766__i = 0, G__7766__a = new Array(arguments.length -  2);
while (G__7766__i < G__7766__a.length) {G__7766__a[G__7766__i] = arguments[G__7766__i + 2]; ++G__7766__i;}
G__7765 = new cljs.core.IndexedSeq(G__7766__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__7767__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__7767 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7768__i = 0, G__7768__a = new Array(arguments.length -  2);
while (G__7768__i < G__7768__a.length) {G__7768__a[G__7768__i] = arguments[G__7768__i + 2]; ++G__7768__i;}
  more = new cljs.core.IndexedSeq(G__7768__a,0);
} 
return G__7767__delegate.call(this,x,y,more);};
G__7767.cljs$lang$maxFixedArity = 2;
G__7767.cljs$lang$applyTo = (function (arglist__7769){
var x = cljs.core.first(arglist__7769);
arglist__7769 = cljs.core.next(arglist__7769);
var y = cljs.core.first(arglist__7769);
var more = cljs.core.rest(arglist__7769);
return G__7767__delegate(x,y,more);
});
G__7767.cljs$core$IFn$_invoke$arity$variadic = G__7767__delegate;
return G__7767;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__7770 = null;
if (arguments.length > 2) {
var G__7771__i = 0, G__7771__a = new Array(arguments.length -  2);
while (G__7771__i < G__7771__a.length) {G__7771__a[G__7771__i] = arguments[G__7771__i + 2]; ++G__7771__i;}
G__7770 = new cljs.core.IndexedSeq(G__7771__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__7772__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__7772 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7773__i = 0, G__7773__a = new Array(arguments.length -  2);
while (G__7773__i < G__7773__a.length) {G__7773__a[G__7773__i] = arguments[G__7773__i + 2]; ++G__7773__i;}
  more = new cljs.core.IndexedSeq(G__7773__a,0);
} 
return G__7772__delegate.call(this,x,y,more);};
G__7772.cljs$lang$maxFixedArity = 2;
G__7772.cljs$lang$applyTo = (function (arglist__7774){
var x = cljs.core.first(arglist__7774);
arglist__7774 = cljs.core.next(arglist__7774);
var y = cljs.core.first(arglist__7774);
var more = cljs.core.rest(arglist__7774);
return G__7772__delegate(x,y,more);
});
G__7772.cljs$core$IFn$_invoke$arity$variadic = G__7772__delegate;
return G__7772;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__7775 = null;
if (arguments.length > 2) {
var G__7776__i = 0, G__7776__a = new Array(arguments.length -  2);
while (G__7776__i < G__7776__a.length) {G__7776__a[G__7776__i] = arguments[G__7776__i + 2]; ++G__7776__i;}
G__7775 = new cljs.core.IndexedSeq(G__7776__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__7777__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__7777 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7778__i = 0, G__7778__a = new Array(arguments.length -  2);
while (G__7778__i < G__7778__a.length) {G__7778__a[G__7778__i] = arguments[G__7778__i + 2]; ++G__7778__i;}
  more = new cljs.core.IndexedSeq(G__7778__a,0);
} 
return G__7777__delegate.call(this,x,y,more);};
G__7777.cljs$lang$maxFixedArity = 2;
G__7777.cljs$lang$applyTo = (function (arglist__7779){
var x = cljs.core.first(arglist__7779);
arglist__7779 = cljs.core.next(arglist__7779);
var y = cljs.core.first(arglist__7779);
var more = cljs.core.rest(arglist__7779);
return G__7777__delegate(x,y,more);
});
G__7777.cljs$core$IFn$_invoke$arity$variadic = G__7777__delegate;
return G__7777;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__7780 = null;
if (arguments.length > 2) {
var G__7781__i = 0, G__7781__a = new Array(arguments.length -  2);
while (G__7781__i < G__7781__a.length) {G__7781__a[G__7781__i] = arguments[G__7781__i + 2]; ++G__7781__i;}
G__7780 = new cljs.core.IndexedSeq(G__7781__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__7786__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7787 = y;
var G__7788 = cljs.core.first(more);
var G__7789 = cljs.core.next(more);
x = G__7787;
y = G__7788;
more = G__7789;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7786 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7790__i = 0, G__7790__a = new Array(arguments.length -  2);
while (G__7790__i < G__7790__a.length) {G__7790__a[G__7790__i] = arguments[G__7790__i + 2]; ++G__7790__i;}
  more = new cljs.core.IndexedSeq(G__7790__a,0);
} 
return G__7786__delegate.call(this,x,y,more);};
G__7786.cljs$lang$maxFixedArity = 2;
G__7786.cljs$lang$applyTo = (function (arglist__7791){
var x = cljs.core.first(arglist__7791);
arglist__7791 = cljs.core.next(arglist__7791);
var y = cljs.core.first(arglist__7791);
var more = cljs.core.rest(arglist__7791);
return G__7786__delegate(x,y,more);
});
G__7786.cljs$core$IFn$_invoke$arity$variadic = G__7786__delegate;
return G__7786;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__7792 = null;
if (arguments.length > 2) {
var G__7793__i = 0, G__7793__a = new Array(arguments.length -  2);
while (G__7793__i < G__7793__a.length) {G__7793__a[G__7793__i] = arguments[G__7793__i + 2]; ++G__7793__i;}
G__7792 = new cljs.core.IndexedSeq(G__7793__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7792);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7794 = (n__$1 - (1));
var G__7795 = cljs.core.next(xs);
n__$1 = G__7794;
xs = G__7795;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7799 = x;
return goog.string.buildString(G__7799);
}
});
var cljs$core$str__2 = (function() { 
var G__7800__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7801 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7802 = cljs.core.next(more);
sb = G__7801;
more = G__7802;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7800 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7803__i = 0, G__7803__a = new Array(arguments.length -  1);
while (G__7803__i < G__7803__a.length) {G__7803__a[G__7803__i] = arguments[G__7803__i + 1]; ++G__7803__i;}
  ys = new cljs.core.IndexedSeq(G__7803__a,0);
} 
return G__7800__delegate.call(this,x,ys);};
G__7800.cljs$lang$maxFixedArity = 1;
G__7800.cljs$lang$applyTo = (function (arglist__7804){
var x = cljs.core.first(arglist__7804);
var ys = cljs.core.rest(arglist__7804);
return G__7800__delegate(x,ys);
});
G__7800.cljs$core$IFn$_invoke$arity$variadic = G__7800__delegate;
return G__7800;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__7805 = null;
if (arguments.length > 1) {
var G__7806__i = 0, G__7806__a = new Array(arguments.length -  1);
while (G__7806__i < G__7806__a.length) {G__7806__a[G__7806__i] = arguments[G__7806__i + 1]; ++G__7806__i;}
G__7805 = new cljs.core.IndexedSeq(G__7806__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7807 = cljs.core.next(xs);
var G__7808 = cljs.core.next(ys);
xs = G__7807;
ys = G__7808;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7809 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7810 = cljs.core.next(s);
res = G__7809;
s = G__7810;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7815 = ((h + (cljs.core.hash((function (){var G__7813 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7813) : cljs.core.key.call(null,G__7813));
})()) ^ cljs.core.hash((function (){var G__7814 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7814) : cljs.core.val.call(null,G__7814));
})()))) % (4503599627370496));
var G__7816 = cljs.core.next(s);
h = G__7815;
s = G__7816;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7817 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7818 = cljs.core.next(s__$1);
h = G__7817;
s__$1 = G__7818;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__7829_7839 = cljs.core.seq(fn_map);
var chunk__7830_7840 = null;
var count__7831_7841 = (0);
var i__7832_7842 = (0);
while(true){
if((i__7832_7842 < count__7831_7841)){
var vec__7833_7843 = chunk__7830_7840.cljs$core$IIndexed$_nth$arity$2(null,i__7832_7842);
var key_name_7844 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7833_7843,(0),null);
var f_7845 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7833_7843,(1),null);
var str_name_7846 = (function (){var G__7834 = key_name_7844;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7834) : cljs.core.name.call(null,G__7834));
})();
(obj[str_name_7846] = f_7845);

var G__7847 = seq__7829_7839;
var G__7848 = chunk__7830_7840;
var G__7849 = count__7831_7841;
var G__7850 = (i__7832_7842 + (1));
seq__7829_7839 = G__7847;
chunk__7830_7840 = G__7848;
count__7831_7841 = G__7849;
i__7832_7842 = G__7850;
continue;
} else {
var temp__4126__auto___7851 = cljs.core.seq(seq__7829_7839);
if(temp__4126__auto___7851){
var seq__7829_7852__$1 = temp__4126__auto___7851;
if(cljs.core.chunked_seq_QMARK_(seq__7829_7852__$1)){
var c__4878__auto___7853 = (function (){var G__7835 = seq__7829_7852__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7835) : cljs.core.chunk_first.call(null,G__7835));
})();
var G__7854 = (function (){var G__7836 = seq__7829_7852__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7836) : cljs.core.chunk_rest.call(null,G__7836));
})();
var G__7855 = c__4878__auto___7853;
var G__7856 = cljs.core.count(c__4878__auto___7853);
var G__7857 = (0);
seq__7829_7839 = G__7854;
chunk__7830_7840 = G__7855;
count__7831_7841 = G__7856;
i__7832_7842 = G__7857;
continue;
} else {
var vec__7837_7858 = cljs.core.first(seq__7829_7852__$1);
var key_name_7859 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7837_7858,(0),null);
var f_7860 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7837_7858,(1),null);
var str_name_7861 = (function (){var G__7838 = key_name_7859;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7838) : cljs.core.name.call(null,G__7838));
})();
(obj[str_name_7861] = f_7860);

var G__7862 = cljs.core.next(seq__7829_7852__$1);
var G__7863 = null;
var G__7864 = (0);
var G__7865 = (0);
seq__7829_7839 = G__7862;
chunk__7830_7840 = G__7863;
count__7831_7841 = G__7864;
i__7832_7842 = G__7865;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__7867 = coll;
if(G__7867){
var bit__4767__auto__ = (G__7867.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4767__auto__) || (G__7867.cljs$core$IReversible$)){
return true;
} else {
if((!G__7867.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7867);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7867);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7868 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7868;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7869 = (i - (1));
var G__7870 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7869;
r = G__7870;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7871__i = 0, G__7871__a = new Array(arguments.length -  0);
while (G__7871__i < G__7871__a.length) {G__7871__a[G__7871__i] = arguments[G__7871__i + 0]; ++G__7871__i;}
  xs = new cljs.core.IndexedSeq(G__7871__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__7872){
var xs = cljs.core.seq(arglist__7872);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__4093__auto__ = (coll == null);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var G__7876 = coll;
if(G__7876){
var bit__4760__auto__ = (G__7876.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4760__auto__) || (G__7876.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__7878 = x;
if(G__7878){
var bit__4767__auto__ = (G__7878.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4767__auto__) || (G__7878.cljs$core$IList$)){
return true;
} else {
if((!G__7878.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7878);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7878);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4081__auto__ = cljs.core.not(a.ns);
if(and__4081__auto__){
return b.ns;
} else {
return and__4081__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7885 = a.ns;
var G__7886 = b.ns;
return goog.array.defaultCompare(G__7885,G__7886);
})();
if(((0) === nsc)){
var G__7887 = a.name;
var G__7888 = b.name;
return goog.array.defaultCompare(G__7887,G__7888);
} else {
return nsc;
}
}
} else {
var G__7889 = a.name;
var G__7890 = b.name;
return goog.array.defaultCompare(G__7889,G__7890);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4509__auto__ = self__._hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7892 = null;
var G__7892__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7892__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7892 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7892__2.call(this,self__,coll);
case 3:
return G__7892__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7892.cljs$core$IFn$_invoke$arity$2 = G__7892__2;
G__7892.cljs$core$IFn$_invoke$arity$3 = G__7892__3;
return G__7892;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7891){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7891)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__7894 = x;
if(G__7894){
var bit__4760__auto__ = (G__7894.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4760__auto__) || (G__7894.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7896 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7896) : cljs.core.name.call(null,G__7896));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7897 = ls.sval();
ls = G__7897;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__7899 = s;
if(G__7899){
var bit__4760__auto__ = (G__7899.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4760__auto__) || (G__7899.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7900 = cljs.core.next(s__$1);
s__$1 = G__7900;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7901 = (0);
var xs_7902 = cljs.core.seq(coll);
while(true){
if(xs_7902){
(ret[i_7901] = cljs.core.to_array(cljs.core.first(xs_7902)));

var G__7903 = (i_7901 + (1));
var G__7904 = cljs.core.next(xs_7902);
i_7901 = G__7903;
xs_7902 = G__7904;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7907 = (i + (1));
var G__7908 = cljs.core.next(s__$1);
i = G__7907;
s__$1 = G__7908;
continue;
} else {
return a;
}
break;
}
} else {
var n__4978__auto___7909 = size;
var i_7910 = (0);
while(true){
if((i_7910 < n__4978__auto___7909)){
(a[i_7910] = init_val_or_seq);

var G__7911 = (i_7910 + (1));
i_7910 = G__7911;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7914 = (i + (1));
var G__7915 = cljs.core.next(s__$1);
i = G__7914;
s__$1 = G__7915;
continue;
} else {
return a;
}
break;
}
} else {
var n__4978__auto___7916 = size;
var i_7917 = (0);
while(true){
if((i_7917 < n__4978__auto___7916)){
(a[i_7917] = init_val_or_seq);

var G__7918 = (i_7917 + (1));
i_7917 = G__7918;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7921 = (i + (1));
var G__7922 = cljs.core.next(s__$1);
i = G__7921;
s__$1 = G__7922;
continue;
} else {
return a;
}
break;
}
} else {
var n__4978__auto___7923 = size;
var i_7924 = (0);
while(true){
if((i_7924 < n__4978__auto___7923)){
(a[i_7924] = init_val_or_seq);

var G__7925 = (i_7924 + (1));
i_7924 = G__7925;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7928 = (i + (1));
var G__7929 = cljs.core.next(s__$1);
i = G__7928;
s__$1 = G__7929;
continue;
} else {
return a;
}
break;
}
} else {
var n__4978__auto___7930 = size;
var i_7931 = (0);
while(true){
if((i_7931 < n__4978__auto___7930)){
(a[i_7931] = init_val_or_seq);

var G__7932 = (i_7931 + (1));
i_7931 = G__7932;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7933 = cljs.core.next(s__$1);
var G__7934 = (i - (1));
var G__7935 = (sum + (1));
s__$1 = G__7933;
i = G__7934;
sum = G__7935;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__7955__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7955 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7956__i = 0, G__7956__a = new Array(arguments.length -  2);
while (G__7956__i < G__7956__a.length) {G__7956__a[G__7956__i] = arguments[G__7956__i + 2]; ++G__7956__i;}
  zs = new cljs.core.IndexedSeq(G__7956__a,0);
} 
return G__7955__delegate.call(this,x,y,zs);};
G__7955.cljs$lang$maxFixedArity = 2;
G__7955.cljs$lang$applyTo = (function (arglist__7957){
var x = cljs.core.first(arglist__7957);
arglist__7957 = cljs.core.next(arglist__7957);
var y = cljs.core.first(arglist__7957);
var zs = cljs.core.rest(arglist__7957);
return G__7955__delegate(x,y,zs);
});
G__7955.cljs$core$IFn$_invoke$arity$variadic = G__7955__delegate;
return G__7955;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__7958 = null;
if (arguments.length > 2) {
var G__7959__i = 0, G__7959__a = new Array(arguments.length -  2);
while (G__7959__i < G__7959__a.length) {G__7959__a[G__7959__i] = arguments[G__7959__i + 2]; ++G__7959__i;}
G__7958 = new cljs.core.IndexedSeq(G__7959__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__7960__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7960 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7961__i = 0, G__7961__a = new Array(arguments.length -  4);
while (G__7961__i < G__7961__a.length) {G__7961__a[G__7961__i] = arguments[G__7961__i + 4]; ++G__7961__i;}
  more = new cljs.core.IndexedSeq(G__7961__a,0);
} 
return G__7960__delegate.call(this,a,b,c,d,more);};
G__7960.cljs$lang$maxFixedArity = 4;
G__7960.cljs$lang$applyTo = (function (arglist__7962){
var a = cljs.core.first(arglist__7962);
arglist__7962 = cljs.core.next(arglist__7962);
var b = cljs.core.first(arglist__7962);
arglist__7962 = cljs.core.next(arglist__7962);
var c = cljs.core.first(arglist__7962);
arglist__7962 = cljs.core.next(arglist__7962);
var d = cljs.core.first(arglist__7962);
var more = cljs.core.rest(arglist__7962);
return G__7960__delegate(a,b,c,d,more);
});
G__7960.cljs$core$IFn$_invoke$arity$variadic = G__7960__delegate;
return G__7960;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__7963 = null;
if (arguments.length > 4) {
var G__7964__i = 0, G__7964__a = new Array(arguments.length -  4);
while (G__7964__i < G__7964__a.length) {G__7964__a[G__7964__i] = arguments[G__7964__i + 4]; ++G__7964__i;}
G__7963 = new cljs.core.IndexedSeq(G__7964__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7963);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__7965__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7966 = ntcoll;
var G__7967 = cljs.core.first(vals);
var G__7968 = cljs.core.next(vals);
tcoll = G__7966;
val = G__7967;
vals = G__7968;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7965 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7969__i = 0, G__7969__a = new Array(arguments.length -  2);
while (G__7969__i < G__7969__a.length) {G__7969__a[G__7969__i] = arguments[G__7969__i + 2]; ++G__7969__i;}
  vals = new cljs.core.IndexedSeq(G__7969__a,0);
} 
return G__7965__delegate.call(this,tcoll,val,vals);};
G__7965.cljs$lang$maxFixedArity = 2;
G__7965.cljs$lang$applyTo = (function (arglist__7970){
var tcoll = cljs.core.first(arglist__7970);
arglist__7970 = cljs.core.next(arglist__7970);
var val = cljs.core.first(arglist__7970);
var vals = cljs.core.rest(arglist__7970);
return G__7965__delegate(tcoll,val,vals);
});
G__7965.cljs$core$IFn$_invoke$arity$variadic = G__7965__delegate;
return G__7965;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__7971 = null;
if (arguments.length > 2) {
var G__7972__i = 0, G__7972__a = new Array(arguments.length -  2);
while (G__7972__i < G__7972__a.length) {G__7972__a[G__7972__i] = arguments[G__7972__i + 2]; ++G__7972__i;}
G__7971 = new cljs.core.IndexedSeq(G__7972__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__7973__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7974 = ntcoll;
var G__7975 = cljs.core.first(kvs);
var G__7976 = cljs.core.second(kvs);
var G__7977 = cljs.core.nnext(kvs);
tcoll = G__7974;
key = G__7975;
val = G__7976;
kvs = G__7977;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7973 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7978__i = 0, G__7978__a = new Array(arguments.length -  3);
while (G__7978__i < G__7978__a.length) {G__7978__a[G__7978__i] = arguments[G__7978__i + 3]; ++G__7978__i;}
  kvs = new cljs.core.IndexedSeq(G__7978__a,0);
} 
return G__7973__delegate.call(this,tcoll,key,val,kvs);};
G__7973.cljs$lang$maxFixedArity = 3;
G__7973.cljs$lang$applyTo = (function (arglist__7979){
var tcoll = cljs.core.first(arglist__7979);
arglist__7979 = cljs.core.next(arglist__7979);
var key = cljs.core.first(arglist__7979);
arglist__7979 = cljs.core.next(arglist__7979);
var val = cljs.core.first(arglist__7979);
var kvs = cljs.core.rest(arglist__7979);
return G__7973__delegate(tcoll,key,val,kvs);
});
G__7973.cljs$core$IFn$_invoke$arity$variadic = G__7973__delegate;
return G__7973;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7980 = null;
if (arguments.length > 3) {
var G__7981__i = 0, G__7981__a = new Array(arguments.length -  3);
while (G__7981__i < G__7981__a.length) {G__7981__a[G__7981__i] = arguments[G__7981__i + 3]; ++G__7981__i;}
G__7980 = new cljs.core.IndexedSeq(G__7981__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__7982__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7983 = ntcoll;
var G__7984 = cljs.core.first(ks);
var G__7985 = cljs.core.next(ks);
tcoll = G__7983;
key = G__7984;
ks = G__7985;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7982 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7986__i = 0, G__7986__a = new Array(arguments.length -  2);
while (G__7986__i < G__7986__a.length) {G__7986__a[G__7986__i] = arguments[G__7986__i + 2]; ++G__7986__i;}
  ks = new cljs.core.IndexedSeq(G__7986__a,0);
} 
return G__7982__delegate.call(this,tcoll,key,ks);};
G__7982.cljs$lang$maxFixedArity = 2;
G__7982.cljs$lang$applyTo = (function (arglist__7987){
var tcoll = cljs.core.first(arglist__7987);
arglist__7987 = cljs.core.next(arglist__7987);
var key = cljs.core.first(arglist__7987);
var ks = cljs.core.rest(arglist__7987);
return G__7982__delegate(tcoll,key,ks);
});
G__7982.cljs$core$IFn$_invoke$arity$variadic = G__7982__delegate;
return G__7982;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7988 = null;
if (arguments.length > 2) {
var G__7989__i = 0, G__7989__a = new Array(arguments.length -  2);
while (G__7989__i < G__7989__a.length) {G__7989__a[G__7989__i] = arguments[G__7989__i + 2]; ++G__7989__i;}
G__7988 = new cljs.core.IndexedSeq(G__7989__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__7990__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7991 = ntcoll;
var G__7992 = cljs.core.first(vals);
var G__7993 = cljs.core.next(vals);
tcoll = G__7991;
val = G__7992;
vals = G__7993;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7990 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7994__i = 0, G__7994__a = new Array(arguments.length -  2);
while (G__7994__i < G__7994__a.length) {G__7994__a[G__7994__i] = arguments[G__7994__i + 2]; ++G__7994__i;}
  vals = new cljs.core.IndexedSeq(G__7994__a,0);
} 
return G__7990__delegate.call(this,tcoll,val,vals);};
G__7990.cljs$lang$maxFixedArity = 2;
G__7990.cljs$lang$applyTo = (function (arglist__7995){
var tcoll = cljs.core.first(arglist__7995);
arglist__7995 = cljs.core.next(arglist__7995);
var val = cljs.core.first(arglist__7995);
var vals = cljs.core.rest(arglist__7995);
return G__7990__delegate(tcoll,val,vals);
});
G__7990.cljs$core$IFn$_invoke$arity$variadic = G__7990__delegate;
return G__7990;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__7996 = null;
if (arguments.length > 2) {
var G__7997__i = 0, G__7997__a = new Array(arguments.length -  2);
while (G__7997__i < G__7997__a.length) {G__7997__a[G__7997__i] = arguments[G__7997__i + 2]; ++G__7997__i;}
G__7996 = new cljs.core.IndexedSeq(G__7997__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a5022 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a5022);
} else {
var G__8208 = a5022;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8208) : f.call(null,G__8208));
}
} else {
var b5023 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a5022,b5023);
} else {
var G__8209 = a5022;
var G__8210 = b5023;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8209,G__8210) : f.call(null,G__8209,G__8210));
}
} else {
var c5024 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a5022,b5023,c5024);
} else {
var G__8211 = a5022;
var G__8212 = b5023;
var G__8213 = c5024;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8211,G__8212,G__8213) : f.call(null,G__8211,G__8212,G__8213));
}
} else {
var d5025 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a5022,b5023,c5024,d5025);
} else {
var G__8214 = a5022;
var G__8215 = b5023;
var G__8216 = c5024;
var G__8217 = d5025;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8214,G__8215,G__8216,G__8217) : f.call(null,G__8214,G__8215,G__8216,G__8217));
}
} else {
var e5026 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a5022,b5023,c5024,d5025,e5026);
} else {
var G__8218 = a5022;
var G__8219 = b5023;
var G__8220 = c5024;
var G__8221 = d5025;
var G__8222 = e5026;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8218,G__8219,G__8220,G__8221,G__8222) : f.call(null,G__8218,G__8219,G__8220,G__8221,G__8222));
}
} else {
var f5027 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a5022,b5023,c5024,d5025,e5026,f5027);
} else {
var G__8223 = a5022;
var G__8224 = b5023;
var G__8225 = c5024;
var G__8226 = d5025;
var G__8227 = e5026;
var G__8228 = f5027;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8223,G__8224,G__8225,G__8226,G__8227,G__8228) : f.call(null,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228));
}
} else {
var g5028 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a5022,b5023,c5024,d5025,e5026,f5027,g5028);
} else {
var G__8229 = a5022;
var G__8230 = b5023;
var G__8231 = c5024;
var G__8232 = d5025;
var G__8233 = e5026;
var G__8234 = f5027;
var G__8235 = g5028;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235) : f.call(null,G__8229,G__8230,G__8231,G__8232,G__8233,G__8234,G__8235));
}
} else {
var h5029 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029);
} else {
var G__8236 = a5022;
var G__8237 = b5023;
var G__8238 = c5024;
var G__8239 = d5025;
var G__8240 = e5026;
var G__8241 = f5027;
var G__8242 = g5028;
var G__8243 = h5029;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243) : f.call(null,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243));
}
} else {
var i5030 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030);
} else {
var G__8244 = a5022;
var G__8245 = b5023;
var G__8246 = c5024;
var G__8247 = d5025;
var G__8248 = e5026;
var G__8249 = f5027;
var G__8250 = g5028;
var G__8251 = h5029;
var G__8252 = i5030;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252) : f.call(null,G__8244,G__8245,G__8246,G__8247,G__8248,G__8249,G__8250,G__8251,G__8252));
}
} else {
var j5031 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031);
} else {
var G__8253 = a5022;
var G__8254 = b5023;
var G__8255 = c5024;
var G__8256 = d5025;
var G__8257 = e5026;
var G__8258 = f5027;
var G__8259 = g5028;
var G__8260 = h5029;
var G__8261 = i5030;
var G__8262 = j5031;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261,G__8262) : f.call(null,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261,G__8262));
}
} else {
var k5032 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032);
} else {
var G__8263 = a5022;
var G__8264 = b5023;
var G__8265 = c5024;
var G__8266 = d5025;
var G__8267 = e5026;
var G__8268 = f5027;
var G__8269 = g5028;
var G__8270 = h5029;
var G__8271 = i5030;
var G__8272 = j5031;
var G__8273 = k5032;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273) : f.call(null,G__8263,G__8264,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273));
}
} else {
var l5033 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033);
} else {
var G__8274 = a5022;
var G__8275 = b5023;
var G__8276 = c5024;
var G__8277 = d5025;
var G__8278 = e5026;
var G__8279 = f5027;
var G__8280 = g5028;
var G__8281 = h5029;
var G__8282 = i5030;
var G__8283 = j5031;
var G__8284 = k5032;
var G__8285 = l5033;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285) : f.call(null,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282,G__8283,G__8284,G__8285));
}
} else {
var m5034 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034);
} else {
var G__8286 = a5022;
var G__8287 = b5023;
var G__8288 = c5024;
var G__8289 = d5025;
var G__8290 = e5026;
var G__8291 = f5027;
var G__8292 = g5028;
var G__8293 = h5029;
var G__8294 = i5030;
var G__8295 = j5031;
var G__8296 = k5032;
var G__8297 = l5033;
var G__8298 = m5034;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298) : f.call(null,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298));
}
} else {
var n5035 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035);
} else {
var G__8299 = a5022;
var G__8300 = b5023;
var G__8301 = c5024;
var G__8302 = d5025;
var G__8303 = e5026;
var G__8304 = f5027;
var G__8305 = g5028;
var G__8306 = h5029;
var G__8307 = i5030;
var G__8308 = j5031;
var G__8309 = k5032;
var G__8310 = l5033;
var G__8311 = m5034;
var G__8312 = n5035;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312) : f.call(null,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312));
}
} else {
var o5036 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036);
} else {
var G__8313 = a5022;
var G__8314 = b5023;
var G__8315 = c5024;
var G__8316 = d5025;
var G__8317 = e5026;
var G__8318 = f5027;
var G__8319 = g5028;
var G__8320 = h5029;
var G__8321 = i5030;
var G__8322 = j5031;
var G__8323 = k5032;
var G__8324 = l5033;
var G__8325 = m5034;
var G__8326 = n5035;
var G__8327 = o5036;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327) : f.call(null,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325,G__8326,G__8327));
}
} else {
var p5037 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036,p5037);
} else {
var G__8328 = a5022;
var G__8329 = b5023;
var G__8330 = c5024;
var G__8331 = d5025;
var G__8332 = e5026;
var G__8333 = f5027;
var G__8334 = g5028;
var G__8335 = h5029;
var G__8336 = i5030;
var G__8337 = j5031;
var G__8338 = k5032;
var G__8339 = l5033;
var G__8340 = m5034;
var G__8341 = n5035;
var G__8342 = o5036;
var G__8343 = p5037;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343) : f.call(null,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343));
}
} else {
var q5038 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036,p5037,q5038);
} else {
var G__8344 = a5022;
var G__8345 = b5023;
var G__8346 = c5024;
var G__8347 = d5025;
var G__8348 = e5026;
var G__8349 = f5027;
var G__8350 = g5028;
var G__8351 = h5029;
var G__8352 = i5030;
var G__8353 = j5031;
var G__8354 = k5032;
var G__8355 = l5033;
var G__8356 = m5034;
var G__8357 = n5035;
var G__8358 = o5036;
var G__8359 = p5037;
var G__8360 = q5038;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360) : f.call(null,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360));
}
} else {
var r5039 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036,p5037,q5038,r5039);
} else {
var G__8361 = a5022;
var G__8362 = b5023;
var G__8363 = c5024;
var G__8364 = d5025;
var G__8365 = e5026;
var G__8366 = f5027;
var G__8367 = g5028;
var G__8368 = h5029;
var G__8369 = i5030;
var G__8370 = j5031;
var G__8371 = k5032;
var G__8372 = l5033;
var G__8373 = m5034;
var G__8374 = n5035;
var G__8375 = o5036;
var G__8376 = p5037;
var G__8377 = q5038;
var G__8378 = r5039;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378) : f.call(null,G__8361,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378));
}
} else {
var s5040 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036,p5037,q5038,r5039,s5040);
} else {
var G__8379 = a5022;
var G__8380 = b5023;
var G__8381 = c5024;
var G__8382 = d5025;
var G__8383 = e5026;
var G__8384 = f5027;
var G__8385 = g5028;
var G__8386 = h5029;
var G__8387 = i5030;
var G__8388 = j5031;
var G__8389 = k5032;
var G__8390 = l5033;
var G__8391 = m5034;
var G__8392 = n5035;
var G__8393 = o5036;
var G__8394 = p5037;
var G__8395 = q5038;
var G__8396 = r5039;
var G__8397 = s5040;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397) : f.call(null,G__8379,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397));
}
} else {
var t5041 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a5022,b5023,c5024,d5025,e5026,f5027,g5028,h5029,i5030,j5031,k5032,l5033,m5034,n5035,o5036,p5037,q5038,r5039,s5040,t5041);
} else {
var G__8398 = a5022;
var G__8399 = b5023;
var G__8400 = c5024;
var G__8401 = d5025;
var G__8402 = e5026;
var G__8403 = f5027;
var G__8404 = g5028;
var G__8405 = h5029;
var G__8406 = i5030;
var G__8407 = j5031;
var G__8408 = k5032;
var G__8409 = l5033;
var G__8410 = m5034;
var G__8411 = n5035;
var G__8412 = o5036;
var G__8413 = p5037;
var G__8414 = q5038;
var G__8415 = r5039;
var G__8416 = s5040;
var G__8417 = t5041;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417) : f.call(null,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416,G__8417));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__8418__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8418 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8419__i = 0, G__8419__a = new Array(arguments.length -  5);
while (G__8419__i < G__8419__a.length) {G__8419__a[G__8419__i] = arguments[G__8419__i + 5]; ++G__8419__i;}
  args = new cljs.core.IndexedSeq(G__8419__a,0);
} 
return G__8418__delegate.call(this,f,a,b,c,d,args);};
G__8418.cljs$lang$maxFixedArity = 5;
G__8418.cljs$lang$applyTo = (function (arglist__8420){
var f = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var a = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var b = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var c = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var d = cljs.core.first(arglist__8420);
var args = cljs.core.rest(arglist__8420);
return G__8418__delegate(f,a,b,c,d,args);
});
G__8418.cljs$core$IFn$_invoke$arity$variadic = G__8418__delegate;
return G__8418;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__8421 = null;
if (arguments.length > 5) {
var G__8422__i = 0, G__8422__a = new Array(arguments.length -  5);
while (G__8422__i < G__8422__a.length) {G__8422__a[G__8422__i] = arguments[G__8422__i + 5]; ++G__8422__i;}
G__8421 = new cljs.core.IndexedSeq(G__8422__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8438 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8438) : f.call(null,G__8438));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8439 = cljs.core.meta(obj);
var G__8440 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8439,G__8440) : f.call(null,G__8439,G__8440));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8441 = cljs.core.meta(obj);
var G__8442 = a;
var G__8443 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8441,G__8442,G__8443) : f.call(null,G__8441,G__8442,G__8443));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8444 = cljs.core.meta(obj);
var G__8445 = a;
var G__8446 = b;
var G__8447 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8444,G__8445,G__8446,G__8447) : f.call(null,G__8444,G__8445,G__8446,G__8447));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8448 = cljs.core.meta(obj);
var G__8449 = a;
var G__8450 = b;
var G__8451 = c;
var G__8452 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8448,G__8449,G__8450,G__8451,G__8452) : f.call(null,G__8448,G__8449,G__8450,G__8451,G__8452));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__8453__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8453 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8454__i = 0, G__8454__a = new Array(arguments.length -  6);
while (G__8454__i < G__8454__a.length) {G__8454__a[G__8454__i] = arguments[G__8454__i + 6]; ++G__8454__i;}
  args = new cljs.core.IndexedSeq(G__8454__a,0);
} 
return G__8453__delegate.call(this,obj,f,a,b,c,d,args);};
G__8453.cljs$lang$maxFixedArity = 6;
G__8453.cljs$lang$applyTo = (function (arglist__8455){
var obj = cljs.core.first(arglist__8455);
arglist__8455 = cljs.core.next(arglist__8455);
var f = cljs.core.first(arglist__8455);
arglist__8455 = cljs.core.next(arglist__8455);
var a = cljs.core.first(arglist__8455);
arglist__8455 = cljs.core.next(arglist__8455);
var b = cljs.core.first(arglist__8455);
arglist__8455 = cljs.core.next(arglist__8455);
var c = cljs.core.first(arglist__8455);
arglist__8455 = cljs.core.next(arglist__8455);
var d = cljs.core.first(arglist__8455);
var args = cljs.core.rest(arglist__8455);
return G__8453__delegate(obj,f,a,b,c,d,args);
});
G__8453.cljs$core$IFn$_invoke$arity$variadic = G__8453__delegate;
return G__8453;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8456 = null;
if (arguments.length > 6) {
var G__8457__i = 0, G__8457__a = new Array(arguments.length -  6);
while (G__8457__i < G__8457__a.length) {G__8457__a[G__8457__i] = arguments[G__8457__i + 6]; ++G__8457__i;}
G__8456 = new cljs.core.IndexedSeq(G__8457__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__8458__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8458 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8459__i = 0, G__8459__a = new Array(arguments.length -  2);
while (G__8459__i < G__8459__a.length) {G__8459__a[G__8459__i] = arguments[G__8459__i + 2]; ++G__8459__i;}
  more = new cljs.core.IndexedSeq(G__8459__a,0);
} 
return G__8458__delegate.call(this,x,y,more);};
G__8458.cljs$lang$maxFixedArity = 2;
G__8458.cljs$lang$applyTo = (function (arglist__8460){
var x = cljs.core.first(arglist__8460);
arglist__8460 = cljs.core.next(arglist__8460);
var y = cljs.core.first(arglist__8460);
var more = cljs.core.rest(arglist__8460);
return G__8458__delegate(x,y,more);
});
G__8458.cljs$core$IFn$_invoke$arity$variadic = G__8458__delegate;
return G__8458;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__8461 = null;
if (arguments.length > 2) {
var G__8462__i = 0, G__8462__a = new Array(arguments.length -  2);
while (G__8462__i < G__8462__a.length) {G__8462__a[G__8462__i] = arguments[G__8462__i + 2]; ++G__8462__i;}
G__8461 = new cljs.core.IndexedSeq(G__8462__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t8466 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8466 = (function (nil_iter,meta8467){
this.nil_iter = nil_iter;
this.meta8467 = meta8467;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8466.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8466.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8466.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8466.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8468){
var self__ = this;
var _8468__$1 = this;
return self__.meta8467;
});

cljs.core.t8466.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8468,meta8467__$1){
var self__ = this;
var _8468__$1 = this;
return (new cljs.core.t8466(self__.nil_iter,meta8467__$1));
});

cljs.core.t8466.cljs$lang$type = true;

cljs.core.t8466.cljs$lang$ctorStr = "cljs.core/t8466";

cljs.core.t8466.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/t8466");
});

cljs.core.__GT_t8466 = (function cljs$core$nil_iter_$___GT_t8466(nil_iter__$1,meta8467){
return (new cljs.core.t8466(nil_iter__$1,meta8467));
});

}

return (new cljs.core.t8466(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4081__auto__ = !((lt.stepper == null));
if(and__4081__auto__){
return self__.iter.hasNext();
} else {
return and__4081__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8469 = lt;
var G__8470 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8469,G__8470) : self__.xform.call(null,G__8469,G__8470));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8471 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8471) : self__.xform.call(null,G__8471));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8473 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8473) : xform.call(null,G__8473));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8475 = cljs.core.next(iters__$1);
iters__$1 = G__8475;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4978__auto___8476 = self__.iters.length;
var i_8477 = (0);
while(true){
if((i_8477 < n__4978__auto___8476)){
(self__.nexts[i_8477] = (self__.iters[i_8477]).next());

var G__8478 = (i_8477 + (1));
i_8477 = G__8478;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4081__auto__ = !((lt.stepper == null));
if(and__4081__auto__){
return this$.hasNext();
} else {
return and__4081__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8474 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8474) : self__.xform.call(null,G__8474));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8483 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8483) : xform.call(null,G__8483));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8484_8488 = cljs.core.seq(colls);
var chunk__8485_8489 = null;
var count__8486_8490 = (0);
var i__8487_8491 = (0);
while(true){
if((i__8487_8491 < count__8486_8490)){
var coll_8492 = chunk__8485_8489.cljs$core$IIndexed$_nth$arity$2(null,i__8487_8491);
iters.push(cljs.core.iter(coll_8492));

var G__8493 = seq__8484_8488;
var G__8494 = chunk__8485_8489;
var G__8495 = count__8486_8490;
var G__8496 = (i__8487_8491 + (1));
seq__8484_8488 = G__8493;
chunk__8485_8489 = G__8494;
count__8486_8490 = G__8495;
i__8487_8491 = G__8496;
continue;
} else {
var temp__4126__auto___8497 = cljs.core.seq(seq__8484_8488);
if(temp__4126__auto___8497){
var seq__8484_8498__$1 = temp__4126__auto___8497;
if(cljs.core.chunked_seq_QMARK_(seq__8484_8498__$1)){
var c__4878__auto___8499 = cljs.core.chunk_first(seq__8484_8498__$1);
var G__8500 = cljs.core.chunk_rest(seq__8484_8498__$1);
var G__8501 = c__4878__auto___8499;
var G__8502 = cljs.core.count(c__4878__auto___8499);
var G__8503 = (0);
seq__8484_8488 = G__8500;
chunk__8485_8489 = G__8501;
count__8486_8490 = G__8502;
i__8487_8491 = G__8503;
continue;
} else {
var coll_8504 = cljs.core.first(seq__8484_8498__$1);
iters.push(cljs.core.iter(coll_8504));

var G__8505 = cljs.core.next(seq__8484_8498__$1);
var G__8506 = null;
var G__8507 = (0);
var G__8508 = (0);
seq__8484_8488 = G__8505;
chunk__8485_8489 = G__8506;
count__8486_8490 = G__8507;
i__8487_8491 = G__8508;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4093__auto__ = cljs.core.seq(coll);
if(or__4093__auto__){
return or__4093__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__8509__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8509 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8510__i = 0, G__8510__a = new Array(arguments.length -  2);
while (G__8510__i < G__8510__a.length) {G__8510__a[G__8510__i] = arguments[G__8510__i + 2]; ++G__8510__i;}
  colls = new cljs.core.IndexedSeq(G__8510__a,0);
} 
return G__8509__delegate.call(this,xform,coll,colls);};
G__8509.cljs$lang$maxFixedArity = 2;
G__8509.cljs$lang$applyTo = (function (arglist__8511){
var xform = cljs.core.first(arglist__8511);
arglist__8511 = cljs.core.next(arglist__8511);
var coll = cljs.core.first(arglist__8511);
var colls = cljs.core.rest(arglist__8511);
return G__8509__delegate(xform,coll,colls);
});
G__8509.cljs$core$IFn$_invoke$arity$variadic = G__8509__delegate;
return G__8509;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__8512 = null;
if (arguments.length > 2) {
var G__8513__i = 0, G__8513__a = new Array(arguments.length -  2);
while (G__8513__i < G__8513__a.length) {G__8513__a[G__8513__i] = arguments[G__8513__i + 2]; ++G__8513__i;}
G__8512 = new cljs.core.IndexedSeq(G__8513__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8515 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8515) : pred.call(null,G__8515));
})())){
var G__8516 = pred;
var G__8517 = cljs.core.next(coll);
pred = G__8516;
coll = G__8517;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4093__auto__ = (function (){var G__8521 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8521) : pred.call(null,G__8521));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var G__8522 = pred;
var G__8523 = cljs.core.next(coll);
pred = G__8522;
coll = G__8523;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__8530 = null;
var G__8530__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8530__1 = (function (x){
return cljs.core.not((function (){var G__8527 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8527) : f.call(null,G__8527));
})());
});
var G__8530__2 = (function (x,y){
return cljs.core.not((function (){var G__8528 = x;
var G__8529 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8528,G__8529) : f.call(null,G__8528,G__8529));
})());
});
var G__8530__3 = (function() { 
var G__8531__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8531 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8532__i = 0, G__8532__a = new Array(arguments.length -  2);
while (G__8532__i < G__8532__a.length) {G__8532__a[G__8532__i] = arguments[G__8532__i + 2]; ++G__8532__i;}
  zs = new cljs.core.IndexedSeq(G__8532__a,0);
} 
return G__8531__delegate.call(this,x,y,zs);};
G__8531.cljs$lang$maxFixedArity = 2;
G__8531.cljs$lang$applyTo = (function (arglist__8533){
var x = cljs.core.first(arglist__8533);
arglist__8533 = cljs.core.next(arglist__8533);
var y = cljs.core.first(arglist__8533);
var zs = cljs.core.rest(arglist__8533);
return G__8531__delegate(x,y,zs);
});
G__8531.cljs$core$IFn$_invoke$arity$variadic = G__8531__delegate;
return G__8531;
})()
;
G__8530 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8530__0.call(this);
case 1:
return G__8530__1.call(this,x);
case 2:
return G__8530__2.call(this,x,y);
default:
var G__8534 = null;
if (arguments.length > 2) {
var G__8535__i = 0, G__8535__a = new Array(arguments.length -  2);
while (G__8535__i < G__8535__a.length) {G__8535__a[G__8535__i] = arguments[G__8535__i + 2]; ++G__8535__i;}
G__8534 = new cljs.core.IndexedSeq(G__8535__a,0);
}
return G__8530__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8530.cljs$lang$maxFixedArity = 2;
G__8530.cljs$lang$applyTo = G__8530__3.cljs$lang$applyTo;
G__8530.cljs$core$IFn$_invoke$arity$0 = G__8530__0;
G__8530.cljs$core$IFn$_invoke$arity$1 = G__8530__1;
G__8530.cljs$core$IFn$_invoke$arity$2 = G__8530__2;
G__8530.cljs$core$IFn$_invoke$arity$variadic = G__8530__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8530;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__8536__delegate = function (args){
return x;
};
var G__8536 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8537__i = 0, G__8537__a = new Array(arguments.length -  0);
while (G__8537__i < G__8537__a.length) {G__8537__a[G__8537__i] = arguments[G__8537__i + 0]; ++G__8537__i;}
  args = new cljs.core.IndexedSeq(G__8537__a,0);
} 
return G__8536__delegate.call(this,args);};
G__8536.cljs$lang$maxFixedArity = 0;
G__8536.cljs$lang$applyTo = (function (arglist__8538){
var args = cljs.core.seq(arglist__8538);
return G__8536__delegate(args);
});
G__8536.cljs$core$IFn$_invoke$arity$variadic = G__8536__delegate;
return G__8536;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__8593 = null;
var G__8593__0 = (function (){
var G__8566 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8566) : f.call(null,G__8566));
});
var G__8593__1 = (function (x){
var G__8567 = (function (){var G__8568 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8568) : g.call(null,G__8568));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8567) : f.call(null,G__8567));
});
var G__8593__2 = (function (x,y){
var G__8569 = (function (){var G__8570 = x;
var G__8571 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8570,G__8571) : g.call(null,G__8570,G__8571));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8569) : f.call(null,G__8569));
});
var G__8593__3 = (function (x,y,z){
var G__8572 = (function (){var G__8573 = x;
var G__8574 = y;
var G__8575 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8573,G__8574,G__8575) : g.call(null,G__8573,G__8574,G__8575));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8572) : f.call(null,G__8572));
});
var G__8593__4 = (function() { 
var G__8594__delegate = function (x,y,z,args){
var G__8576 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8576) : f.call(null,G__8576));
};
var G__8594 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8595__i = 0, G__8595__a = new Array(arguments.length -  3);
while (G__8595__i < G__8595__a.length) {G__8595__a[G__8595__i] = arguments[G__8595__i + 3]; ++G__8595__i;}
  args = new cljs.core.IndexedSeq(G__8595__a,0);
} 
return G__8594__delegate.call(this,x,y,z,args);};
G__8594.cljs$lang$maxFixedArity = 3;
G__8594.cljs$lang$applyTo = (function (arglist__8596){
var x = cljs.core.first(arglist__8596);
arglist__8596 = cljs.core.next(arglist__8596);
var y = cljs.core.first(arglist__8596);
arglist__8596 = cljs.core.next(arglist__8596);
var z = cljs.core.first(arglist__8596);
var args = cljs.core.rest(arglist__8596);
return G__8594__delegate(x,y,z,args);
});
G__8594.cljs$core$IFn$_invoke$arity$variadic = G__8594__delegate;
return G__8594;
})()
;
G__8593 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8593__0.call(this);
case 1:
return G__8593__1.call(this,x);
case 2:
return G__8593__2.call(this,x,y);
case 3:
return G__8593__3.call(this,x,y,z);
default:
var G__8597 = null;
if (arguments.length > 3) {
var G__8598__i = 0, G__8598__a = new Array(arguments.length -  3);
while (G__8598__i < G__8598__a.length) {G__8598__a[G__8598__i] = arguments[G__8598__i + 3]; ++G__8598__i;}
G__8597 = new cljs.core.IndexedSeq(G__8598__a,0);
}
return G__8593__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8593.cljs$lang$maxFixedArity = 3;
G__8593.cljs$lang$applyTo = G__8593__4.cljs$lang$applyTo;
G__8593.cljs$core$IFn$_invoke$arity$0 = G__8593__0;
G__8593.cljs$core$IFn$_invoke$arity$1 = G__8593__1;
G__8593.cljs$core$IFn$_invoke$arity$2 = G__8593__2;
G__8593.cljs$core$IFn$_invoke$arity$3 = G__8593__3;
G__8593.cljs$core$IFn$_invoke$arity$variadic = G__8593__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8593;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__8599 = null;
var G__8599__0 = (function (){
var G__8577 = (function (){var G__8578 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8578) : g.call(null,G__8578));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8577) : f.call(null,G__8577));
});
var G__8599__1 = (function (x){
var G__8579 = (function (){var G__8580 = (function (){var G__8581 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8581) : h.call(null,G__8581));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8580) : g.call(null,G__8580));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8579) : f.call(null,G__8579));
});
var G__8599__2 = (function (x,y){
var G__8582 = (function (){var G__8583 = (function (){var G__8584 = x;
var G__8585 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8584,G__8585) : h.call(null,G__8584,G__8585));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8583) : g.call(null,G__8583));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8582) : f.call(null,G__8582));
});
var G__8599__3 = (function (x,y,z){
var G__8586 = (function (){var G__8587 = (function (){var G__8588 = x;
var G__8589 = y;
var G__8590 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8588,G__8589,G__8590) : h.call(null,G__8588,G__8589,G__8590));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8587) : g.call(null,G__8587));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8586) : f.call(null,G__8586));
});
var G__8599__4 = (function() { 
var G__8600__delegate = function (x,y,z,args){
var G__8591 = (function (){var G__8592 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8592) : g.call(null,G__8592));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8591) : f.call(null,G__8591));
};
var G__8600 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8601__i = 0, G__8601__a = new Array(arguments.length -  3);
while (G__8601__i < G__8601__a.length) {G__8601__a[G__8601__i] = arguments[G__8601__i + 3]; ++G__8601__i;}
  args = new cljs.core.IndexedSeq(G__8601__a,0);
} 
return G__8600__delegate.call(this,x,y,z,args);};
G__8600.cljs$lang$maxFixedArity = 3;
G__8600.cljs$lang$applyTo = (function (arglist__8602){
var x = cljs.core.first(arglist__8602);
arglist__8602 = cljs.core.next(arglist__8602);
var y = cljs.core.first(arglist__8602);
arglist__8602 = cljs.core.next(arglist__8602);
var z = cljs.core.first(arglist__8602);
var args = cljs.core.rest(arglist__8602);
return G__8600__delegate(x,y,z,args);
});
G__8600.cljs$core$IFn$_invoke$arity$variadic = G__8600__delegate;
return G__8600;
})()
;
G__8599 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8599__0.call(this);
case 1:
return G__8599__1.call(this,x);
case 2:
return G__8599__2.call(this,x,y);
case 3:
return G__8599__3.call(this,x,y,z);
default:
var G__8603 = null;
if (arguments.length > 3) {
var G__8604__i = 0, G__8604__a = new Array(arguments.length -  3);
while (G__8604__i < G__8604__a.length) {G__8604__a[G__8604__i] = arguments[G__8604__i + 3]; ++G__8604__i;}
G__8603 = new cljs.core.IndexedSeq(G__8604__a,0);
}
return G__8599__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8603);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8599.cljs$lang$maxFixedArity = 3;
G__8599.cljs$lang$applyTo = G__8599__4.cljs$lang$applyTo;
G__8599.cljs$core$IFn$_invoke$arity$0 = G__8599__0;
G__8599.cljs$core$IFn$_invoke$arity$1 = G__8599__1;
G__8599.cljs$core$IFn$_invoke$arity$2 = G__8599__2;
G__8599.cljs$core$IFn$_invoke$arity$3 = G__8599__3;
G__8599.cljs$core$IFn$_invoke$arity$variadic = G__8599__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8599;
})()
});
var cljs$core$comp__4 = (function() { 
var G__8605__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8606__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8607 = cljs.core.first(fs__$2).call(null,ret);
var G__8608 = cljs.core.next(fs__$2);
ret = G__8607;
fs__$2 = G__8608;
continue;
} else {
return ret;
}
break;
}
};
var G__8606 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8609__i = 0, G__8609__a = new Array(arguments.length -  0);
while (G__8609__i < G__8609__a.length) {G__8609__a[G__8609__i] = arguments[G__8609__i + 0]; ++G__8609__i;}
  args = new cljs.core.IndexedSeq(G__8609__a,0);
} 
return G__8606__delegate.call(this,args);};
G__8606.cljs$lang$maxFixedArity = 0;
G__8606.cljs$lang$applyTo = (function (arglist__8610){
var args = cljs.core.seq(arglist__8610);
return G__8606__delegate(args);
});
G__8606.cljs$core$IFn$_invoke$arity$variadic = G__8606__delegate;
return G__8606;
})()
;
;})(fs__$1))
};
var G__8605 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8611__i = 0, G__8611__a = new Array(arguments.length -  3);
while (G__8611__i < G__8611__a.length) {G__8611__a[G__8611__i] = arguments[G__8611__i + 3]; ++G__8611__i;}
  fs = new cljs.core.IndexedSeq(G__8611__a,0);
} 
return G__8605__delegate.call(this,f1,f2,f3,fs);};
G__8605.cljs$lang$maxFixedArity = 3;
G__8605.cljs$lang$applyTo = (function (arglist__8612){
var f1 = cljs.core.first(arglist__8612);
arglist__8612 = cljs.core.next(arglist__8612);
var f2 = cljs.core.first(arglist__8612);
arglist__8612 = cljs.core.next(arglist__8612);
var f3 = cljs.core.first(arglist__8612);
var fs = cljs.core.rest(arglist__8612);
return G__8605__delegate(f1,f2,f3,fs);
});
G__8605.cljs$core$IFn$_invoke$arity$variadic = G__8605__delegate;
return G__8605;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__8613 = null;
if (arguments.length > 3) {
var G__8614__i = 0, G__8614__a = new Array(arguments.length -  3);
while (G__8614__i < G__8614__a.length) {G__8614__a[G__8614__i] = arguments[G__8614__i + 3]; ++G__8614__i;}
G__8613 = new cljs.core.IndexedSeq(G__8614__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__8699 = null;
var G__8699__0 = (function (){
var G__8657 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8657) : f.call(null,G__8657));
});
var G__8699__1 = (function (x){
var G__8658 = arg1;
var G__8659 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8658,G__8659) : f.call(null,G__8658,G__8659));
});
var G__8699__2 = (function (x,y){
var G__8660 = arg1;
var G__8661 = x;
var G__8662 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8660,G__8661,G__8662) : f.call(null,G__8660,G__8661,G__8662));
});
var G__8699__3 = (function (x,y,z){
var G__8663 = arg1;
var G__8664 = x;
var G__8665 = y;
var G__8666 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8663,G__8664,G__8665,G__8666) : f.call(null,G__8663,G__8664,G__8665,G__8666));
});
var G__8699__4 = (function() { 
var G__8700__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8700 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8701__i = 0, G__8701__a = new Array(arguments.length -  3);
while (G__8701__i < G__8701__a.length) {G__8701__a[G__8701__i] = arguments[G__8701__i + 3]; ++G__8701__i;}
  args = new cljs.core.IndexedSeq(G__8701__a,0);
} 
return G__8700__delegate.call(this,x,y,z,args);};
G__8700.cljs$lang$maxFixedArity = 3;
G__8700.cljs$lang$applyTo = (function (arglist__8702){
var x = cljs.core.first(arglist__8702);
arglist__8702 = cljs.core.next(arglist__8702);
var y = cljs.core.first(arglist__8702);
arglist__8702 = cljs.core.next(arglist__8702);
var z = cljs.core.first(arglist__8702);
var args = cljs.core.rest(arglist__8702);
return G__8700__delegate(x,y,z,args);
});
G__8700.cljs$core$IFn$_invoke$arity$variadic = G__8700__delegate;
return G__8700;
})()
;
G__8699 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8699__0.call(this);
case 1:
return G__8699__1.call(this,x);
case 2:
return G__8699__2.call(this,x,y);
case 3:
return G__8699__3.call(this,x,y,z);
default:
var G__8703 = null;
if (arguments.length > 3) {
var G__8704__i = 0, G__8704__a = new Array(arguments.length -  3);
while (G__8704__i < G__8704__a.length) {G__8704__a[G__8704__i] = arguments[G__8704__i + 3]; ++G__8704__i;}
G__8703 = new cljs.core.IndexedSeq(G__8704__a,0);
}
return G__8699__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8699.cljs$lang$maxFixedArity = 3;
G__8699.cljs$lang$applyTo = G__8699__4.cljs$lang$applyTo;
G__8699.cljs$core$IFn$_invoke$arity$0 = G__8699__0;
G__8699.cljs$core$IFn$_invoke$arity$1 = G__8699__1;
G__8699.cljs$core$IFn$_invoke$arity$2 = G__8699__2;
G__8699.cljs$core$IFn$_invoke$arity$3 = G__8699__3;
G__8699.cljs$core$IFn$_invoke$arity$variadic = G__8699__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8699;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8705 = null;
var G__8705__0 = (function (){
var G__8667 = arg1;
var G__8668 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8667,G__8668) : f.call(null,G__8667,G__8668));
});
var G__8705__1 = (function (x){
var G__8669 = arg1;
var G__8670 = arg2;
var G__8671 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8669,G__8670,G__8671) : f.call(null,G__8669,G__8670,G__8671));
});
var G__8705__2 = (function (x,y){
var G__8672 = arg1;
var G__8673 = arg2;
var G__8674 = x;
var G__8675 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8672,G__8673,G__8674,G__8675) : f.call(null,G__8672,G__8673,G__8674,G__8675));
});
var G__8705__3 = (function (x,y,z){
var G__8676 = arg1;
var G__8677 = arg2;
var G__8678 = x;
var G__8679 = y;
var G__8680 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8676,G__8677,G__8678,G__8679,G__8680) : f.call(null,G__8676,G__8677,G__8678,G__8679,G__8680));
});
var G__8705__4 = (function() { 
var G__8706__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8706 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8707__i = 0, G__8707__a = new Array(arguments.length -  3);
while (G__8707__i < G__8707__a.length) {G__8707__a[G__8707__i] = arguments[G__8707__i + 3]; ++G__8707__i;}
  args = new cljs.core.IndexedSeq(G__8707__a,0);
} 
return G__8706__delegate.call(this,x,y,z,args);};
G__8706.cljs$lang$maxFixedArity = 3;
G__8706.cljs$lang$applyTo = (function (arglist__8708){
var x = cljs.core.first(arglist__8708);
arglist__8708 = cljs.core.next(arglist__8708);
var y = cljs.core.first(arglist__8708);
arglist__8708 = cljs.core.next(arglist__8708);
var z = cljs.core.first(arglist__8708);
var args = cljs.core.rest(arglist__8708);
return G__8706__delegate(x,y,z,args);
});
G__8706.cljs$core$IFn$_invoke$arity$variadic = G__8706__delegate;
return G__8706;
})()
;
G__8705 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8705__0.call(this);
case 1:
return G__8705__1.call(this,x);
case 2:
return G__8705__2.call(this,x,y);
case 3:
return G__8705__3.call(this,x,y,z);
default:
var G__8709 = null;
if (arguments.length > 3) {
var G__8710__i = 0, G__8710__a = new Array(arguments.length -  3);
while (G__8710__i < G__8710__a.length) {G__8710__a[G__8710__i] = arguments[G__8710__i + 3]; ++G__8710__i;}
G__8709 = new cljs.core.IndexedSeq(G__8710__a,0);
}
return G__8705__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8705.cljs$lang$maxFixedArity = 3;
G__8705.cljs$lang$applyTo = G__8705__4.cljs$lang$applyTo;
G__8705.cljs$core$IFn$_invoke$arity$0 = G__8705__0;
G__8705.cljs$core$IFn$_invoke$arity$1 = G__8705__1;
G__8705.cljs$core$IFn$_invoke$arity$2 = G__8705__2;
G__8705.cljs$core$IFn$_invoke$arity$3 = G__8705__3;
G__8705.cljs$core$IFn$_invoke$arity$variadic = G__8705__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8705;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8711 = null;
var G__8711__0 = (function (){
var G__8681 = arg1;
var G__8682 = arg2;
var G__8683 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8681,G__8682,G__8683) : f.call(null,G__8681,G__8682,G__8683));
});
var G__8711__1 = (function (x){
var G__8684 = arg1;
var G__8685 = arg2;
var G__8686 = arg3;
var G__8687 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8684,G__8685,G__8686,G__8687) : f.call(null,G__8684,G__8685,G__8686,G__8687));
});
var G__8711__2 = (function (x,y){
var G__8688 = arg1;
var G__8689 = arg2;
var G__8690 = arg3;
var G__8691 = x;
var G__8692 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8688,G__8689,G__8690,G__8691,G__8692) : f.call(null,G__8688,G__8689,G__8690,G__8691,G__8692));
});
var G__8711__3 = (function (x,y,z){
var G__8693 = arg1;
var G__8694 = arg2;
var G__8695 = arg3;
var G__8696 = x;
var G__8697 = y;
var G__8698 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8693,G__8694,G__8695,G__8696,G__8697,G__8698) : f.call(null,G__8693,G__8694,G__8695,G__8696,G__8697,G__8698));
});
var G__8711__4 = (function() { 
var G__8712__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8712 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8713__i = 0, G__8713__a = new Array(arguments.length -  3);
while (G__8713__i < G__8713__a.length) {G__8713__a[G__8713__i] = arguments[G__8713__i + 3]; ++G__8713__i;}
  args = new cljs.core.IndexedSeq(G__8713__a,0);
} 
return G__8712__delegate.call(this,x,y,z,args);};
G__8712.cljs$lang$maxFixedArity = 3;
G__8712.cljs$lang$applyTo = (function (arglist__8714){
var x = cljs.core.first(arglist__8714);
arglist__8714 = cljs.core.next(arglist__8714);
var y = cljs.core.first(arglist__8714);
arglist__8714 = cljs.core.next(arglist__8714);
var z = cljs.core.first(arglist__8714);
var args = cljs.core.rest(arglist__8714);
return G__8712__delegate(x,y,z,args);
});
G__8712.cljs$core$IFn$_invoke$arity$variadic = G__8712__delegate;
return G__8712;
})()
;
G__8711 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8711__0.call(this);
case 1:
return G__8711__1.call(this,x);
case 2:
return G__8711__2.call(this,x,y);
case 3:
return G__8711__3.call(this,x,y,z);
default:
var G__8715 = null;
if (arguments.length > 3) {
var G__8716__i = 0, G__8716__a = new Array(arguments.length -  3);
while (G__8716__i < G__8716__a.length) {G__8716__a[G__8716__i] = arguments[G__8716__i + 3]; ++G__8716__i;}
G__8715 = new cljs.core.IndexedSeq(G__8716__a,0);
}
return G__8711__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8711.cljs$lang$maxFixedArity = 3;
G__8711.cljs$lang$applyTo = G__8711__4.cljs$lang$applyTo;
G__8711.cljs$core$IFn$_invoke$arity$0 = G__8711__0;
G__8711.cljs$core$IFn$_invoke$arity$1 = G__8711__1;
G__8711.cljs$core$IFn$_invoke$arity$2 = G__8711__2;
G__8711.cljs$core$IFn$_invoke$arity$3 = G__8711__3;
G__8711.cljs$core$IFn$_invoke$arity$variadic = G__8711__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8711;
})()
});
var cljs$core$partial__5 = (function() { 
var G__8717__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8718__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8718 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8719__i = 0, G__8719__a = new Array(arguments.length -  0);
while (G__8719__i < G__8719__a.length) {G__8719__a[G__8719__i] = arguments[G__8719__i + 0]; ++G__8719__i;}
  args = new cljs.core.IndexedSeq(G__8719__a,0);
} 
return G__8718__delegate.call(this,args);};
G__8718.cljs$lang$maxFixedArity = 0;
G__8718.cljs$lang$applyTo = (function (arglist__8720){
var args = cljs.core.seq(arglist__8720);
return G__8718__delegate(args);
});
G__8718.cljs$core$IFn$_invoke$arity$variadic = G__8718__delegate;
return G__8718;
})()
;
};
var G__8717 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8721__i = 0, G__8721__a = new Array(arguments.length -  4);
while (G__8721__i < G__8721__a.length) {G__8721__a[G__8721__i] = arguments[G__8721__i + 4]; ++G__8721__i;}
  more = new cljs.core.IndexedSeq(G__8721__a,0);
} 
return G__8717__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8717.cljs$lang$maxFixedArity = 4;
G__8717.cljs$lang$applyTo = (function (arglist__8722){
var f = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var arg1 = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var arg2 = cljs.core.first(arglist__8722);
arglist__8722 = cljs.core.next(arglist__8722);
var arg3 = cljs.core.first(arglist__8722);
var more = cljs.core.rest(arglist__8722);
return G__8717__delegate(f,arg1,arg2,arg3,more);
});
G__8717.cljs$core$IFn$_invoke$arity$variadic = G__8717__delegate;
return G__8717;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8723 = null;
if (arguments.length > 4) {
var G__8724__i = 0, G__8724__a = new Array(arguments.length -  4);
while (G__8724__i < G__8724__a.length) {G__8724__a[G__8724__i] = arguments[G__8724__i + 4]; ++G__8724__i;}
G__8723 = new cljs.core.IndexedSeq(G__8724__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__8757 = null;
var G__8757__1 = (function (a){
var G__8741 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8741) : f.call(null,G__8741));
});
var G__8757__2 = (function (a,b){
var G__8742 = (((a == null))?x:a);
var G__8743 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8742,G__8743) : f.call(null,G__8742,G__8743));
});
var G__8757__3 = (function (a,b,c){
var G__8744 = (((a == null))?x:a);
var G__8745 = b;
var G__8746 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8744,G__8745,G__8746) : f.call(null,G__8744,G__8745,G__8746));
});
var G__8757__4 = (function() { 
var G__8758__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8758 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8759__i = 0, G__8759__a = new Array(arguments.length -  3);
while (G__8759__i < G__8759__a.length) {G__8759__a[G__8759__i] = arguments[G__8759__i + 3]; ++G__8759__i;}
  ds = new cljs.core.IndexedSeq(G__8759__a,0);
} 
return G__8758__delegate.call(this,a,b,c,ds);};
G__8758.cljs$lang$maxFixedArity = 3;
G__8758.cljs$lang$applyTo = (function (arglist__8760){
var a = cljs.core.first(arglist__8760);
arglist__8760 = cljs.core.next(arglist__8760);
var b = cljs.core.first(arglist__8760);
arglist__8760 = cljs.core.next(arglist__8760);
var c = cljs.core.first(arglist__8760);
var ds = cljs.core.rest(arglist__8760);
return G__8758__delegate(a,b,c,ds);
});
G__8758.cljs$core$IFn$_invoke$arity$variadic = G__8758__delegate;
return G__8758;
})()
;
G__8757 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8757__1.call(this,a);
case 2:
return G__8757__2.call(this,a,b);
case 3:
return G__8757__3.call(this,a,b,c);
default:
var G__8761 = null;
if (arguments.length > 3) {
var G__8762__i = 0, G__8762__a = new Array(arguments.length -  3);
while (G__8762__i < G__8762__a.length) {G__8762__a[G__8762__i] = arguments[G__8762__i + 3]; ++G__8762__i;}
G__8761 = new cljs.core.IndexedSeq(G__8762__a,0);
}
return G__8757__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8757.cljs$lang$maxFixedArity = 3;
G__8757.cljs$lang$applyTo = G__8757__4.cljs$lang$applyTo;
G__8757.cljs$core$IFn$_invoke$arity$1 = G__8757__1;
G__8757.cljs$core$IFn$_invoke$arity$2 = G__8757__2;
G__8757.cljs$core$IFn$_invoke$arity$3 = G__8757__3;
G__8757.cljs$core$IFn$_invoke$arity$variadic = G__8757__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8757;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__8763 = null;
var G__8763__2 = (function (a,b){
var G__8747 = (((a == null))?x:a);
var G__8748 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8747,G__8748) : f.call(null,G__8747,G__8748));
});
var G__8763__3 = (function (a,b,c){
var G__8749 = (((a == null))?x:a);
var G__8750 = (((b == null))?y:b);
var G__8751 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8749,G__8750,G__8751) : f.call(null,G__8749,G__8750,G__8751));
});
var G__8763__4 = (function() { 
var G__8764__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8764 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8765__i = 0, G__8765__a = new Array(arguments.length -  3);
while (G__8765__i < G__8765__a.length) {G__8765__a[G__8765__i] = arguments[G__8765__i + 3]; ++G__8765__i;}
  ds = new cljs.core.IndexedSeq(G__8765__a,0);
} 
return G__8764__delegate.call(this,a,b,c,ds);};
G__8764.cljs$lang$maxFixedArity = 3;
G__8764.cljs$lang$applyTo = (function (arglist__8766){
var a = cljs.core.first(arglist__8766);
arglist__8766 = cljs.core.next(arglist__8766);
var b = cljs.core.first(arglist__8766);
arglist__8766 = cljs.core.next(arglist__8766);
var c = cljs.core.first(arglist__8766);
var ds = cljs.core.rest(arglist__8766);
return G__8764__delegate(a,b,c,ds);
});
G__8764.cljs$core$IFn$_invoke$arity$variadic = G__8764__delegate;
return G__8764;
})()
;
G__8763 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8763__2.call(this,a,b);
case 3:
return G__8763__3.call(this,a,b,c);
default:
var G__8767 = null;
if (arguments.length > 3) {
var G__8768__i = 0, G__8768__a = new Array(arguments.length -  3);
while (G__8768__i < G__8768__a.length) {G__8768__a[G__8768__i] = arguments[G__8768__i + 3]; ++G__8768__i;}
G__8767 = new cljs.core.IndexedSeq(G__8768__a,0);
}
return G__8763__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8763.cljs$lang$maxFixedArity = 3;
G__8763.cljs$lang$applyTo = G__8763__4.cljs$lang$applyTo;
G__8763.cljs$core$IFn$_invoke$arity$2 = G__8763__2;
G__8763.cljs$core$IFn$_invoke$arity$3 = G__8763__3;
G__8763.cljs$core$IFn$_invoke$arity$variadic = G__8763__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8763;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__8769 = null;
var G__8769__2 = (function (a,b){
var G__8752 = (((a == null))?x:a);
var G__8753 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8752,G__8753) : f.call(null,G__8752,G__8753));
});
var G__8769__3 = (function (a,b,c){
var G__8754 = (((a == null))?x:a);
var G__8755 = (((b == null))?y:b);
var G__8756 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8754,G__8755,G__8756) : f.call(null,G__8754,G__8755,G__8756));
});
var G__8769__4 = (function() { 
var G__8770__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8770 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8771__i = 0, G__8771__a = new Array(arguments.length -  3);
while (G__8771__i < G__8771__a.length) {G__8771__a[G__8771__i] = arguments[G__8771__i + 3]; ++G__8771__i;}
  ds = new cljs.core.IndexedSeq(G__8771__a,0);
} 
return G__8770__delegate.call(this,a,b,c,ds);};
G__8770.cljs$lang$maxFixedArity = 3;
G__8770.cljs$lang$applyTo = (function (arglist__8772){
var a = cljs.core.first(arglist__8772);
arglist__8772 = cljs.core.next(arglist__8772);
var b = cljs.core.first(arglist__8772);
arglist__8772 = cljs.core.next(arglist__8772);
var c = cljs.core.first(arglist__8772);
var ds = cljs.core.rest(arglist__8772);
return G__8770__delegate(a,b,c,ds);
});
G__8770.cljs$core$IFn$_invoke$arity$variadic = G__8770__delegate;
return G__8770;
})()
;
G__8769 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8769__2.call(this,a,b);
case 3:
return G__8769__3.call(this,a,b,c);
default:
var G__8773 = null;
if (arguments.length > 3) {
var G__8774__i = 0, G__8774__a = new Array(arguments.length -  3);
while (G__8774__i < G__8774__a.length) {G__8774__a[G__8774__i] = arguments[G__8774__i + 3]; ++G__8774__i;}
G__8773 = new cljs.core.IndexedSeq(G__8774__a,0);
}
return G__8769__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8769.cljs$lang$maxFixedArity = 3;
G__8769.cljs$lang$applyTo = G__8769__4.cljs$lang$applyTo;
G__8769.cljs$core$IFn$_invoke$arity$2 = G__8769__2;
G__8769.cljs$core$IFn$_invoke$arity$3 = G__8769__3;
G__8769.cljs$core$IFn$_invoke$arity$variadic = G__8769__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8769;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8805 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8805) : cljs.core.volatile_BANG_.call(null,G__8805));
})();
return ((function (i){
return (function() {
var G__8835 = null;
var G__8835__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8835__1 = (function (result){
var G__8806 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8806) : rf.call(null,G__8806));
});
var G__8835__2 = (function (result,input){
var G__8807 = result;
var G__8808 = (function (){var G__8809 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8810 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8809,G__8810) : f.call(null,G__8809,G__8810));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8807,G__8808) : rf.call(null,G__8807,G__8808));
});
G__8835 = function(result,input){
switch(arguments.length){
case 0:
return G__8835__0.call(this);
case 1:
return G__8835__1.call(this,result);
case 2:
return G__8835__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8835.cljs$core$IFn$_invoke$arity$0 = G__8835__0;
G__8835.cljs$core$IFn$_invoke$arity$1 = G__8835__1;
G__8835.cljs$core$IFn$_invoke$arity$2 = G__8835__2;
return G__8835;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4978__auto___8836 = size;
var i_8837 = (0);
while(true){
if((i_8837 < n__4978__auto___8836)){
cljs.core.chunk_append(b,(function (){var G__8831 = (idx + i_8837);
var G__8832 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8837);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8831,G__8832) : f.call(null,G__8831,G__8832));
})());

var G__8838 = (i_8837 + (1));
i_8837 = G__8838;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8833 = idx;
var G__8834 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8833,G__8834) : f.call(null,G__8833,G__8834));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8857 = null;
var G__8857__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8857__1 = (function (result){
var G__8851 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8851) : rf.call(null,G__8851));
});
var G__8857__2 = (function (result,input){
var v = (function (){var G__8852 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8852) : f.call(null,G__8852));
})();
if((v == null)){
return result;
} else {
var G__8853 = result;
var G__8854 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8853,G__8854) : rf.call(null,G__8853,G__8854));
}
});
G__8857 = function(result,input){
switch(arguments.length){
case 0:
return G__8857__0.call(this);
case 1:
return G__8857__1.call(this,result);
case 2:
return G__8857__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8857.cljs$core$IFn$_invoke$arity$0 = G__8857__0;
G__8857.cljs$core$IFn$_invoke$arity$1 = G__8857__1;
G__8857.cljs$core$IFn$_invoke$arity$2 = G__8857__2;
return G__8857;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4978__auto___8858 = size;
var i_8859 = (0);
while(true){
if((i_8859 < n__4978__auto___8858)){
var x_8860 = (function (){var G__8855 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8859);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8855) : f.call(null,G__8855));
})();
if((x_8860 == null)){
} else {
cljs.core.chunk_append(b,x_8860);
}

var G__8861 = (i_8859 + (1));
i_8859 = G__8861;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8856 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8856) : f.call(null,G__8856));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8862 = this$__$1;
return goog.getUid(G__8862);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8863 = cljs.core.seq(self__.watches);
var chunk__8864 = null;
var count__8865 = (0);
var i__8866 = (0);
while(true){
if((i__8866 < count__8865)){
var vec__8867 = chunk__8864.cljs$core$IIndexed$_nth$arity$2(null,i__8866);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8867,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8867,(1),null);
var G__8868_8877 = key;
var G__8869_8878 = this$__$1;
var G__8870_8879 = oldval;
var G__8871_8880 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8868_8877,G__8869_8878,G__8870_8879,G__8871_8880) : f.call(null,G__8868_8877,G__8869_8878,G__8870_8879,G__8871_8880));

var G__8881 = seq__8863;
var G__8882 = chunk__8864;
var G__8883 = count__8865;
var G__8884 = (i__8866 + (1));
seq__8863 = G__8881;
chunk__8864 = G__8882;
count__8865 = G__8883;
i__8866 = G__8884;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8863);
if(temp__4126__auto__){
var seq__8863__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8863__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__8863__$1);
var G__8885 = cljs.core.chunk_rest(seq__8863__$1);
var G__8886 = c__4878__auto__;
var G__8887 = cljs.core.count(c__4878__auto__);
var G__8888 = (0);
seq__8863 = G__8885;
chunk__8864 = G__8886;
count__8865 = G__8887;
i__8866 = G__8888;
continue;
} else {
var vec__8872 = cljs.core.first(seq__8863__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8872,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8872,(1),null);
var G__8873_8889 = key;
var G__8874_8890 = this$__$1;
var G__8875_8891 = oldval;
var G__8876_8892 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8873_8889,G__8874_8890,G__8875_8891,G__8876_8892) : f.call(null,G__8873_8889,G__8874_8890,G__8875_8891,G__8876_8892));

var G__8893 = cljs.core.next(seq__8863__$1);
var G__8894 = null;
var G__8895 = (0);
var G__8896 = (0);
seq__8863 = G__8893;
chunk__8864 = G__8894;
count__8865 = G__8895;
i__8866 = G__8896;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__8900__delegate = function (x,p__8897){
var map__8899 = p__8897;
var map__8899__$1 = ((cljs.core.seq_QMARK_(map__8899))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8899):map__8899);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8899__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8899__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8900 = function (x,var_args){
var p__8897 = null;
if (arguments.length > 1) {
var G__8901__i = 0, G__8901__a = new Array(arguments.length -  1);
while (G__8901__i < G__8901__a.length) {G__8901__a[G__8901__i] = arguments[G__8901__i + 1]; ++G__8901__i;}
  p__8897 = new cljs.core.IndexedSeq(G__8901__a,0);
} 
return G__8900__delegate.call(this,x,p__8897);};
G__8900.cljs$lang$maxFixedArity = 1;
G__8900.cljs$lang$applyTo = (function (arglist__8902){
var x = cljs.core.first(arglist__8902);
var p__8897 = cljs.core.rest(arglist__8902);
return G__8900__delegate(x,p__8897);
});
G__8900.cljs$core$IFn$_invoke$arity$variadic = G__8900__delegate;
return G__8900;
})()
;
cljs$core$atom = function(x,var_args){
var p__8897 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__8903 = null;
if (arguments.length > 1) {
var G__8904__i = 0, G__8904__a = new Array(arguments.length -  1);
while (G__8904__i < G__8904__a.length) {G__8904__a[G__8904__i] = arguments[G__8904__i + 1]; ++G__8904__i;}
G__8903 = new cljs.core.IndexedSeq(G__8904__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8903);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8907 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8907) : validate.call(null,G__8907));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8908 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8908) : cljs.core.pr_str.call(null,G__8908));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8915 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8915) : f.call(null,G__8915));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8916 = a.state;
var G__8917 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8916,G__8917) : f.call(null,G__8916,G__8917));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8918 = a.state;
var G__8919 = x;
var G__8920 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8918,G__8919,G__8920) : f.call(null,G__8918,G__8919,G__8920));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__8921__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8921 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8922__i = 0, G__8922__a = new Array(arguments.length -  4);
while (G__8922__i < G__8922__a.length) {G__8922__a[G__8922__i] = arguments[G__8922__i + 4]; ++G__8922__i;}
  more = new cljs.core.IndexedSeq(G__8922__a,0);
} 
return G__8921__delegate.call(this,a,f,x,y,more);};
G__8921.cljs$lang$maxFixedArity = 4;
G__8921.cljs$lang$applyTo = (function (arglist__8923){
var a = cljs.core.first(arglist__8923);
arglist__8923 = cljs.core.next(arglist__8923);
var f = cljs.core.first(arglist__8923);
arglist__8923 = cljs.core.next(arglist__8923);
var x = cljs.core.first(arglist__8923);
arglist__8923 = cljs.core.next(arglist__8923);
var y = cljs.core.first(arglist__8923);
var more = cljs.core.rest(arglist__8923);
return G__8921__delegate(a,f,x,y,more);
});
G__8921.cljs$core$IFn$_invoke$arity$variadic = G__8921__delegate;
return G__8921;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__8924 = null;
if (arguments.length > 4) {
var G__8925__i = 0, G__8925__a = new Array(arguments.length -  4);
while (G__8925__i < G__8925__a.length) {G__8925__a[G__8925__i] = arguments[G__8925__i + 4]; ++G__8925__i;}
G__8924 = new cljs.core.IndexedSeq(G__8925__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8992 = null;
var G__8992__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8992__1 = (function (result){
var G__8959 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8959) : rf.call(null,G__8959));
});
var G__8992__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8960 = i;
var G__8961 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8960,G__8961) : f.call(null,G__8960,G__8961));
})();
if((v == null)){
return result;
} else {
var G__8962 = result;
var G__8963 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8962,G__8963) : rf.call(null,G__8962,G__8963));
}
});
G__8992 = function(result,input){
switch(arguments.length){
case 0:
return G__8992__0.call(this);
case 1:
return G__8992__1.call(this,result);
case 2:
return G__8992__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8992.cljs$core$IFn$_invoke$arity$0 = G__8992__0;
G__8992.cljs$core$IFn$_invoke$arity$1 = G__8992__1;
G__8992.cljs$core$IFn$_invoke$arity$2 = G__8992__2;
return G__8992;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4978__auto___8993 = size;
var i_8994 = (0);
while(true){
if((i_8994 < n__4978__auto___8993)){
var x_8995 = (function (){var G__8988 = (idx + i_8994);
var G__8989 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8994);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8988,G__8989) : f.call(null,G__8988,G__8989));
})();
if((x_8995 == null)){
} else {
cljs.core.chunk_append(b,x_8995);
}

var G__8996 = (i_8994 + (1));
i_8994 = G__8996;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8990 = idx;
var G__8991 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8990,G__8991) : f.call(null,G__8990,G__8991));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9210 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9210) : p.call(null,G__9210));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9212 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9212) : p.call(null,G__9212));
})();
if(cljs.core.truth_(and__4081__auto__)){
var G__9213 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9213) : p.call(null,G__9213));
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9215 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9215) : p.call(null,G__9215));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9217 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9217) : p.call(null,G__9217));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var G__9218 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9218) : p.call(null,G__9218));
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__9387__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9387 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9388__i = 0, G__9388__a = new Array(arguments.length -  3);
while (G__9388__i < G__9388__a.length) {G__9388__a[G__9388__i] = arguments[G__9388__i + 3]; ++G__9388__i;}
  args = new cljs.core.IndexedSeq(G__9388__a,0);
} 
return G__9387__delegate.call(this,x,y,z,args);};
G__9387.cljs$lang$maxFixedArity = 3;
G__9387.cljs$lang$applyTo = (function (arglist__9389){
var x = cljs.core.first(arglist__9389);
arglist__9389 = cljs.core.next(arglist__9389);
var y = cljs.core.first(arglist__9389);
arglist__9389 = cljs.core.next(arglist__9389);
var z = cljs.core.first(arglist__9389);
var args = cljs.core.rest(arglist__9389);
return G__9387__delegate(x,y,z,args);
});
G__9387.cljs$core$IFn$_invoke$arity$variadic = G__9387__delegate;
return G__9387;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__9390 = null;
if (arguments.length > 3) {
var G__9391__i = 0, G__9391__a = new Array(arguments.length -  3);
while (G__9391__i < G__9391__a.length) {G__9391__a[G__9391__i] = arguments[G__9391__i + 3]; ++G__9391__i;}
G__9390 = new cljs.core.IndexedSeq(G__9391__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9250 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9250) : p1.call(null,G__9250));
})();
if(cljs.core.truth_(and__4081__auto__)){
var G__9251 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9251) : p2.call(null,G__9251));
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9253 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9253) : p1.call(null,G__9253));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9255 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9255) : p1.call(null,G__9255));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var and__4081__auto____$2 = (function (){var G__9257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9257) : p2.call(null,G__9257));
})();
if(cljs.core.truth_(and__4081__auto____$2)){
var G__9258 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9258) : p2.call(null,G__9258));
} else {
return and__4081__auto____$2;
}
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9260 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9260) : p1.call(null,G__9260));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9262 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9262) : p1.call(null,G__9262));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var and__4081__auto____$2 = (function (){var G__9264 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9264) : p1.call(null,G__9264));
})();
if(cljs.core.truth_(and__4081__auto____$2)){
var and__4081__auto____$3 = (function (){var G__9266 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9266) : p2.call(null,G__9266));
})();
if(cljs.core.truth_(and__4081__auto____$3)){
var and__4081__auto____$4 = (function (){var G__9268 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9268) : p2.call(null,G__9268));
})();
if(cljs.core.truth_(and__4081__auto____$4)){
var G__9269 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9269) : p2.call(null,G__9269));
} else {
return and__4081__auto____$4;
}
} else {
return and__4081__auto____$3;
}
} else {
return and__4081__auto____$2;
}
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__9392__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8997_SHARP_){
var and__4081__auto__ = (function (){var G__9274 = p1__8997_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9274) : p1.call(null,G__9274));
})();
if(cljs.core.truth_(and__4081__auto__)){
var G__9275 = p1__8997_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9275) : p2.call(null,G__9275));
} else {
return and__4081__auto__;
}
}),args)));
};
var G__9392 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9393__i = 0, G__9393__a = new Array(arguments.length -  3);
while (G__9393__i < G__9393__a.length) {G__9393__a[G__9393__i] = arguments[G__9393__i + 3]; ++G__9393__i;}
  args = new cljs.core.IndexedSeq(G__9393__a,0);
} 
return G__9392__delegate.call(this,x,y,z,args);};
G__9392.cljs$lang$maxFixedArity = 3;
G__9392.cljs$lang$applyTo = (function (arglist__9394){
var x = cljs.core.first(arglist__9394);
arglist__9394 = cljs.core.next(arglist__9394);
var y = cljs.core.first(arglist__9394);
arglist__9394 = cljs.core.next(arglist__9394);
var z = cljs.core.first(arglist__9394);
var args = cljs.core.rest(arglist__9394);
return G__9392__delegate(x,y,z,args);
});
G__9392.cljs$core$IFn$_invoke$arity$variadic = G__9392__delegate;
return G__9392;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__9395 = null;
if (arguments.length > 3) {
var G__9396__i = 0, G__9396__a = new Array(arguments.length -  3);
while (G__9396__i < G__9396__a.length) {G__9396__a[G__9396__i] = arguments[G__9396__i + 3]; ++G__9396__i;}
G__9395 = new cljs.core.IndexedSeq(G__9396__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9321 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9321) : p1.call(null,G__9321));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9323 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9323) : p2.call(null,G__9323));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var G__9324 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9324) : p3.call(null,G__9324));
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9326 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9326) : p1.call(null,G__9326));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9328 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9328) : p2.call(null,G__9328));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var and__4081__auto____$2 = (function (){var G__9330 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9330) : p3.call(null,G__9330));
})();
if(cljs.core.truth_(and__4081__auto____$2)){
var and__4081__auto____$3 = (function (){var G__9332 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9332) : p1.call(null,G__9332));
})();
if(cljs.core.truth_(and__4081__auto____$3)){
var and__4081__auto____$4 = (function (){var G__9334 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9334) : p2.call(null,G__9334));
})();
if(cljs.core.truth_(and__4081__auto____$4)){
var G__9335 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9335) : p3.call(null,G__9335));
} else {
return and__4081__auto____$4;
}
} else {
return and__4081__auto____$3;
}
} else {
return and__4081__auto____$2;
}
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4081__auto__ = (function (){var G__9337 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9337) : p1.call(null,G__9337));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9339 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9339) : p2.call(null,G__9339));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var and__4081__auto____$2 = (function (){var G__9341 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9341) : p3.call(null,G__9341));
})();
if(cljs.core.truth_(and__4081__auto____$2)){
var and__4081__auto____$3 = (function (){var G__9343 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9343) : p1.call(null,G__9343));
})();
if(cljs.core.truth_(and__4081__auto____$3)){
var and__4081__auto____$4 = (function (){var G__9345 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9345) : p2.call(null,G__9345));
})();
if(cljs.core.truth_(and__4081__auto____$4)){
var and__4081__auto____$5 = (function (){var G__9347 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9347) : p3.call(null,G__9347));
})();
if(cljs.core.truth_(and__4081__auto____$5)){
var and__4081__auto____$6 = (function (){var G__9349 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9349) : p1.call(null,G__9349));
})();
if(cljs.core.truth_(and__4081__auto____$6)){
var and__4081__auto____$7 = (function (){var G__9351 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9351) : p2.call(null,G__9351));
})();
if(cljs.core.truth_(and__4081__auto____$7)){
var G__9352 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9352) : p3.call(null,G__9352));
} else {
return and__4081__auto____$7;
}
} else {
return and__4081__auto____$6;
}
} else {
return and__4081__auto____$5;
}
} else {
return and__4081__auto____$4;
}
} else {
return and__4081__auto____$3;
}
} else {
return and__4081__auto____$2;
}
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__9397__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8998_SHARP_){
var and__4081__auto__ = (function (){var G__9359 = p1__8998_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9359) : p1.call(null,G__9359));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9361 = p1__8998_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9361) : p2.call(null,G__9361));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var G__9362 = p1__8998_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9362) : p3.call(null,G__9362));
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
}),args)));
};
var G__9397 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9398__i = 0, G__9398__a = new Array(arguments.length -  3);
while (G__9398__i < G__9398__a.length) {G__9398__a[G__9398__i] = arguments[G__9398__i + 3]; ++G__9398__i;}
  args = new cljs.core.IndexedSeq(G__9398__a,0);
} 
return G__9397__delegate.call(this,x,y,z,args);};
G__9397.cljs$lang$maxFixedArity = 3;
G__9397.cljs$lang$applyTo = (function (arglist__9399){
var x = cljs.core.first(arglist__9399);
arglist__9399 = cljs.core.next(arglist__9399);
var y = cljs.core.first(arglist__9399);
arglist__9399 = cljs.core.next(arglist__9399);
var z = cljs.core.first(arglist__9399);
var args = cljs.core.rest(arglist__9399);
return G__9397__delegate(x,y,z,args);
});
G__9397.cljs$core$IFn$_invoke$arity$variadic = G__9397__delegate;
return G__9397;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__9400 = null;
if (arguments.length > 3) {
var G__9401__i = 0, G__9401__a = new Array(arguments.length -  3);
while (G__9401__i < G__9401__a.length) {G__9401__a[G__9401__i] = arguments[G__9401__i + 3]; ++G__9401__i;}
G__9400 = new cljs.core.IndexedSeq(G__9401__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9400);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__9402__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8999_SHARP_){
var G__9378 = x;
return (p1__8999_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8999_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9378) : p1__8999_SHARP_.call(null,G__9378));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9000_SHARP_){
var and__4081__auto__ = (function (){var G__9380 = x;
return (p1__9000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9380) : p1__9000_SHARP_.call(null,G__9380));
})();
if(cljs.core.truth_(and__4081__auto__)){
var G__9381 = y;
return (p1__9000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9381) : p1__9000_SHARP_.call(null,G__9381));
} else {
return and__4081__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9001_SHARP_){
var and__4081__auto__ = (function (){var G__9383 = x;
return (p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9383) : p1__9001_SHARP_.call(null,G__9383));
})();
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__9385 = y;
return (p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9385) : p1__9001_SHARP_.call(null,G__9385));
})();
if(cljs.core.truth_(and__4081__auto____$1)){
var G__9386 = z;
return (p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9386) : p1__9001_SHARP_.call(null,G__9386));
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__9403__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9002_SHARP_){
return cljs.core.every_QMARK_(p1__9002_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9403 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9404__i = 0, G__9404__a = new Array(arguments.length -  3);
while (G__9404__i < G__9404__a.length) {G__9404__a[G__9404__i] = arguments[G__9404__i + 3]; ++G__9404__i;}
  args = new cljs.core.IndexedSeq(G__9404__a,0);
} 
return G__9403__delegate.call(this,x,y,z,args);};
G__9403.cljs$lang$maxFixedArity = 3;
G__9403.cljs$lang$applyTo = (function (arglist__9405){
var x = cljs.core.first(arglist__9405);
arglist__9405 = cljs.core.next(arglist__9405);
var y = cljs.core.first(arglist__9405);
arglist__9405 = cljs.core.next(arglist__9405);
var z = cljs.core.first(arglist__9405);
var args = cljs.core.rest(arglist__9405);
return G__9403__delegate(x,y,z,args);
});
G__9403.cljs$core$IFn$_invoke$arity$variadic = G__9403__delegate;
return G__9403;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__9406 = null;
if (arguments.length > 3) {
var G__9407__i = 0, G__9407__a = new Array(arguments.length -  3);
while (G__9407__i < G__9407__a.length) {G__9407__a[G__9407__i] = arguments[G__9407__i + 3]; ++G__9407__i;}
G__9406 = new cljs.core.IndexedSeq(G__9407__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__9402 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9408__i = 0, G__9408__a = new Array(arguments.length -  3);
while (G__9408__i < G__9408__a.length) {G__9408__a[G__9408__i] = arguments[G__9408__i + 3]; ++G__9408__i;}
  ps = new cljs.core.IndexedSeq(G__9408__a,0);
} 
return G__9402__delegate.call(this,p1,p2,p3,ps);};
G__9402.cljs$lang$maxFixedArity = 3;
G__9402.cljs$lang$applyTo = (function (arglist__9409){
var p1 = cljs.core.first(arglist__9409);
arglist__9409 = cljs.core.next(arglist__9409);
var p2 = cljs.core.first(arglist__9409);
arglist__9409 = cljs.core.next(arglist__9409);
var p3 = cljs.core.first(arglist__9409);
var ps = cljs.core.rest(arglist__9409);
return G__9402__delegate(p1,p2,p3,ps);
});
G__9402.cljs$core$IFn$_invoke$arity$variadic = G__9402__delegate;
return G__9402;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__9410 = null;
if (arguments.length > 3) {
var G__9411__i = 0, G__9411__a = new Array(arguments.length -  3);
while (G__9411__i < G__9411__a.length) {G__9411__a[G__9411__i] = arguments[G__9411__i + 3]; ++G__9411__i;}
G__9410 = new cljs.core.IndexedSeq(G__9411__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__9617 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9617) : p.call(null,G__9617));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__4093__auto__ = (function (){var G__9619 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9619) : p.call(null,G__9619));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var G__9620 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9620) : p.call(null,G__9620));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__4093__auto__ = (function (){var G__9622 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9622) : p.call(null,G__9622));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9624 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9624) : p.call(null,G__9624));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var G__9625 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9625) : p.call(null,G__9625));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__9786__delegate = function (x,y,z,args){
var or__4093__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9786 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9787__i = 0, G__9787__a = new Array(arguments.length -  3);
while (G__9787__i < G__9787__a.length) {G__9787__a[G__9787__i] = arguments[G__9787__i + 3]; ++G__9787__i;}
  args = new cljs.core.IndexedSeq(G__9787__a,0);
} 
return G__9786__delegate.call(this,x,y,z,args);};
G__9786.cljs$lang$maxFixedArity = 3;
G__9786.cljs$lang$applyTo = (function (arglist__9788){
var x = cljs.core.first(arglist__9788);
arglist__9788 = cljs.core.next(arglist__9788);
var y = cljs.core.first(arglist__9788);
arglist__9788 = cljs.core.next(arglist__9788);
var z = cljs.core.first(arglist__9788);
var args = cljs.core.rest(arglist__9788);
return G__9786__delegate(x,y,z,args);
});
G__9786.cljs$core$IFn$_invoke$arity$variadic = G__9786__delegate;
return G__9786;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__9789 = null;
if (arguments.length > 3) {
var G__9790__i = 0, G__9790__a = new Array(arguments.length -  3);
while (G__9790__i < G__9790__a.length) {G__9790__a[G__9790__i] = arguments[G__9790__i + 3]; ++G__9790__i;}
G__9789 = new cljs.core.IndexedSeq(G__9790__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__4093__auto__ = (function (){var G__9657 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9657) : p1.call(null,G__9657));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var G__9658 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9658) : p2.call(null,G__9658));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__4093__auto__ = (function (){var G__9660 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9660) : p1.call(null,G__9660));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9662 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9662) : p1.call(null,G__9662));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var G__9664 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9664) : p2.call(null,G__9664));
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
var G__9665 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9665) : p2.call(null,G__9665));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__4093__auto__ = (function (){var G__9667 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9667) : p1.call(null,G__9667));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9669 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9669) : p1.call(null,G__9669));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var G__9671 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9671) : p1.call(null,G__9671));
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
var or__4093__auto____$3 = (function (){var G__9673 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9673) : p2.call(null,G__9673));
})();
if(cljs.core.truth_(or__4093__auto____$3)){
return or__4093__auto____$3;
} else {
var or__4093__auto____$4 = (function (){var G__9675 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9675) : p2.call(null,G__9675));
})();
if(cljs.core.truth_(or__4093__auto____$4)){
return or__4093__auto____$4;
} else {
var G__9676 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9676) : p2.call(null,G__9676));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__9791__delegate = function (x,y,z,args){
var or__4093__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.some(((function (or__4093__auto__){
return (function (p1__9412_SHARP_){
var or__4093__auto____$1 = (function (){var G__9678 = p1__9412_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9678) : p1.call(null,G__9678));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var G__9679 = p1__9412_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9679) : p2.call(null,G__9679));
}
});})(or__4093__auto__))
,args);
}
};
var G__9791 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9792__i = 0, G__9792__a = new Array(arguments.length -  3);
while (G__9792__i < G__9792__a.length) {G__9792__a[G__9792__i] = arguments[G__9792__i + 3]; ++G__9792__i;}
  args = new cljs.core.IndexedSeq(G__9792__a,0);
} 
return G__9791__delegate.call(this,x,y,z,args);};
G__9791.cljs$lang$maxFixedArity = 3;
G__9791.cljs$lang$applyTo = (function (arglist__9793){
var x = cljs.core.first(arglist__9793);
arglist__9793 = cljs.core.next(arglist__9793);
var y = cljs.core.first(arglist__9793);
arglist__9793 = cljs.core.next(arglist__9793);
var z = cljs.core.first(arglist__9793);
var args = cljs.core.rest(arglist__9793);
return G__9791__delegate(x,y,z,args);
});
G__9791.cljs$core$IFn$_invoke$arity$variadic = G__9791__delegate;
return G__9791;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__9794 = null;
if (arguments.length > 3) {
var G__9795__i = 0, G__9795__a = new Array(arguments.length -  3);
while (G__9795__i < G__9795__a.length) {G__9795__a[G__9795__i] = arguments[G__9795__i + 3]; ++G__9795__i;}
G__9794 = new cljs.core.IndexedSeq(G__9795__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__4093__auto__ = (function (){var G__9725 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9725) : p1.call(null,G__9725));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9727 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9727) : p2.call(null,G__9727));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var G__9728 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9728) : p3.call(null,G__9728));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__4093__auto__ = (function (){var G__9730 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9730) : p1.call(null,G__9730));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9732 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9732) : p2.call(null,G__9732));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var G__9734 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9734) : p3.call(null,G__9734));
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
var or__4093__auto____$3 = (function (){var G__9736 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9736) : p1.call(null,G__9736));
})();
if(cljs.core.truth_(or__4093__auto____$3)){
return or__4093__auto____$3;
} else {
var or__4093__auto____$4 = (function (){var G__9738 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9738) : p2.call(null,G__9738));
})();
if(cljs.core.truth_(or__4093__auto____$4)){
return or__4093__auto____$4;
} else {
var G__9739 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9739) : p3.call(null,G__9739));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__4093__auto__ = (function (){var G__9741 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9741) : p1.call(null,G__9741));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9743 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9743) : p2.call(null,G__9743));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var G__9745 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9745) : p3.call(null,G__9745));
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
var or__4093__auto____$3 = (function (){var G__9747 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9747) : p1.call(null,G__9747));
})();
if(cljs.core.truth_(or__4093__auto____$3)){
return or__4093__auto____$3;
} else {
var or__4093__auto____$4 = (function (){var G__9749 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9749) : p2.call(null,G__9749));
})();
if(cljs.core.truth_(or__4093__auto____$4)){
return or__4093__auto____$4;
} else {
var or__4093__auto____$5 = (function (){var G__9751 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9751) : p3.call(null,G__9751));
})();
if(cljs.core.truth_(or__4093__auto____$5)){
return or__4093__auto____$5;
} else {
var or__4093__auto____$6 = (function (){var G__9753 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9753) : p1.call(null,G__9753));
})();
if(cljs.core.truth_(or__4093__auto____$6)){
return or__4093__auto____$6;
} else {
var or__4093__auto____$7 = (function (){var G__9755 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9755) : p2.call(null,G__9755));
})();
if(cljs.core.truth_(or__4093__auto____$7)){
return or__4093__auto____$7;
} else {
var G__9756 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9756) : p3.call(null,G__9756));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__9796__delegate = function (x,y,z,args){
var or__4093__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.some(((function (or__4093__auto__){
return (function (p1__9413_SHARP_){
var or__4093__auto____$1 = (function (){var G__9758 = p1__9413_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9758) : p1.call(null,G__9758));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var G__9760 = p1__9413_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9760) : p2.call(null,G__9760));
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
var G__9761 = p1__9413_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9761) : p3.call(null,G__9761));
}
}
});})(or__4093__auto__))
,args);
}
};
var G__9796 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9797__i = 0, G__9797__a = new Array(arguments.length -  3);
while (G__9797__i < G__9797__a.length) {G__9797__a[G__9797__i] = arguments[G__9797__i + 3]; ++G__9797__i;}
  args = new cljs.core.IndexedSeq(G__9797__a,0);
} 
return G__9796__delegate.call(this,x,y,z,args);};
G__9796.cljs$lang$maxFixedArity = 3;
G__9796.cljs$lang$applyTo = (function (arglist__9798){
var x = cljs.core.first(arglist__9798);
arglist__9798 = cljs.core.next(arglist__9798);
var y = cljs.core.first(arglist__9798);
arglist__9798 = cljs.core.next(arglist__9798);
var z = cljs.core.first(arglist__9798);
var args = cljs.core.rest(arglist__9798);
return G__9796__delegate(x,y,z,args);
});
G__9796.cljs$core$IFn$_invoke$arity$variadic = G__9796__delegate;
return G__9796;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__9799 = null;
if (arguments.length > 3) {
var G__9800__i = 0, G__9800__a = new Array(arguments.length -  3);
while (G__9800__i < G__9800__a.length) {G__9800__a[G__9800__i] = arguments[G__9800__i + 3]; ++G__9800__i;}
G__9799 = new cljs.core.IndexedSeq(G__9800__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__9801__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9414_SHARP_){
var G__9777 = x;
return (p1__9414_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9414_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9777) : p1__9414_SHARP_.call(null,G__9777));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9415_SHARP_){
var or__4093__auto__ = (function (){var G__9779 = x;
return (p1__9415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9779) : p1__9415_SHARP_.call(null,G__9779));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var G__9780 = y;
return (p1__9415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9415_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9780) : p1__9415_SHARP_.call(null,G__9780));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9416_SHARP_){
var or__4093__auto__ = (function (){var G__9782 = x;
return (p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9782) : p1__9416_SHARP_.call(null,G__9782));
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var G__9784 = y;
return (p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9784) : p1__9416_SHARP_.call(null,G__9784));
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var G__9785 = z;
return (p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9785) : p1__9416_SHARP_.call(null,G__9785));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__9802__delegate = function (x,y,z,args){
var or__4093__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.some(((function (or__4093__auto__,ps__$1){
return (function (p1__9417_SHARP_){
return cljs.core.some(p1__9417_SHARP_,args);
});})(or__4093__auto__,ps__$1))
,ps__$1);
}
};
var G__9802 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9803__i = 0, G__9803__a = new Array(arguments.length -  3);
while (G__9803__i < G__9803__a.length) {G__9803__a[G__9803__i] = arguments[G__9803__i + 3]; ++G__9803__i;}
  args = new cljs.core.IndexedSeq(G__9803__a,0);
} 
return G__9802__delegate.call(this,x,y,z,args);};
G__9802.cljs$lang$maxFixedArity = 3;
G__9802.cljs$lang$applyTo = (function (arglist__9804){
var x = cljs.core.first(arglist__9804);
arglist__9804 = cljs.core.next(arglist__9804);
var y = cljs.core.first(arglist__9804);
arglist__9804 = cljs.core.next(arglist__9804);
var z = cljs.core.first(arglist__9804);
var args = cljs.core.rest(arglist__9804);
return G__9802__delegate(x,y,z,args);
});
G__9802.cljs$core$IFn$_invoke$arity$variadic = G__9802__delegate;
return G__9802;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__9805 = null;
if (arguments.length > 3) {
var G__9806__i = 0, G__9806__a = new Array(arguments.length -  3);
while (G__9806__i < G__9806__a.length) {G__9806__a[G__9806__i] = arguments[G__9806__i + 3]; ++G__9806__i;}
G__9805 = new cljs.core.IndexedSeq(G__9806__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__9801 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9807__i = 0, G__9807__a = new Array(arguments.length -  3);
while (G__9807__i < G__9807__a.length) {G__9807__a[G__9807__i] = arguments[G__9807__i + 3]; ++G__9807__i;}
  ps = new cljs.core.IndexedSeq(G__9807__a,0);
} 
return G__9801__delegate.call(this,p1,p2,p3,ps);};
G__9801.cljs$lang$maxFixedArity = 3;
G__9801.cljs$lang$applyTo = (function (arglist__9808){
var p1 = cljs.core.first(arglist__9808);
arglist__9808 = cljs.core.next(arglist__9808);
var p2 = cljs.core.first(arglist__9808);
arglist__9808 = cljs.core.next(arglist__9808);
var p3 = cljs.core.first(arglist__9808);
var ps = cljs.core.rest(arglist__9808);
return G__9801__delegate(p1,p2,p3,ps);
});
G__9801.cljs$core$IFn$_invoke$arity$variadic = G__9801__delegate;
return G__9801;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__9809 = null;
if (arguments.length > 3) {
var G__9810__i = 0, G__9810__a = new Array(arguments.length -  3);
while (G__9810__i < G__9810__a.length) {G__9810__a[G__9810__i] = arguments[G__9810__i + 3]; ++G__9810__i;}
G__9809 = new cljs.core.IndexedSeq(G__9810__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__9865 = null;
var G__9865__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9865__1 = (function (result){
var G__9851 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9851) : rf.call(null,G__9851));
});
var G__9865__2 = (function (result,input){
var G__9852 = result;
var G__9853 = (function (){var G__9854 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9854) : f.call(null,G__9854));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9852,G__9853) : rf.call(null,G__9852,G__9853));
});
var G__9865__3 = (function() { 
var G__9866__delegate = function (result,input,inputs){
var G__9855 = result;
var G__9856 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9855,G__9856) : rf.call(null,G__9855,G__9856));
};
var G__9866 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9867__i = 0, G__9867__a = new Array(arguments.length -  2);
while (G__9867__i < G__9867__a.length) {G__9867__a[G__9867__i] = arguments[G__9867__i + 2]; ++G__9867__i;}
  inputs = new cljs.core.IndexedSeq(G__9867__a,0);
} 
return G__9866__delegate.call(this,result,input,inputs);};
G__9866.cljs$lang$maxFixedArity = 2;
G__9866.cljs$lang$applyTo = (function (arglist__9868){
var result = cljs.core.first(arglist__9868);
arglist__9868 = cljs.core.next(arglist__9868);
var input = cljs.core.first(arglist__9868);
var inputs = cljs.core.rest(arglist__9868);
return G__9866__delegate(result,input,inputs);
});
G__9866.cljs$core$IFn$_invoke$arity$variadic = G__9866__delegate;
return G__9866;
})()
;
G__9865 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9865__0.call(this);
case 1:
return G__9865__1.call(this,result);
case 2:
return G__9865__2.call(this,result,input);
default:
var G__9869 = null;
if (arguments.length > 2) {
var G__9870__i = 0, G__9870__a = new Array(arguments.length -  2);
while (G__9870__i < G__9870__a.length) {G__9870__a[G__9870__i] = arguments[G__9870__i + 2]; ++G__9870__i;}
G__9869 = new cljs.core.IndexedSeq(G__9870__a,0);
}
return G__9865__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9869);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9865.cljs$lang$maxFixedArity = 2;
G__9865.cljs$lang$applyTo = G__9865__3.cljs$lang$applyTo;
G__9865.cljs$core$IFn$_invoke$arity$0 = G__9865__0;
G__9865.cljs$core$IFn$_invoke$arity$1 = G__9865__1;
G__9865.cljs$core$IFn$_invoke$arity$2 = G__9865__2;
G__9865.cljs$core$IFn$_invoke$arity$variadic = G__9865__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9865;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4978__auto___9871 = size;
var i_9872 = (0);
while(true){
if((i_9872 < n__4978__auto___9871)){
cljs.core.chunk_append(b,(function (){var G__9857 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9872);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9857) : f.call(null,G__9857));
})());

var G__9873 = (i_9872 + (1));
i_9872 = G__9873;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9858 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9858) : f.call(null,G__9858));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9859 = cljs.core.first(s1);
var G__9860 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9859,G__9860) : f.call(null,G__9859,G__9860));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9861 = cljs.core.first(s1);
var G__9862 = cljs.core.first(s2);
var G__9863 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9861,G__9862,G__9863) : f.call(null,G__9861,G__9862,G__9863));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__9874__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9811_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9811_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9874 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9875__i = 0, G__9875__a = new Array(arguments.length -  4);
while (G__9875__i < G__9875__a.length) {G__9875__a[G__9875__i] = arguments[G__9875__i + 4]; ++G__9875__i;}
  colls = new cljs.core.IndexedSeq(G__9875__a,0);
} 
return G__9874__delegate.call(this,f,c1,c2,c3,colls);};
G__9874.cljs$lang$maxFixedArity = 4;
G__9874.cljs$lang$applyTo = (function (arglist__9876){
var f = cljs.core.first(arglist__9876);
arglist__9876 = cljs.core.next(arglist__9876);
var c1 = cljs.core.first(arglist__9876);
arglist__9876 = cljs.core.next(arglist__9876);
var c2 = cljs.core.first(arglist__9876);
arglist__9876 = cljs.core.next(arglist__9876);
var c3 = cljs.core.first(arglist__9876);
var colls = cljs.core.rest(arglist__9876);
return G__9874__delegate(f,c1,c2,c3,colls);
});
G__9874.cljs$core$IFn$_invoke$arity$variadic = G__9874__delegate;
return G__9874;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__9877 = null;
if (arguments.length > 4) {
var G__9878__i = 0, G__9878__a = new Array(arguments.length -  4);
while (G__9878__i < G__9878__a.length) {G__9878__a[G__9878__i] = arguments[G__9878__i + 4]; ++G__9878__i;}
G__9877 = new cljs.core.IndexedSeq(G__9878__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9887 = null;
var G__9887__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9887__1 = (function (result){
var G__9884 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9884) : rf.call(null,G__9884));
});
var G__9887__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9885 = result;
var G__9886 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9885,G__9886) : rf.call(null,G__9885,G__9886));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9887 = function(result,input){
switch(arguments.length){
case 0:
return G__9887__0.call(this);
case 1:
return G__9887__1.call(this,result);
case 2:
return G__9887__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9887.cljs$core$IFn$_invoke$arity$0 = G__9887__0;
G__9887.cljs$core$IFn$_invoke$arity$1 = G__9887__1;
G__9887.cljs$core$IFn$_invoke$arity$2 = G__9887__2;
return G__9887;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9894 = null;
var G__9894__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9894__1 = (function (result){
var G__9891 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9891) : rf.call(null,G__9891));
});
var G__9894__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9892 = result;
var G__9893 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9892,G__9893) : rf.call(null,G__9892,G__9893));
}
});
G__9894 = function(result,input){
switch(arguments.length){
case 0:
return G__9894__0.call(this);
case 1:
return G__9894__1.call(this,result);
case 2:
return G__9894__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9894.cljs$core$IFn$_invoke$arity$0 = G__9894__0;
G__9894.cljs$core$IFn$_invoke$arity$1 = G__9894__1;
G__9894.cljs$core$IFn$_invoke$arity$2 = G__9894__2;
return G__9894;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9895 = (n__$1 - (1));
var G__9896 = cljs.core.rest(s);
n__$1 = G__9895;
coll__$1 = G__9896;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9899 = cljs.core.next(s);
var G__9900 = cljs.core.next(lead);
s = G__9899;
lead = G__9900;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9913 = null;
var G__9913__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9913__1 = (function (result){
var G__9907 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9907) : rf.call(null,G__9907));
});
var G__9913__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4081__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4081__auto__)){
var G__9908 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9908) : pred.call(null,G__9908));
} else {
return and__4081__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9909 = result;
var G__9910 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9909,G__9910) : rf.call(null,G__9909,G__9910));
}
});
G__9913 = function(result,input){
switch(arguments.length){
case 0:
return G__9913__0.call(this);
case 1:
return G__9913__1.call(this,result);
case 2:
return G__9913__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9913.cljs$core$IFn$_invoke$arity$0 = G__9913__0;
G__9913.cljs$core$IFn$_invoke$arity$1 = G__9913__1;
G__9913.cljs$core$IFn$_invoke$arity$2 = G__9913__2;
return G__9913;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4081__auto__ = s;
if(and__4081__auto__){
var G__9912 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9912) : pred__$1.call(null,G__9912));
} else {
return and__4081__auto__;
}
})())){
var G__9914 = pred__$1;
var G__9915 = cljs.core.rest(s);
pred__$1 = G__9914;
coll__$1 = G__9915;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__9924 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9924) : f.call(null,G__9924));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__9927__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9927 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9928__i = 0, G__9928__a = new Array(arguments.length -  2);
while (G__9928__i < G__9928__a.length) {G__9928__a[G__9928__i] = arguments[G__9928__i + 2]; ++G__9928__i;}
  colls = new cljs.core.IndexedSeq(G__9928__a,0);
} 
return G__9927__delegate.call(this,c1,c2,colls);};
G__9927.cljs$lang$maxFixedArity = 2;
G__9927.cljs$lang$applyTo = (function (arglist__9929){
var c1 = cljs.core.first(arglist__9929);
arglist__9929 = cljs.core.next(arglist__9929);
var c2 = cljs.core.first(arglist__9929);
var colls = cljs.core.rest(arglist__9929);
return G__9927__delegate(c1,c2,colls);
});
G__9927.cljs$core$IFn$_invoke$arity$variadic = G__9927__delegate;
return G__9927;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__9930 = null;
if (arguments.length > 2) {
var G__9931__i = 0, G__9931__a = new Array(arguments.length -  2);
while (G__9931__i < G__9931__a.length) {G__9931__a[G__9931__i] = arguments[G__9931__i + 2]; ++G__9931__i;}
G__9930 = new cljs.core.IndexedSeq(G__9931__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9946 = null;
var G__9946__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9946__1 = (function (result){
var G__9939 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9939) : rf.call(null,G__9939));
});
var G__9946__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9940 = result;
var G__9941 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9940,G__9941) : rf.call(null,G__9940,G__9941));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9942 = sepr;
var G__9943 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9942,G__9943) : rf.call(null,G__9942,G__9943));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9944 = result;
var G__9945 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9944,G__9945) : rf.call(null,G__9944,G__9945));
}
});
G__9946 = function(result,input){
switch(arguments.length){
case 0:
return G__9946__0.call(this);
case 1:
return G__9946__1.call(this,result);
case 2:
return G__9946__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9946.cljs$core$IFn$_invoke$arity$0 = G__9946__0;
G__9946.cljs$core$IFn$_invoke$arity$1 = G__9946__1;
G__9946.cljs$core$IFn$_invoke$arity$2 = G__9946__2;
return G__9946;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__9955__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9955 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9956__i = 0, G__9956__a = new Array(arguments.length -  1);
while (G__9956__i < G__9956__a.length) {G__9956__a[G__9956__i] = arguments[G__9956__i + 1]; ++G__9956__i;}
  colls = new cljs.core.IndexedSeq(G__9956__a,0);
} 
return G__9955__delegate.call(this,f,colls);};
G__9955.cljs$lang$maxFixedArity = 1;
G__9955.cljs$lang$applyTo = (function (arglist__9957){
var f = cljs.core.first(arglist__9957);
var colls = cljs.core.rest(arglist__9957);
return G__9955__delegate(f,colls);
});
G__9955.cljs$core$IFn$_invoke$arity$variadic = G__9955__delegate;
return G__9955;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__9958 = null;
if (arguments.length > 1) {
var G__9959__i = 0, G__9959__a = new Array(arguments.length -  1);
while (G__9959__i < G__9959__a.length) {G__9959__a[G__9959__i] = arguments[G__9959__i + 1]; ++G__9959__i;}
G__9958 = new cljs.core.IndexedSeq(G__9959__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9978 = null;
var G__9978__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9978__1 = (function (result){
var G__9972 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9972) : rf.call(null,G__9972));
});
var G__9978__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9973 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9973) : pred.call(null,G__9973));
})())){
var G__9974 = result;
var G__9975 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9974,G__9975) : rf.call(null,G__9974,G__9975));
} else {
return result;
}
});
G__9978 = function(result,input){
switch(arguments.length){
case 0:
return G__9978__0.call(this);
case 1:
return G__9978__1.call(this,result);
case 2:
return G__9978__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9978.cljs$core$IFn$_invoke$arity$0 = G__9978__0;
G__9978.cljs$core$IFn$_invoke$arity$1 = G__9978__1;
G__9978.cljs$core$IFn$_invoke$arity$2 = G__9978__2;
return G__9978;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4978__auto___9979 = size;
var i_9980 = (0);
while(true){
if((i_9980 < n__4978__auto___9979)){
if(cljs.core.truth_((function (){var G__9976 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9980);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9976) : pred.call(null,G__9976));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9980));
} else {
}

var G__9981 = (i_9980 + (1));
i_9980 = G__9981;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9977 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9977) : pred.call(null,G__9977));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9988 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9988) : branch_QMARK_.call(null,G__9988));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__9989 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9989) : children.call(null,G__9989));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9990_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9990_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9993 = to;
if(G__9993){
var bit__4760__auto__ = (G__9993.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4760__auto__) || (G__9993.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__9994 = to;
if(G__9994){
var bit__4760__auto__ = (G__9994.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4760__auto__) || (G__9994.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9996 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9996) : f.call(null,G__9996));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__9997__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9997 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9998__i = 0, G__9998__a = new Array(arguments.length -  4);
while (G__9998__i < G__9998__a.length) {G__9998__a[G__9998__i] = arguments[G__9998__i + 4]; ++G__9998__i;}
  colls = new cljs.core.IndexedSeq(G__9998__a,0);
} 
return G__9997__delegate.call(this,f,c1,c2,c3,colls);};
G__9997.cljs$lang$maxFixedArity = 4;
G__9997.cljs$lang$applyTo = (function (arglist__9999){
var f = cljs.core.first(arglist__9999);
arglist__9999 = cljs.core.next(arglist__9999);
var c1 = cljs.core.first(arglist__9999);
arglist__9999 = cljs.core.next(arglist__9999);
var c2 = cljs.core.first(arglist__9999);
arglist__9999 = cljs.core.next(arglist__9999);
var c3 = cljs.core.first(arglist__9999);
var colls = cljs.core.rest(arglist__9999);
return G__9997__delegate(f,c1,c2,c3,colls);
});
G__9997.cljs$core$IFn$_invoke$arity$variadic = G__9997__delegate;
return G__9997;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__10000 = null;
if (arguments.length > 4) {
var G__10001__i = 0, G__10001__a = new Array(arguments.length -  4);
while (G__10001__i < G__10001__a.length) {G__10001__a[G__10001__i] = arguments[G__10001__i + 4]; ++G__10001__i;}
G__10000 = new cljs.core.IndexedSeq(G__10001__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10003 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10003) : pred.call(null,G__10003));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10018 = m__$1;
if(G__10018){
var bit__4767__auto__ = (G__10018.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4767__auto__) || (G__10018.cljs$core$ILookup$)){
return true;
} else {
if((!G__10018.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10018);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10019 = sentinel;
var G__10020 = m__$2;
var G__10021 = cljs.core.next(ks__$1);
sentinel = G__10019;
m__$1 = G__10020;
ks__$1 = G__10021;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__10022,v){
var vec__10027 = p__10022;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10027,(0),null);
var ks = cljs.core.nthnext(vec__10027,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__10028,f){
var vec__10066 = p__10028;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10066,(0),null);
var ks = cljs.core.nthnext(vec__10066,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10067 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10067) : f.call(null,G__10067));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__10029,f,a){
var vec__10068 = p__10029;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10068,(0),null);
var ks = cljs.core.nthnext(vec__10068,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10069 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10070 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10069,G__10070) : f.call(null,G__10069,G__10070));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__10030,f,a,b){
var vec__10071 = p__10030;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10071,(0),null);
var ks = cljs.core.nthnext(vec__10071,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10072 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10073 = a;
var G__10074 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10072,G__10073,G__10074) : f.call(null,G__10072,G__10073,G__10074));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__10031,f,a,b,c){
var vec__10075 = p__10031;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10075,(0),null);
var ks = cljs.core.nthnext(vec__10075,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10076 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10077 = a;
var G__10078 = b;
var G__10079 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10076,G__10077,G__10078,G__10079) : f.call(null,G__10076,G__10077,G__10078,G__10079));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__10081__delegate = function (m,p__10032,f,a,b,c,args){
var vec__10080 = p__10032;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10080,(0),null);
var ks = cljs.core.nthnext(vec__10080,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10081 = function (m,p__10032,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10082__i = 0, G__10082__a = new Array(arguments.length -  6);
while (G__10082__i < G__10082__a.length) {G__10082__a[G__10082__i] = arguments[G__10082__i + 6]; ++G__10082__i;}
  args = new cljs.core.IndexedSeq(G__10082__a,0);
} 
return G__10081__delegate.call(this,m,p__10032,f,a,b,c,args);};
G__10081.cljs$lang$maxFixedArity = 6;
G__10081.cljs$lang$applyTo = (function (arglist__10083){
var m = cljs.core.first(arglist__10083);
arglist__10083 = cljs.core.next(arglist__10083);
var p__10032 = cljs.core.first(arglist__10083);
arglist__10083 = cljs.core.next(arglist__10083);
var f = cljs.core.first(arglist__10083);
arglist__10083 = cljs.core.next(arglist__10083);
var a = cljs.core.first(arglist__10083);
arglist__10083 = cljs.core.next(arglist__10083);
var b = cljs.core.first(arglist__10083);
arglist__10083 = cljs.core.next(arglist__10083);
var c = cljs.core.first(arglist__10083);
var args = cljs.core.rest(arglist__10083);
return G__10081__delegate(m,p__10032,f,a,b,c,args);
});
G__10081.cljs$core$IFn$_invoke$arity$variadic = G__10081__delegate;
return G__10081;
})()
;
cljs$core$update_in = function(m,p__10032,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__10032,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__10032,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__10032,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__10032,f,a,b,c);
default:
var G__10084 = null;
if (arguments.length > 6) {
var G__10085__i = 0, G__10085__a = new Array(arguments.length -  6);
while (G__10085__i < G__10085__a.length) {G__10085__a[G__10085__i] = arguments[G__10085__i + 6]; ++G__10085__i;}
G__10084 = new cljs.core.IndexedSeq(G__10085__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10032,f,a,b,c, G__10084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10096 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10096) : f.call(null,G__10096));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10097 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10098 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10097,G__10098) : f.call(null,G__10097,G__10098));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10099 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10100 = x;
var G__10101 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10099,G__10100,G__10101) : f.call(null,G__10099,G__10100,G__10101));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10103 = x;
var G__10104 = y;
var G__10105 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10102,G__10103,G__10104,G__10105) : f.call(null,G__10102,G__10103,G__10104,G__10105));
})());
});
var cljs$core$update__7 = (function() { 
var G__10106__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10106 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10107__i = 0, G__10107__a = new Array(arguments.length -  6);
while (G__10107__i < G__10107__a.length) {G__10107__a[G__10107__i] = arguments[G__10107__i + 6]; ++G__10107__i;}
  more = new cljs.core.IndexedSeq(G__10107__a,0);
} 
return G__10106__delegate.call(this,m,k,f,x,y,z,more);};
G__10106.cljs$lang$maxFixedArity = 6;
G__10106.cljs$lang$applyTo = (function (arglist__10108){
var m = cljs.core.first(arglist__10108);
arglist__10108 = cljs.core.next(arglist__10108);
var k = cljs.core.first(arglist__10108);
arglist__10108 = cljs.core.next(arglist__10108);
var f = cljs.core.first(arglist__10108);
arglist__10108 = cljs.core.next(arglist__10108);
var x = cljs.core.first(arglist__10108);
arglist__10108 = cljs.core.next(arglist__10108);
var y = cljs.core.first(arglist__10108);
arglist__10108 = cljs.core.next(arglist__10108);
var z = cljs.core.first(arglist__10108);
var more = cljs.core.rest(arglist__10108);
return G__10106__delegate(m,k,f,x,y,z,more);
});
G__10106.cljs$core$IFn$_invoke$arity$variadic = G__10106__delegate;
return G__10106;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__10109 = null;
if (arguments.length > 6) {
var G__10110__i = 0, G__10110__a = new Array(arguments.length -  6);
while (G__10110__i < G__10110__a.length) {G__10110__a[G__10110__i] = arguments[G__10110__i + 6]; ++G__10110__i;}
G__10109 = new cljs.core.IndexedSeq(G__10110__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10111 = (ll - (5));
var G__10112 = r;
ll = G__10111;
ret = G__10112;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10117 = cljs.core.pv_aget(node,(0));
var G__10118 = (level - (5));
node = G__10117;
level = G__10118;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10119 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10120 = (level - (5));
node = G__10119;
level = G__10120;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10130 = init__$2;
var G__10131 = (j + i);
var G__10132 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10130,G__10131,G__10132) : f.call(null,G__10130,G__10131,G__10132));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10143 = (j + (1));
var G__10144 = init__$3;
j = G__10143;
init__$2 = G__10144;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10133 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10133) : cljs.core.deref.call(null,G__10133));
} else {
var G__10145 = (i + len);
var G__10146 = init__$2;
i = G__10145;
init__$1 = G__10146;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10134 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10134) : cljs.core.tv_editable_root.call(null,G__10134));
})(),(function (){var G__10135 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10135) : cljs.core.tv_editable_tail.call(null,G__10135));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10136 = init__$2;
var G__10137 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10136,G__10137) : f.call(null,G__10136,G__10137));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10147 = (j + (1));
var G__10148 = init__$3;
j = G__10147;
init__$2 = G__10148;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10138 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10138) : cljs.core.deref.call(null,G__10138));
} else {
var G__10149 = (i + len);
var G__10150 = init__$2;
i = G__10149;
init__$1 = G__10150;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10139 = coll__$1;
var G__10140 = cljs.core.first_array_for_longvec(coll__$1);
var G__10141 = (0);
var G__10142 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10139,G__10140,G__10141,G__10142) : cljs.core.chunked_seq.call(null,G__10139,G__10140,G__10141,G__10142));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4978__auto___10151 = len;
var i_10152 = (0);
while(true){
if((i_10152 < n__4978__auto___10151)){
(new_tail[i_10152] = (self__.tail[i_10152]));

var G__10153 = (i_10152 + (1));
i_10152 = G__10153;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10154 = null;
var G__10154__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10154__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10154 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10154__2.call(this,self__,k);
case 3:
return G__10154__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10154.cljs$core$IFn$_invoke$arity$2 = G__10154__2;
G__10154.cljs$core$IFn$_invoke$arity$3 = G__10154__3;
return G__10154;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10129){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10129)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10155 = (i + (1));
var G__10156 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10155;
out = G__10156;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10157__i = 0, G__10157__a = new Array(arguments.length -  0);
while (G__10157__i < G__10157__a.length) {G__10157__a[G__10157__i] = arguments[G__10157__i + 0]; ++G__10157__i;}
  args = new cljs.core.IndexedSeq(G__10157__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__10158){
var args = cljs.core.seq(arglist__10158);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10159 = self__.vec;
var G__10160 = self__.node;
var G__10161 = self__.i;
var G__10162 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10159,G__10160,G__10161,G__10162) : cljs.core.chunked_seq.call(null,G__10159,G__10160,G__10161,G__10162));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10163 = self__.vec;
var G__10164 = (self__.i + self__.off);
var G__10165 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10163,G__10164,G__10165) : cljs.core.subvec.call(null,G__10163,G__10164,G__10165));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10166 = self__.vec;
var G__10167 = (self__.i + self__.off);
var G__10168 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10166,G__10167,G__10168) : cljs.core.subvec.call(null,G__10166,G__10167,G__10168));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10169 = self__.vec;
var G__10170 = self__.node;
var G__10171 = self__.i;
var G__10172 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10169,G__10170,G__10171,G__10172) : cljs.core.chunked_seq.call(null,G__10169,G__10170,G__10171,G__10172));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10173 = self__.vec;
var G__10174 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10175 = end;
var G__10176 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10173,G__10174,G__10175,G__10176) : cljs.core.chunked_seq.call(null,G__10173,G__10174,G__10175,G__10176));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10177 = self__.vec;
var G__10178 = self__.node;
var G__10179 = self__.i;
var G__10180 = self__.off;
var G__10181 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10177,G__10178,G__10179,G__10180,G__10181) : cljs.core.chunked_seq.call(null,G__10177,G__10178,G__10179,G__10180,G__10181));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10182 = self__.vec;
var G__10183 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10184 = end;
var G__10185 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10182,G__10183,G__10184,G__10185) : cljs.core.chunked_seq.call(null,G__10182,G__10183,G__10184,G__10185));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__10187 = init__$1;
var G__10188 = j;
var G__10189 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10187,G__10188,G__10189) : f.call(null,G__10187,G__10188,G__10189));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10190 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10190) : cljs.core.deref.call(null,G__10190));
} else {
var G__10212 = (i + (1));
var G__10213 = (j + (1));
var G__10214 = init__$2;
i = G__10212;
j = G__10213;
init__$1 = G__10214;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10191 = self__.meta;
var G__10192 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10193 = self__.start;
var G__10194 = (function (){var x__4405__auto__ = self__.end;
var y__4406__auto__ = (v_pos + (1));
return ((x__4405__auto__ > y__4406__auto__) ? x__4405__auto__ : y__4406__auto__);
})();
var G__10195 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10191,G__10192,G__10193,G__10194,G__10195) : cljs.core.build_subvec.call(null,G__10191,G__10192,G__10193,G__10194,G__10195));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10196 = self__.meta;
var G__10197 = self__.v;
var G__10198 = self__.start;
var G__10199 = (self__.end - (1));
var G__10200 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10196,G__10197,G__10198,G__10199,G__10200) : cljs.core.build_subvec.call(null,G__10196,G__10197,G__10198,G__10199,G__10200));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10202 = meta__$1;
var G__10203 = self__.v;
var G__10204 = self__.start;
var G__10205 = self__.end;
var G__10206 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10202,G__10203,G__10204,G__10205,G__10206) : cljs.core.build_subvec.call(null,G__10202,G__10203,G__10204,G__10205,G__10206));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10207 = self__.meta;
var G__10208 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10209 = self__.start;
var G__10210 = (self__.end + (1));
var G__10211 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10207,G__10208,G__10209,G__10210,G__10211) : cljs.core.build_subvec.call(null,G__10207,G__10208,G__10209,G__10210,G__10211));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10215 = null;
var G__10215__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10215__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10215 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10215__2.call(this,self__,k);
case 3:
return G__10215__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10215.cljs$core$IFn$_invoke$arity$2 = G__10215__2;
G__10215.cljs$core$IFn$_invoke$arity$3 = G__10215__3;
return G__10215;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10186){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10186)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10216 = meta;
var G__10217 = v.v;
var G__10218 = (v.start + start);
var G__10219 = (v.start + end);
var G__10220 = __hash;
meta = G__10216;
v = G__10217;
start = G__10218;
end = G__10219;
__hash = G__10220;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10227 = {};
return obj10227;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10235 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10236 = (level - (5));
node = G__10235;
level = G__10236;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10240 = null;
var G__10240__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10240__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10240 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10240__2.call(this,self__,k);
case 3:
return G__10240__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10240.cljs$core$IFn$_invoke$arity$2 = G__10240__2;
G__10240.cljs$core$IFn$_invoke$arity$3 = G__10240__3;
return G__10240;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10237){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10237)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4093__auto__ = self__.front;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4093__auto__ = self__.rear;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10241 = (i + incr);
i = G__10241;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10242 = (i + (1));
var G__10243 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10242;
out = G__10243;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj10247 = {};
return obj10247;
})();
var l = ks.length;
var i_10248 = (0);
while(true){
if((i_10248 < l)){
var k_10249 = (ks[i_10248]);
(new_obj[k_10249] = (obj[k_10249]));

var G__10250 = (i_10248 + (1));
i_10248 = G__10250;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4081__auto__ = (function (){var G__10254 = k;
return goog.isString(G__10254);
})();
if(cljs.core.truth_(and__4081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4081__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10255 = init__$1;
var G__10256 = k;
var G__10257 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10255,G__10256,G__10257) : f.call(null,G__10255,G__10256,G__10257));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10258 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10258) : cljs.core.deref.call(null,G__10258));
} else {
var G__10264 = cljs.core.rest(keys__$1);
var G__10265 = init__$2;
keys__$1 = G__10264;
init__$1 = G__10265;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4081__auto__ = (function (){var G__10260 = k;
return goog.isString(G__10260);
})();
if(cljs.core.truth_(and__4081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4081__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10261 = k;
return goog.isString(G__10261);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4081__auto__ = (function (){var G__10263 = k;
return goog.isString(G__10263);
})();
if(cljs.core.truth_(and__4081__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4081__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10251_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10251_SHARP_,(self__.strobj[p1__10251_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10266 = null;
var G__10266__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10266__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10266 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10266__2.call(this,self__,k);
case 3:
return G__10266__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10266.cljs$core$IFn$_invoke$arity$2 = G__10266__2;
G__10266.cljs$core$IFn$_invoke$arity$3 = G__10266__3;
return G__10266;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10252){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10252)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10268 = {};
return obj10268;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10269 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10269,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10269,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10270 = (i + (2));
i = G__10270;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10271 = (i + (2));
i = G__10271;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10272 = (i + (2));
i = G__10272;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10273 = (i + (2));
i = G__10273;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10274 = (i + (2));
i = G__10274;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4093__auto__ = (function (){var G__10278 = k;
return goog.isString(G__10278);
})();
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10279 = (0);
while(true){
if((i_10279 < l)){
(narr[i_10279] = (arr[i_10279]));

var G__10280 = (i_10279 + (1));
i_10279 = G__10280;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10282 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10282) : cljs.core.keys.call(null,G__10282));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10283 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10283) : cljs.core.vals.call(null,G__10283));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10284 = cljs.core.seq(coll);
var chunk__10285 = null;
var count__10286 = (0);
var i__10287 = (0);
while(true){
if((i__10287 < count__10286)){
var vec__10288 = chunk__10285.cljs$core$IIndexed$_nth$arity$2(null,i__10287);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288,(1),null);
var G__10289_10302 = v;
var G__10290_10303 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10289_10302,G__10290_10303) : f.call(null,G__10289_10302,G__10290_10303));

var G__10304 = seq__10284;
var G__10305 = chunk__10285;
var G__10306 = count__10286;
var G__10307 = (i__10287 + (1));
seq__10284 = G__10304;
chunk__10285 = G__10305;
count__10286 = G__10306;
i__10287 = G__10307;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10284);
if(temp__4126__auto__){
var seq__10284__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10284__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__10284__$1);
var G__10308 = cljs.core.chunk_rest(seq__10284__$1);
var G__10309 = c__4878__auto__;
var G__10310 = cljs.core.count(c__4878__auto__);
var G__10311 = (0);
seq__10284 = G__10308;
chunk__10285 = G__10309;
count__10286 = G__10310;
i__10287 = G__10311;
continue;
} else {
var vec__10291 = cljs.core.first(seq__10284__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10291,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10291,(1),null);
var G__10292_10312 = v;
var G__10293_10313 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10292_10312,G__10293_10313) : f.call(null,G__10292_10312,G__10293_10313));

var G__10314 = cljs.core.next(seq__10284__$1);
var G__10315 = null;
var G__10316 = (0);
var G__10317 = (0);
seq__10284 = G__10314;
chunk__10285 = G__10315;
count__10286 = G__10316;
i__10287 = G__10317;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10294 = init__$1;
var G__10295 = (self__.arr[i]);
var G__10296 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10294,G__10295,G__10296) : f.call(null,G__10294,G__10295,G__10296));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10297 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10297) : cljs.core.deref.call(null,G__10297));
} else {
var G__10318 = (i + (2));
var G__10319 = init__$2;
i = G__10318;
init__$1 = G__10319;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10298 = other;
if(G__10298){
var bit__4760__auto__ = (G__10298.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4760__auto__) || (G__10298.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10320 = (i + (2));
i = G__10320;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10300 = {};
return obj10300;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10321 = (s + (2));
var G__10322 = d;
s = G__10321;
d = G__10322;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10323 = (s + (2));
var G__10324 = (d + (2));
s = G__10323;
d = G__10324;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10301 = cljs.core.aclone(self__.arr);
(G__10301[(idx + (1))] = v);

return G__10301;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10325 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10326 = cljs.core.next(es);
ret = G__10325;
es = G__10326;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10327 = null;
var G__10327__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10327__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10327 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10327__2.call(this,self__,k);
case 3:
return G__10327__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10327.cljs$core$IFn$_invoke$arity$2 = G__10327__2;
G__10327.cljs$core$IFn$_invoke$arity$3 = G__10327__3;
return G__10327;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10281){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10281)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10328 = (i + (2));
var G__10329 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10328;
ret = G__10329;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10330_10338 = self__.arr;
G__10330_10338.pop();

G__10330_10338.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10331 = self__.len;
var G__10332 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10331,G__10332) : cljs.core.array__GT_transient_hash_map.call(null,G__10331,G__10332));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10333 = o;
if(G__10333){
var bit__4767__auto__ = (G__10333.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4767__auto__) || (G__10333.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10333);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10334 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10334) : cljs.core.key.call(null,G__10334));
})(),(function (){var G__10335 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10335) : cljs.core.val.call(null,G__10335));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10339 = cljs.core.next(es);
var G__10340 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10336 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10336) : cljs.core.key.call(null,G__10336));
})(),(function (){var G__10337 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10337) : cljs.core.val.call(null,G__10337));
})());
es = G__10339;
tcoll__$2 = G__10340;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10341 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10342 = (i + (2));
out = G__10341;
i = G__10342;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__10345 = cljs.core.aclone(arr);
(G__10345[i] = a);

return G__10345;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__10346 = cljs.core.aclone(arr);
(G__10346[i] = a);

(G__10346[j] = b);

return G__10346;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10351 = init__$1;
var G__10352 = k;
var G__10353 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10351,G__10352,G__10353) : f.call(null,G__10351,G__10352,G__10353));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10354 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10354) : cljs.core.deref.call(null,G__10354));
} else {
var G__10355 = (i + (2));
var G__10356 = init__$2;
i = G__10355;
init__$1 = G__10356;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10357 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10357) : cljs.core.create_inode_seq.call(null,G__10357));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10371 = (0);
var j_10372 = (0);
while(true){
if((i_10371 < (32))){
if((((self__.bitmap >>> i_10371) & (1)) === (0))){
var G__10373 = (i_10371 + (1));
var G__10374 = j_10372;
i_10371 = G__10373;
j_10372 = G__10374;
continue;
} else {
(nodes[i_10371] = ((!(((self__.arr[j_10372]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10372])),(self__.arr[j_10372]),(self__.arr[(j_10372 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10372 + (1))])));

var G__10375 = (i_10371 + (1));
var G__10376 = (j_10372 + (2));
i_10371 = G__10375;
j_10372 = G__10376;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10358 = edit__$1;
var G__10359 = (shift + (5));
var G__10360 = key_or_nil;
var G__10361 = val_or_node;
var G__10362 = hash;
var G__10363 = key;
var G__10364 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10358,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364) : cljs.core.create_node.call(null,G__10358,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10377 = (0);
var j_10378 = (0);
while(true){
if((i_10377 < (32))){
if((((self__.bitmap >>> i_10377) & (1)) === (0))){
var G__10379 = (i_10377 + (1));
var G__10380 = j_10378;
i_10377 = G__10379;
j_10378 = G__10380;
continue;
} else {
(nodes[i_10377] = ((!(((self__.arr[j_10378]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10378])),(self__.arr[j_10378]),(self__.arr[(j_10378 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10378 + (1))])));

var G__10381 = (i_10377 + (1));
var G__10382 = (j_10378 + (2));
i_10377 = G__10381;
j_10378 = G__10382;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10365 = (shift + (5));
var G__10366 = key_or_nil;
var G__10367 = val_or_node;
var G__10368 = hash;
var G__10369 = key;
var G__10370 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10365,G__10366,G__10367,G__10368,G__10369,G__10370) : cljs.core.create_node.call(null,G__10365,G__10366,G__10367,G__10368,G__10369,G__10370));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10383 = (i + (1));
var G__10384 = (j + (2));
var G__10385 = (bitmap | ((1) << i));
i = G__10383;
j = G__10384;
bitmap = G__10385;
continue;
} else {
var G__10386 = (i + (1));
var G__10387 = j;
var G__10388 = bitmap;
i = G__10386;
j = G__10387;
bitmap = G__10388;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10389 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10389) : cljs.core.create_array_node_seq.call(null,G__10389));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10390 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10390) : cljs.core.deref.call(null,G__10390));
} else {
var G__10391 = (i + (1));
var G__10392 = init__$2;
i = G__10391;
init__$1 = G__10392;
continue;
}
} else {
var G__10393 = (i + (1));
var G__10394 = init__$1;
i = G__10393;
init__$1 = G__10394;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10395 = (i + (2));
i = G__10395;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10396 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10396) : cljs.core.create_inode_seq.call(null,G__10396));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10397 = self__.nodes;
var G__10398 = (self__.i + (2));
var G__10399 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10397,G__10398,G__10399) : cljs.core.create_inode_seq.call(null,G__10397,G__10398,G__10399));
} else {
var G__10400 = self__.nodes;
var G__10401 = self__.i;
var G__10402 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10400,G__10401,G__10402) : cljs.core.create_inode_seq.call(null,G__10400,G__10401,G__10402));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10406 = (j + (2));
j = G__10406;
continue;
}
} else {
var G__10407 = (j + (2));
j = G__10407;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10408 = null;
var G__10409 = self__.nodes;
var G__10410 = self__.i;
var G__10411 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10408,G__10409,G__10410,G__10411) : cljs.core.create_array_node_seq.call(null,G__10408,G__10409,G__10410,G__10411));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10416 = (j + (1));
j = G__10416;
continue;
}
} else {
var G__10417 = (j + (1));
j = G__10417;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10419 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10419) : cljs.core.keys.call(null,G__10419));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10420 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10420) : cljs.core.vals.call(null,G__10420));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10421 = cljs.core.seq(coll);
var chunk__10422 = null;
var count__10423 = (0);
var i__10424 = (0);
while(true){
if((i__10424 < count__10423)){
var vec__10425 = chunk__10422.cljs$core$IIndexed$_nth$arity$2(null,i__10424);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10425,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10425,(1),null);
var G__10426_10437 = v;
var G__10427_10438 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10426_10437,G__10427_10438) : f.call(null,G__10426_10437,G__10427_10438));

var G__10439 = seq__10421;
var G__10440 = chunk__10422;
var G__10441 = count__10423;
var G__10442 = (i__10424 + (1));
seq__10421 = G__10439;
chunk__10422 = G__10440;
count__10423 = G__10441;
i__10424 = G__10442;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10421);
if(temp__4126__auto__){
var seq__10421__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10421__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__10421__$1);
var G__10443 = cljs.core.chunk_rest(seq__10421__$1);
var G__10444 = c__4878__auto__;
var G__10445 = cljs.core.count(c__4878__auto__);
var G__10446 = (0);
seq__10421 = G__10443;
chunk__10422 = G__10444;
count__10423 = G__10445;
i__10424 = G__10446;
continue;
} else {
var vec__10428 = cljs.core.first(seq__10421__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10428,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10428,(1),null);
var G__10429_10447 = v;
var G__10430_10448 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10429_10447,G__10430_10448) : f.call(null,G__10429_10447,G__10430_10448));

var G__10449 = cljs.core.next(seq__10421__$1);
var G__10450 = null;
var G__10451 = (0);
var G__10452 = (0);
seq__10421 = G__10449;
chunk__10422 = G__10450;
count__10423 = G__10451;
i__10424 = G__10452;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10431 = init;
var G__10432 = null;
var G__10433 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10431,G__10432,G__10433) : f.call(null,G__10431,G__10432,G__10433));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10434 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10434) : cljs.core.deref.call(null,G__10434));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10436 = {};
return obj10436;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10453 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10454 = cljs.core.next(es);
ret = G__10453;
es = G__10454;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10455 = null;
var G__10455__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10455__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10455 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10455__2.call(this,self__,k);
case 3:
return G__10455__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10455.cljs$core$IFn$_invoke$arity$2 = G__10455__2;
G__10455.cljs$core$IFn$_invoke$arity$3 = G__10455__3;
return G__10455;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10418){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10418)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10456 = (i + (2));
var G__10457 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10456;
ret = G__10457;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10458 = (i + (1));
var G__10459 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10458;
out = G__10459;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10460 = o;
if(G__10460){
var bit__4767__auto__ = (G__10460.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4767__auto__) || (G__10460.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10460);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10461 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10461) : cljs.core.key.call(null,G__10461));
})(),(function (){var G__10462 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10462) : cljs.core.val.call(null,G__10462));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10465 = cljs.core.next(es);
var G__10466 = tcoll__$1.assoc_BANG_((function (){var G__10463 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10463) : cljs.core.key.call(null,G__10463));
})(),(function (){var G__10464 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10464) : cljs.core.val.call(null,G__10464));
})());
es = G__10465;
tcoll__$1 = G__10466;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10467 = ((ascending_QMARK_)?t.left:t.right);
var G__10468 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10467;
stack__$1 = G__10468;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10481 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10481) : cljs.core.deref.call(null,G__10481));
} else {
var init__$2 = (function (){var G__10482 = init__$1;
var G__10483 = node.key;
var G__10484 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10482,G__10483,G__10484) : f.call(null,G__10482,G__10483,G__10484));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10485 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10485) : cljs.core.deref.call(null,G__10485));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10486 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10486) : cljs.core.deref.call(null,G__10486));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10488 = null;
var G__10488__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10488__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10488 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10488__2.call(this,self__,k);
case 3:
return G__10488__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10488.cljs$core$IFn$_invoke$arity$2 = G__10488__2;
G__10488.cljs$core$IFn$_invoke$arity$3 = G__10488__3;
return G__10488;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10487){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10487)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10490 = null;
var G__10490__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10490__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10490 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10490__2.call(this,self__,k);
case 3:
return G__10490__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10490.cljs$core$IFn$_invoke$arity$2 = G__10490__2;
G__10490.cljs$core$IFn$_invoke$arity$3 = G__10490__3;
return G__10490;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10489){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10489)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10503 = k;
var G__10504 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10503,G__10504) : comp.call(null,G__10503,G__10504));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10523 = k;
var G__10524 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10523,G__10524) : comp.call(null,G__10523,G__10524));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10535 = k;
var G__10536 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10535,G__10536) : comp.call(null,G__10535,G__10536));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10538 = cljs.core.seq(coll);
var chunk__10539 = null;
var count__10540 = (0);
var i__10541 = (0);
while(true){
if((i__10541 < count__10540)){
var vec__10542 = chunk__10539.cljs$core$IIndexed$_nth$arity$2(null,i__10541);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10542,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10542,(1),null);
var G__10543_10555 = v;
var G__10544_10556 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10543_10555,G__10544_10556) : f.call(null,G__10543_10555,G__10544_10556));

var G__10557 = seq__10538;
var G__10558 = chunk__10539;
var G__10559 = count__10540;
var G__10560 = (i__10541 + (1));
seq__10538 = G__10557;
chunk__10539 = G__10558;
count__10540 = G__10559;
i__10541 = G__10560;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10538);
if(temp__4126__auto__){
var seq__10538__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10538__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__10538__$1);
var G__10561 = cljs.core.chunk_rest(seq__10538__$1);
var G__10562 = c__4878__auto__;
var G__10563 = cljs.core.count(c__4878__auto__);
var G__10564 = (0);
seq__10538 = G__10561;
chunk__10539 = G__10562;
count__10540 = G__10563;
i__10541 = G__10564;
continue;
} else {
var vec__10545 = cljs.core.first(seq__10538__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10545,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10545,(1),null);
var G__10546_10565 = v;
var G__10547_10566 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10546_10565,G__10547_10566) : f.call(null,G__10546_10565,G__10547_10566));

var G__10567 = cljs.core.next(seq__10538__$1);
var G__10568 = null;
var G__10569 = (0);
var G__10570 = (0);
seq__10538 = G__10567;
chunk__10539 = G__10568;
count__10540 = G__10569;
i__10541 = G__10570;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10548 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10548) : cljs.core.keys.call(null,G__10548));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10549 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10549) : cljs.core.vals.call(null,G__10549));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10550 = k;
var G__10551 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10550,G__10551) : self__.comp.call(null,G__10550,G__10551));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10571 = t.left;
t = G__10571;
continue;
} else {
var G__10572 = t.right;
t = G__10572;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10573 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10574 = cljs.core.next(es);
ret = G__10573;
es = G__10574;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10575 = null;
var G__10575__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10575__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10575 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10575__2.call(this,self__,k);
case 3:
return G__10575__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10575.cljs$core$IFn$_invoke$arity$2 = G__10575__2;
G__10575.cljs$core$IFn$_invoke$arity$3 = G__10575__3;
return G__10575;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10537){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10537)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10552 = k;
var G__10553 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10552,G__10553) : self__.comp.call(null,G__10552,G__10553));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10576 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10577 = t.left;
stack = G__10576;
t = G__10577;
continue;
} else {
var G__10578 = stack;
var G__10579 = t.right;
stack = G__10578;
t = G__10579;
continue;
}
} else {
if((c > (0))){
var G__10580 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10581 = t.right;
stack = G__10580;
t = G__10581;
continue;
} else {
var G__10582 = stack;
var G__10583 = t.left;
stack = G__10582;
t = G__10583;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10554 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10554) : cljs.core.key.call(null,G__10554));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10584 = cljs.core.nnext(in$);
var G__10585 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10584;
out = G__10585;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10586__i = 0, G__10586__a = new Array(arguments.length -  0);
while (G__10586__i < G__10586__a.length) {G__10586__a[G__10586__i] = arguments[G__10586__i + 0]; ++G__10586__i;}
  keyvals = new cljs.core.IndexedSeq(G__10586__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__10587){
var keyvals = cljs.core.seq(arglist__10587);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10588__i = 0, G__10588__a = new Array(arguments.length -  0);
while (G__10588__i < G__10588__a.length) {G__10588__a[G__10588__i] = arguments[G__10588__i + 0]; ++G__10588__i;}
  keyvals = new cljs.core.IndexedSeq(G__10588__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__10589){
var keyvals = cljs.core.seq(arglist__10589);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10593 = {};
return obj10593;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10594 = cljs.core.nnext(kvs);
kvs = G__10594;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10595__i = 0, G__10595__a = new Array(arguments.length -  0);
while (G__10595__i < G__10595__a.length) {G__10595__a[G__10595__i] = arguments[G__10595__i + 0]; ++G__10595__i;}
  keyvals = new cljs.core.IndexedSeq(G__10595__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__10596){
var keyvals = cljs.core.seq(arglist__10596);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10597 = cljs.core.nnext(in$);
var G__10598 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10597;
out = G__10598;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10599__i = 0, G__10599__a = new Array(arguments.length -  0);
while (G__10599__i < G__10599__a.length) {G__10599__a[G__10599__i] = arguments[G__10599__i + 0]; ++G__10599__i;}
  keyvals = new cljs.core.IndexedSeq(G__10599__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__10600){
var keyvals = cljs.core.seq(arglist__10600);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10601 = cljs.core.nnext(in$);
var G__10602 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10601;
out = G__10602;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10603__i = 0, G__10603__a = new Array(arguments.length -  1);
while (G__10603__i < G__10603__a.length) {G__10603__a[G__10603__i] = arguments[G__10603__i + 1]; ++G__10603__i;}
  keyvals = new cljs.core.IndexedSeq(G__10603__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__10604){
var comparator = cljs.core.first(arglist__10604);
var keyvals = cljs.core.rest(arglist__10604);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10605 = self__.mseq;
if(G__10605){
var bit__4767__auto__ = (G__10605.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4767__auto__) || (G__10605.cljs$core$INext$)){
return true;
} else {
if((!G__10605.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10605);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10605);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10606 = self__.mseq;
if(G__10606){
var bit__4767__auto__ = (G__10606.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4767__auto__) || (G__10606.cljs$core$INext$)){
return true;
} else {
if((!G__10606.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10606);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10606);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10607 = self__.mseq;
if(G__10607){
var bit__4767__auto__ = (G__10607.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4767__auto__) || (G__10607.cljs$core$INext$)){
return true;
} else {
if((!G__10607.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10607);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10607);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10608 = self__.mseq;
if(G__10608){
var bit__4767__auto__ = (G__10608.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4767__auto__) || (G__10608.cljs$core$INext$)){
return true;
} else {
if((!G__10608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10608);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10609_SHARP_,p2__10610_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4093__auto__ = p1__10609_SHARP_;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10610_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10611__i = 0, G__10611__a = new Array(arguments.length -  0);
while (G__10611__i < G__10611__a.length) {G__10611__a[G__10611__i] = arguments[G__10611__i + 0]; ++G__10611__i;}
  maps = new cljs.core.IndexedSeq(G__10611__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__10612){
var maps = cljs.core.seq(arglist__10612);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10615 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10616 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10615,G__10616) : f.call(null,G__10615,G__10616));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4093__auto__ = m1;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10617__i = 0, G__10617__a = new Array(arguments.length -  1);
while (G__10617__i < G__10617__a.length) {G__10617__a[G__10617__i] = arguments[G__10617__i + 1]; ++G__10617__i;}
  maps = new cljs.core.IndexedSeq(G__10617__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__10618){
var f = cljs.core.first(arglist__10618);
var maps = cljs.core.rest(arglist__10618);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10619 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10620 = cljs.core.next(keys);
ret = G__10619;
keys = G__10620;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10623 = cljs.core.seq(coll);
var chunk__10624 = null;
var count__10625 = (0);
var i__10626 = (0);
while(true){
if((i__10626 < count__10625)){
var vec__10627 = chunk__10624.cljs$core$IIndexed$_nth$arity$2(null,i__10626);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10627,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10627,(1),null);
var G__10628_10633 = v;
var G__10629_10634 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10628_10633,G__10629_10634) : f.call(null,G__10628_10633,G__10629_10634));

var G__10635 = seq__10623;
var G__10636 = chunk__10624;
var G__10637 = count__10625;
var G__10638 = (i__10626 + (1));
seq__10623 = G__10635;
chunk__10624 = G__10636;
count__10625 = G__10637;
i__10626 = G__10638;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10623);
if(temp__4126__auto__){
var seq__10623__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10623__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__10623__$1);
var G__10639 = cljs.core.chunk_rest(seq__10623__$1);
var G__10640 = c__4878__auto__;
var G__10641 = cljs.core.count(c__4878__auto__);
var G__10642 = (0);
seq__10623 = G__10639;
chunk__10624 = G__10640;
count__10625 = G__10641;
i__10626 = G__10642;
continue;
} else {
var vec__10630 = cljs.core.first(seq__10623__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10630,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10630,(1),null);
var G__10631_10643 = v;
var G__10632_10644 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10631_10643,G__10632_10644) : f.call(null,G__10631_10643,G__10632_10644));

var G__10645 = cljs.core.next(seq__10623__$1);
var G__10646 = null;
var G__10647 = (0);
var G__10648 = (0);
seq__10623 = G__10645;
chunk__10624 = G__10646;
count__10625 = G__10647;
i__10626 = G__10648;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10621_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10621_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10649 = null;
var G__10649__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10649__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10649 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10649__2.call(this,self__,k);
case 3:
return G__10649__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10649.cljs$core$IFn$_invoke$arity$2 = G__10649__2;
G__10649.cljs$core$IFn$_invoke$arity$3 = G__10649__3;
return G__10649;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10622){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10622)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10650 = (i + (1));
var G__10651 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10650;
out = G__10651;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10652 = (i + (1));
var G__10653 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10652;
out = G__10653;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10655 = null;
var G__10655__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10655__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10655 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10655__2.call(this,self__,k);
case 3:
return G__10655__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10655.cljs$core$IFn$_invoke$arity$2 = G__10655__2;
G__10655.cljs$core$IFn$_invoke$arity$3 = G__10655__3;
return G__10655;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10654){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10654)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10658 = cljs.core.seq(coll);
var chunk__10659 = null;
var count__10660 = (0);
var i__10661 = (0);
while(true){
if((i__10661 < count__10660)){
var vec__10662 = chunk__10659.cljs$core$IIndexed$_nth$arity$2(null,i__10661);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10662,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10662,(1),null);
var G__10663_10668 = v;
var G__10664_10669 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10663_10668,G__10664_10669) : f.call(null,G__10663_10668,G__10664_10669));

var G__10670 = seq__10658;
var G__10671 = chunk__10659;
var G__10672 = count__10660;
var G__10673 = (i__10661 + (1));
seq__10658 = G__10670;
chunk__10659 = G__10671;
count__10660 = G__10672;
i__10661 = G__10673;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10658);
if(temp__4126__auto__){
var seq__10658__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10658__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__10658__$1);
var G__10674 = cljs.core.chunk_rest(seq__10658__$1);
var G__10675 = c__4878__auto__;
var G__10676 = cljs.core.count(c__4878__auto__);
var G__10677 = (0);
seq__10658 = G__10674;
chunk__10659 = G__10675;
count__10660 = G__10676;
i__10661 = G__10677;
continue;
} else {
var vec__10665 = cljs.core.first(seq__10658__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10665,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10665,(1),null);
var G__10666_10678 = v;
var G__10667_10679 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10666_10678,G__10667_10679) : f.call(null,G__10666_10678,G__10667_10679));

var G__10680 = cljs.core.next(seq__10658__$1);
var G__10681 = null;
var G__10682 = (0);
var G__10683 = (0);
seq__10658 = G__10680;
chunk__10659 = G__10681;
count__10660 = G__10682;
i__10661 = G__10683;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10656_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10656_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10684 = null;
var G__10684__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10684__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10684 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10684__2.call(this,self__,k);
case 3:
return G__10684__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10684.cljs$core$IFn$_invoke$arity$2 = G__10684__2;
G__10684.cljs$core$IFn$_invoke$arity$3 = G__10684__3;
return G__10684;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10657){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10657)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4972__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4972__auto__.length)){
var G__10685 = (i + (1));
var G__10686 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10685;
res = G__10686;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10687 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10688 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10687;
out = G__10688;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__10689__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10689 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10690__i = 0, G__10690__a = new Array(arguments.length -  0);
while (G__10690__i < G__10690__a.length) {G__10690__a[G__10690__i] = arguments[G__10690__i + 0]; ++G__10690__i;}
  keys = new cljs.core.IndexedSeq(G__10690__a,0);
} 
return G__10689__delegate.call(this,keys);};
G__10689.cljs$lang$maxFixedArity = 0;
G__10689.cljs$lang$applyTo = (function (arglist__10691){
var keys = cljs.core.seq(arglist__10691);
return G__10689__delegate(keys);
});
G__10689.cljs$core$IFn$_invoke$arity$variadic = G__10689__delegate;
return G__10689;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__10692 = null;
if (arguments.length > 0) {
var G__10693__i = 0, G__10693__a = new Array(arguments.length -  0);
while (G__10693__i < G__10693__a.length) {G__10693__a[G__10693__i] = arguments[G__10693__i + 0]; ++G__10693__i;}
G__10692 = new cljs.core.IndexedSeq(G__10693__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10694__i = 0, G__10694__a = new Array(arguments.length -  0);
while (G__10694__i < G__10694__a.length) {G__10694__a[G__10694__i] = arguments[G__10694__i + 0]; ++G__10694__i;}
  keys = new cljs.core.IndexedSeq(G__10694__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__10695){
var keys = cljs.core.seq(arglist__10695);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10696__i = 0, G__10696__a = new Array(arguments.length -  1);
while (G__10696__i < G__10696__a.length) {G__10696__a[G__10696__i] = arguments[G__10696__i + 1]; ++G__10696__i;}
  keys = new cljs.core.IndexedSeq(G__10696__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__10697){
var comparator = cljs.core.first(arglist__10697);
var keys = cljs.core.rest(arglist__10697);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10698_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10698_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10698_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10699_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10699_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10699_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10720 = null;
var G__10720__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10720__1 = (function (result){
var G__10710 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10710) : rf.call(null,G__10710));
});
var G__10720__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10711 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10711) : cljs.core.deref.call(null,G__10711));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10712 = result;
var G__10713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10712,G__10713) : rf.call(null,G__10712,G__10713));
}
});
G__10720 = function(result,input){
switch(arguments.length){
case 0:
return G__10720__0.call(this);
case 1:
return G__10720__1.call(this,result);
case 2:
return G__10720__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10720.cljs$core$IFn$_invoke$arity$0 = G__10720__0;
G__10720.cljs$core$IFn$_invoke$arity$1 = G__10720__1;
G__10720.cljs$core$IFn$_invoke$arity$2 = G__10720__2;
return G__10720;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10718,seen__$1){
while(true){
var vec__10719 = p__10718;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10719,(0),null);
var xs__$1 = vec__10719;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10721 = cljs.core.rest(s);
var G__10722 = seen__$1;
p__10718 = G__10721;
seen__$1 = G__10722;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10723 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10724 = cljs.core.next(s__$1);
ret = G__10723;
s__$1 = G__10724;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__10726 = x;
if(G__10726){
var bit__4760__auto__ = (G__10726.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4760__auto__) || (G__10726.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10727 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10728 = cljs.core.next(ks);
var G__10729 = cljs.core.next(vs);
map = G__10727;
ks = G__10728;
vs = G__10729;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__10740 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10740) : k.call(null,G__10740));
})() > (function (){var G__10741 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10741) : k.call(null,G__10741));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__10742__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10730_SHARP_,p2__10731_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10730_SHARP_,p2__10731_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10742 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10743__i = 0, G__10743__a = new Array(arguments.length -  3);
while (G__10743__i < G__10743__a.length) {G__10743__a[G__10743__i] = arguments[G__10743__i + 3]; ++G__10743__i;}
  more = new cljs.core.IndexedSeq(G__10743__a,0);
} 
return G__10742__delegate.call(this,k,x,y,more);};
G__10742.cljs$lang$maxFixedArity = 3;
G__10742.cljs$lang$applyTo = (function (arglist__10744){
var k = cljs.core.first(arglist__10744);
arglist__10744 = cljs.core.next(arglist__10744);
var x = cljs.core.first(arglist__10744);
arglist__10744 = cljs.core.next(arglist__10744);
var y = cljs.core.first(arglist__10744);
var more = cljs.core.rest(arglist__10744);
return G__10742__delegate(k,x,y,more);
});
G__10742.cljs$core$IFn$_invoke$arity$variadic = G__10742__delegate;
return G__10742;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__10745 = null;
if (arguments.length > 3) {
var G__10746__i = 0, G__10746__a = new Array(arguments.length -  3);
while (G__10746__i < G__10746__a.length) {G__10746__a[G__10746__i] = arguments[G__10746__i + 3]; ++G__10746__i;}
G__10745 = new cljs.core.IndexedSeq(G__10746__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__10757 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10757) : k.call(null,G__10757));
})() < (function (){var G__10758 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10758) : k.call(null,G__10758));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__10759__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10747_SHARP_,p2__10748_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10747_SHARP_,p2__10748_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10759 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10760__i = 0, G__10760__a = new Array(arguments.length -  3);
while (G__10760__i < G__10760__a.length) {G__10760__a[G__10760__i] = arguments[G__10760__i + 3]; ++G__10760__i;}
  more = new cljs.core.IndexedSeq(G__10760__a,0);
} 
return G__10759__delegate.call(this,k,x,y,more);};
G__10759.cljs$lang$maxFixedArity = 3;
G__10759.cljs$lang$applyTo = (function (arglist__10761){
var k = cljs.core.first(arglist__10761);
arglist__10761 = cljs.core.next(arglist__10761);
var x = cljs.core.first(arglist__10761);
arglist__10761 = cljs.core.next(arglist__10761);
var y = cljs.core.first(arglist__10761);
var more = cljs.core.rest(arglist__10761);
return G__10759__delegate(k,x,y,more);
});
G__10759.cljs$core$IFn$_invoke$arity$variadic = G__10759__delegate;
return G__10759;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__10762 = null;
if (arguments.length > 3) {
var G__10763__i = 0, G__10763__a = new Array(arguments.length -  3);
while (G__10763__i < G__10763__a.length) {G__10763__a[G__10763__i] = arguments[G__10763__i + 3]; ++G__10763__i;}
G__10762 = new cljs.core.IndexedSeq(G__10763__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10780 = null;
var G__10780__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10780__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10775 = result;
var G__10776 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10775,G__10776) : rf.call(null,G__10775,G__10776));
})());
})());
var G__10777 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10777) : rf.call(null,G__10777));
});
var G__10780__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10778 = result;
var G__10779 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10778,G__10779) : rf.call(null,G__10778,G__10779));
} else {
return result;
}
});
G__10780 = function(result,input){
switch(arguments.length){
case 0:
return G__10780__0.call(this);
case 1:
return G__10780__1.call(this,result);
case 2:
return G__10780__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10780.cljs$core$IFn$_invoke$arity$0 = G__10780__0;
G__10780.cljs$core$IFn$_invoke$arity$1 = G__10780__1;
G__10780.cljs$core$IFn$_invoke$arity$2 = G__10780__2;
return G__10780;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10793 = null;
var G__10793__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10793__1 = (function (result){
var G__10788 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10788) : rf.call(null,G__10788));
});
var G__10793__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10789 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10789) : pred.call(null,G__10789));
})())){
var G__10790 = result;
var G__10791 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10790,G__10791) : rf.call(null,G__10790,G__10791));
} else {
return cljs.core.reduced(result);
}
});
G__10793 = function(result,input){
switch(arguments.length){
case 0:
return G__10793__0.call(this);
case 1:
return G__10793__1.call(this,result);
case 2:
return G__10793__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10793.cljs$core$IFn$_invoke$arity$0 = G__10793__0;
G__10793.cljs$core$IFn$_invoke$arity$1 = G__10793__1;
G__10793.cljs$core$IFn$_invoke$arity$2 = G__10793__2;
return G__10793;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10792 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10792) : pred.call(null,G__10792));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10798 = (function (){var G__10800 = cljs.core._entry_key(sc,e);
var G__10801 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10800,G__10801) : comp.call(null,G__10800,G__10801));
})();
var G__10799 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10798,G__10799) : test.call(null,G__10798,G__10799));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10805 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10805,(0),null);
var s = vec__10805;
if(cljs.core.truth_((function (){var G__10806 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10806) : include.call(null,G__10806));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10807 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10807,(0),null);
var s = vec__10807;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10811 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10811,(0),null);
var s = vec__10811;
if(cljs.core.truth_((function (){var G__10812 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10812) : include.call(null,G__10812));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10813 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10813,(0),null);
var s = vec__10813;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10814 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10814) : Math.ceil.call(null,G__10814));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4509__auto__ = self__.__hash;
if(!((h__4509__auto__ == null))){
return h__4509__auto__;
} else {
var h__4509__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4509__auto____$1;

return h__4509__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10815 = ret;
var G__10816 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10815,G__10816) : f.call(null,G__10815,G__10816));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10817 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10817) : cljs.core.deref.call(null,G__10817));
} else {
var G__10818 = (i + self__.step);
var G__10819 = ret__$1;
i = G__10818;
ret = G__10819;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10837 = null;
var G__10837__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10837__1 = (function (result){
var G__10834 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10834) : rf.call(null,G__10834));
});
var G__10837__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10835 = result;
var G__10836 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10835,G__10836) : rf.call(null,G__10835,G__10836));
} else {
return result;
}
});
G__10837 = function(result,input){
switch(arguments.length){
case 0:
return G__10837__0.call(this);
case 1:
return G__10837__1.call(this,result);
case 2:
return G__10837__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10837.cljs$core$IFn$_invoke$arity$0 = G__10837__0;
G__10837.cljs$core$IFn$_invoke$arity$1 = G__10837__1;
G__10837.cljs$core$IFn$_invoke$arity$2 = G__10837__2;
return G__10837;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10859 = null;
var G__10859__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10859__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10850 = result;
var G__10851 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10850,G__10851) : rf.call(null,G__10850,G__10851));
})());
})());
var G__10852 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10852) : rf.call(null,G__10852));
});
var G__10859__2 = (function (result,input){
var pval = (function (){var G__10853 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10853) : cljs.core.deref.call(null,G__10853));
})();
var val = (function (){var G__10854 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10854) : f.call(null,G__10854));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10855 = result;
var G__10856 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10855,G__10856) : rf.call(null,G__10855,G__10856));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10859 = function(result,input){
switch(arguments.length){
case 0:
return G__10859__0.call(this);
case 1:
return G__10859__1.call(this,result);
case 2:
return G__10859__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10859.cljs$core$IFn$_invoke$arity$0 = G__10859__0;
G__10859.cljs$core$IFn$_invoke$arity$1 = G__10859__1;
G__10859.cljs$core$IFn$_invoke$arity$2 = G__10859__2;
return G__10859;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10857 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10857) : f.call(null,G__10857));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10838_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10858 = p1__10838_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10858) : f.call(null,G__10858));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10868 = init;
var G__10869 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10868,G__10869) : f.call(null,G__10868,G__10869));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__10964 = null;
var G__10964__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10964__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10922 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10922) : f.call(null,G__10922));
})()],null));
});
var G__10964__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10923 = x;
var G__10924 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10923,G__10924) : f.call(null,G__10923,G__10924));
})()],null));
});
var G__10964__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10925 = x;
var G__10926 = y;
var G__10927 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10925,G__10926,G__10927) : f.call(null,G__10925,G__10926,G__10927));
})()],null));
});
var G__10964__4 = (function() { 
var G__10965__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10965 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10966__i = 0, G__10966__a = new Array(arguments.length -  3);
while (G__10966__i < G__10966__a.length) {G__10966__a[G__10966__i] = arguments[G__10966__i + 3]; ++G__10966__i;}
  args = new cljs.core.IndexedSeq(G__10966__a,0);
} 
return G__10965__delegate.call(this,x,y,z,args);};
G__10965.cljs$lang$maxFixedArity = 3;
G__10965.cljs$lang$applyTo = (function (arglist__10967){
var x = cljs.core.first(arglist__10967);
arglist__10967 = cljs.core.next(arglist__10967);
var y = cljs.core.first(arglist__10967);
arglist__10967 = cljs.core.next(arglist__10967);
var z = cljs.core.first(arglist__10967);
var args = cljs.core.rest(arglist__10967);
return G__10965__delegate(x,y,z,args);
});
G__10965.cljs$core$IFn$_invoke$arity$variadic = G__10965__delegate;
return G__10965;
})()
;
G__10964 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10964__0.call(this);
case 1:
return G__10964__1.call(this,x);
case 2:
return G__10964__2.call(this,x,y);
case 3:
return G__10964__3.call(this,x,y,z);
default:
var G__10968 = null;
if (arguments.length > 3) {
var G__10969__i = 0, G__10969__a = new Array(arguments.length -  3);
while (G__10969__i < G__10969__a.length) {G__10969__a[G__10969__i] = arguments[G__10969__i + 3]; ++G__10969__i;}
G__10968 = new cljs.core.IndexedSeq(G__10969__a,0);
}
return G__10964__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10964.cljs$lang$maxFixedArity = 3;
G__10964.cljs$lang$applyTo = G__10964__4.cljs$lang$applyTo;
G__10964.cljs$core$IFn$_invoke$arity$0 = G__10964__0;
G__10964.cljs$core$IFn$_invoke$arity$1 = G__10964__1;
G__10964.cljs$core$IFn$_invoke$arity$2 = G__10964__2;
G__10964.cljs$core$IFn$_invoke$arity$3 = G__10964__3;
G__10964.cljs$core$IFn$_invoke$arity$variadic = G__10964__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10964;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__10970 = null;
var G__10970__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10970__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10928 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10928) : f.call(null,G__10928));
})(),(function (){var G__10929 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10929) : g.call(null,G__10929));
})()],null));
});
var G__10970__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10930 = x;
var G__10931 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10930,G__10931) : f.call(null,G__10930,G__10931));
})(),(function (){var G__10932 = x;
var G__10933 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10932,G__10933) : g.call(null,G__10932,G__10933));
})()],null));
});
var G__10970__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10934 = x;
var G__10935 = y;
var G__10936 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10934,G__10935,G__10936) : f.call(null,G__10934,G__10935,G__10936));
})(),(function (){var G__10937 = x;
var G__10938 = y;
var G__10939 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10937,G__10938,G__10939) : g.call(null,G__10937,G__10938,G__10939));
})()],null));
});
var G__10970__4 = (function() { 
var G__10971__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10971 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10972__i = 0, G__10972__a = new Array(arguments.length -  3);
while (G__10972__i < G__10972__a.length) {G__10972__a[G__10972__i] = arguments[G__10972__i + 3]; ++G__10972__i;}
  args = new cljs.core.IndexedSeq(G__10972__a,0);
} 
return G__10971__delegate.call(this,x,y,z,args);};
G__10971.cljs$lang$maxFixedArity = 3;
G__10971.cljs$lang$applyTo = (function (arglist__10973){
var x = cljs.core.first(arglist__10973);
arglist__10973 = cljs.core.next(arglist__10973);
var y = cljs.core.first(arglist__10973);
arglist__10973 = cljs.core.next(arglist__10973);
var z = cljs.core.first(arglist__10973);
var args = cljs.core.rest(arglist__10973);
return G__10971__delegate(x,y,z,args);
});
G__10971.cljs$core$IFn$_invoke$arity$variadic = G__10971__delegate;
return G__10971;
})()
;
G__10970 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10970__0.call(this);
case 1:
return G__10970__1.call(this,x);
case 2:
return G__10970__2.call(this,x,y);
case 3:
return G__10970__3.call(this,x,y,z);
default:
var G__10974 = null;
if (arguments.length > 3) {
var G__10975__i = 0, G__10975__a = new Array(arguments.length -  3);
while (G__10975__i < G__10975__a.length) {G__10975__a[G__10975__i] = arguments[G__10975__i + 3]; ++G__10975__i;}
G__10974 = new cljs.core.IndexedSeq(G__10975__a,0);
}
return G__10970__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10970.cljs$lang$maxFixedArity = 3;
G__10970.cljs$lang$applyTo = G__10970__4.cljs$lang$applyTo;
G__10970.cljs$core$IFn$_invoke$arity$0 = G__10970__0;
G__10970.cljs$core$IFn$_invoke$arity$1 = G__10970__1;
G__10970.cljs$core$IFn$_invoke$arity$2 = G__10970__2;
G__10970.cljs$core$IFn$_invoke$arity$3 = G__10970__3;
G__10970.cljs$core$IFn$_invoke$arity$variadic = G__10970__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10970;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__10976 = null;
var G__10976__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10976__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10940 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10940) : f.call(null,G__10940));
})(),(function (){var G__10941 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10941) : g.call(null,G__10941));
})(),(function (){var G__10942 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10942) : h.call(null,G__10942));
})()],null));
});
var G__10976__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10943 = x;
var G__10944 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10943,G__10944) : f.call(null,G__10943,G__10944));
})(),(function (){var G__10945 = x;
var G__10946 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10945,G__10946) : g.call(null,G__10945,G__10946));
})(),(function (){var G__10947 = x;
var G__10948 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10947,G__10948) : h.call(null,G__10947,G__10948));
})()],null));
});
var G__10976__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10949 = x;
var G__10950 = y;
var G__10951 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10949,G__10950,G__10951) : f.call(null,G__10949,G__10950,G__10951));
})(),(function (){var G__10952 = x;
var G__10953 = y;
var G__10954 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10952,G__10953,G__10954) : g.call(null,G__10952,G__10953,G__10954));
})(),(function (){var G__10955 = x;
var G__10956 = y;
var G__10957 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10955,G__10956,G__10957) : h.call(null,G__10955,G__10956,G__10957));
})()],null));
});
var G__10976__4 = (function() { 
var G__10977__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10977 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10978__i = 0, G__10978__a = new Array(arguments.length -  3);
while (G__10978__i < G__10978__a.length) {G__10978__a[G__10978__i] = arguments[G__10978__i + 3]; ++G__10978__i;}
  args = new cljs.core.IndexedSeq(G__10978__a,0);
} 
return G__10977__delegate.call(this,x,y,z,args);};
G__10977.cljs$lang$maxFixedArity = 3;
G__10977.cljs$lang$applyTo = (function (arglist__10979){
var x = cljs.core.first(arglist__10979);
arglist__10979 = cljs.core.next(arglist__10979);
var y = cljs.core.first(arglist__10979);
arglist__10979 = cljs.core.next(arglist__10979);
var z = cljs.core.first(arglist__10979);
var args = cljs.core.rest(arglist__10979);
return G__10977__delegate(x,y,z,args);
});
G__10977.cljs$core$IFn$_invoke$arity$variadic = G__10977__delegate;
return G__10977;
})()
;
G__10976 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10976__0.call(this);
case 1:
return G__10976__1.call(this,x);
case 2:
return G__10976__2.call(this,x,y);
case 3:
return G__10976__3.call(this,x,y,z);
default:
var G__10980 = null;
if (arguments.length > 3) {
var G__10981__i = 0, G__10981__a = new Array(arguments.length -  3);
while (G__10981__i < G__10981__a.length) {G__10981__a[G__10981__i] = arguments[G__10981__i + 3]; ++G__10981__i;}
G__10980 = new cljs.core.IndexedSeq(G__10981__a,0);
}
return G__10976__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10976.cljs$lang$maxFixedArity = 3;
G__10976.cljs$lang$applyTo = G__10976__4.cljs$lang$applyTo;
G__10976.cljs$core$IFn$_invoke$arity$0 = G__10976__0;
G__10976.cljs$core$IFn$_invoke$arity$1 = G__10976__1;
G__10976.cljs$core$IFn$_invoke$arity$2 = G__10976__2;
G__10976.cljs$core$IFn$_invoke$arity$3 = G__10976__3;
G__10976.cljs$core$IFn$_invoke$arity$variadic = G__10976__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10976;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__10982__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10983 = null;
var G__10983__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10870_SHARP_,p2__10871_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10870_SHARP_,(function (){return (p2__10871_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10871_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10871_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10983__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10872_SHARP_,p2__10873_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10872_SHARP_,(function (){var G__10958 = x;
return (p2__10873_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10873_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10958) : p2__10873_SHARP_.call(null,G__10958));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10983__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10874_SHARP_,p2__10875_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10874_SHARP_,(function (){var G__10959 = x;
var G__10960 = y;
return (p2__10875_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10875_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10959,G__10960) : p2__10875_SHARP_.call(null,G__10959,G__10960));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10983__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10876_SHARP_,p2__10877_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10876_SHARP_,(function (){var G__10961 = x;
var G__10962 = y;
var G__10963 = z;
return (p2__10877_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10877_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10961,G__10962,G__10963) : p2__10877_SHARP_.call(null,G__10961,G__10962,G__10963));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10983__4 = (function() { 
var G__10984__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10878_SHARP_,p2__10879_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10878_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10879_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10984 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10985__i = 0, G__10985__a = new Array(arguments.length -  3);
while (G__10985__i < G__10985__a.length) {G__10985__a[G__10985__i] = arguments[G__10985__i + 3]; ++G__10985__i;}
  args = new cljs.core.IndexedSeq(G__10985__a,0);
} 
return G__10984__delegate.call(this,x,y,z,args);};
G__10984.cljs$lang$maxFixedArity = 3;
G__10984.cljs$lang$applyTo = (function (arglist__10986){
var x = cljs.core.first(arglist__10986);
arglist__10986 = cljs.core.next(arglist__10986);
var y = cljs.core.first(arglist__10986);
arglist__10986 = cljs.core.next(arglist__10986);
var z = cljs.core.first(arglist__10986);
var args = cljs.core.rest(arglist__10986);
return G__10984__delegate(x,y,z,args);
});
G__10984.cljs$core$IFn$_invoke$arity$variadic = G__10984__delegate;
return G__10984;
})()
;
G__10983 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10983__0.call(this);
case 1:
return G__10983__1.call(this,x);
case 2:
return G__10983__2.call(this,x,y);
case 3:
return G__10983__3.call(this,x,y,z);
default:
var G__10987 = null;
if (arguments.length > 3) {
var G__10988__i = 0, G__10988__a = new Array(arguments.length -  3);
while (G__10988__i < G__10988__a.length) {G__10988__a[G__10988__i] = arguments[G__10988__i + 3]; ++G__10988__i;}
G__10987 = new cljs.core.IndexedSeq(G__10988__a,0);
}
return G__10983__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10983.cljs$lang$maxFixedArity = 3;
G__10983.cljs$lang$applyTo = G__10983__4.cljs$lang$applyTo;
G__10983.cljs$core$IFn$_invoke$arity$0 = G__10983__0;
G__10983.cljs$core$IFn$_invoke$arity$1 = G__10983__1;
G__10983.cljs$core$IFn$_invoke$arity$2 = G__10983__2;
G__10983.cljs$core$IFn$_invoke$arity$3 = G__10983__3;
G__10983.cljs$core$IFn$_invoke$arity$variadic = G__10983__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10983;
})()
;})(fs__$1))
};
var G__10982 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10989__i = 0, G__10989__a = new Array(arguments.length -  3);
while (G__10989__i < G__10989__a.length) {G__10989__a[G__10989__i] = arguments[G__10989__i + 3]; ++G__10989__i;}
  fs = new cljs.core.IndexedSeq(G__10989__a,0);
} 
return G__10982__delegate.call(this,f,g,h,fs);};
G__10982.cljs$lang$maxFixedArity = 3;
G__10982.cljs$lang$applyTo = (function (arglist__10990){
var f = cljs.core.first(arglist__10990);
arglist__10990 = cljs.core.next(arglist__10990);
var g = cljs.core.first(arglist__10990);
arglist__10990 = cljs.core.next(arglist__10990);
var h = cljs.core.first(arglist__10990);
var fs = cljs.core.rest(arglist__10990);
return G__10982__delegate(f,g,h,fs);
});
G__10982.cljs$core$IFn$_invoke$arity$variadic = G__10982__delegate;
return G__10982;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__10991 = null;
if (arguments.length > 3) {
var G__10992__i = 0, G__10992__a = new Array(arguments.length -  3);
while (G__10992__i < G__10992__a.length) {G__10992__a[G__10992__i] = arguments[G__10992__i + 3]; ++G__10992__i;}
G__10991 = new cljs.core.IndexedSeq(G__10992__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10993 = cljs.core.next(coll);
coll = G__10993;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10994 = (n - (1));
var G__10995 = cljs.core.next(coll);
n = G__10994;
coll = G__10995;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10999 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10999,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10999,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__4093__auto__ = flags;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11007 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__4093__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__11008_11014 = cljs.core.first(coll);
var G__11009_11015 = writer;
var G__11010_11016 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11008_11014,G__11009_11015,G__11010_11016) : print_one.call(null,G__11008_11014,G__11009_11015,G__11010_11016));
} else {
}

var coll_11017__$1 = cljs.core.next(coll);
var n_11018 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11017__$1) && (((n_11018 == null)) || (!((n_11018 === (0)))))){
cljs.core._write(writer,sep);

var G__11011_11019 = cljs.core.first(coll_11017__$1);
var G__11012_11020 = writer;
var G__11013_11021 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11011_11019,G__11012_11020,G__11013_11021) : print_one.call(null,G__11011_11019,G__11012_11020,G__11013_11021));

var G__11022 = cljs.core.next(coll_11017__$1);
var G__11023 = (n_11018 - (1));
coll_11017__$1 = G__11022;
n_11018 = G__11023;
continue;
} else {
if((cljs.core.seq(coll_11017__$1)) && ((n_11018 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__4093__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11007;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__11028 = cljs.core.seq(ss);
var chunk__11029 = null;
var count__11030 = (0);
var i__11031 = (0);
while(true){
if((i__11031 < count__11030)){
var s = chunk__11029.cljs$core$IIndexed$_nth$arity$2(null,i__11031);
cljs.core._write(writer,s);

var G__11032 = seq__11028;
var G__11033 = chunk__11029;
var G__11034 = count__11030;
var G__11035 = (i__11031 + (1));
seq__11028 = G__11032;
chunk__11029 = G__11033;
count__11030 = G__11034;
i__11031 = G__11035;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11028);
if(temp__4126__auto__){
var seq__11028__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11028__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__11028__$1);
var G__11036 = cljs.core.chunk_rest(seq__11028__$1);
var G__11037 = c__4878__auto__;
var G__11038 = cljs.core.count(c__4878__auto__);
var G__11039 = (0);
seq__11028 = G__11036;
chunk__11029 = G__11037;
count__11030 = G__11038;
i__11031 = G__11039;
continue;
} else {
var s = cljs.core.first(seq__11028__$1);
cljs.core._write(writer,s);

var G__11040 = cljs.core.next(seq__11028__$1);
var G__11041 = null;
var G__11042 = (0);
var G__11043 = (0);
seq__11028 = G__11040;
chunk__11029 = G__11041;
count__11030 = G__11042;
i__11031 = G__11043;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11044__i = 0, G__11044__a = new Array(arguments.length -  1);
while (G__11044__i < G__11044__a.length) {G__11044__a[G__11044__i] = arguments[G__11044__i + 1]; ++G__11044__i;}
  ss = new cljs.core.IndexedSeq(G__11044__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__11045){
var writer = cljs.core.first(arglist__11045);
var ss = cljs.core.rest(arglist__11045);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11047 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11047;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11050 = "[\\\\\"\b\f\n\r\t]";
var G__11051 = "g";
return RegExp(G__11050,G__11051);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4081__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__4081__auto__)){
var and__4081__auto____$1 = (function (){var G__11065 = obj;
if(G__11065){
var bit__4767__auto__ = (G__11065.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4767__auto__) || (G__11065.cljs$core$IMeta$)){
return true;
} else {
if((!G__11065.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11065);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11065);
}
})();
if(and__4081__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__11066_11076 = cljs.core.meta(obj);
var G__11067_11077 = writer;
var G__11068_11078 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__11066_11076,G__11067_11077,G__11068_11078) : cljs.core.pr_writer.call(null,G__11066_11076,G__11067_11077,G__11068_11078));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11069 = obj;
if(G__11069){
var bit__4760__auto__ = (G__11069.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4760__auto__) || (G__11069.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11070 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11071 = cljs.core.pr_writer;
var G__11072 = writer;
var G__11073 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11070,G__11071,G__11072,G__11073) : cljs.core.print_map.call(null,G__11070,G__11071,G__11072,G__11073));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11074 = obj;
return goog.isString(G__11074);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11079 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11079;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11075 = obj;
if(G__11075){
var bit__4767__auto__ = (G__11075.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4767__auto__) || (G__11075.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11075.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11075);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11075);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__11083 = obj;
var G__11084 = writer;
var G__11085 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__11083,G__11084,G__11085) : alt_impl.call(null,G__11083,G__11084,G__11085));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11090 = cljs.core.seq(cljs.core.next(objs));
var chunk__11091 = null;
var count__11092 = (0);
var i__11093 = (0);
while(true){
if((i__11093 < count__11092)){
var obj = chunk__11091.cljs$core$IIndexed$_nth$arity$2(null,i__11093);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11094 = seq__11090;
var G__11095 = chunk__11091;
var G__11096 = count__11092;
var G__11097 = (i__11093 + (1));
seq__11090 = G__11094;
chunk__11091 = G__11095;
count__11092 = G__11096;
i__11093 = G__11097;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11090);
if(temp__4126__auto__){
var seq__11090__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11090__$1)){
var c__4878__auto__ = cljs.core.chunk_first(seq__11090__$1);
var G__11098 = cljs.core.chunk_rest(seq__11090__$1);
var G__11099 = c__4878__auto__;
var G__11100 = cljs.core.count(c__4878__auto__);
var G__11101 = (0);
seq__11090 = G__11098;
chunk__11091 = G__11099;
count__11092 = G__11100;
i__11093 = G__11101;
continue;
} else {
var obj = cljs.core.first(seq__11090__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11102 = cljs.core.next(seq__11090__$1);
var G__11103 = null;
var G__11104 = (0);
var G__11105 = (0);
seq__11090 = G__11102;
chunk__11091 = G__11103;
count__11092 = G__11104;
i__11093 = G__11105;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11106__i = 0, G__11106__a = new Array(arguments.length -  0);
while (G__11106__i < G__11106__a.length) {G__11106__a[G__11106__i] = arguments[G__11106__i + 0]; ++G__11106__i;}
  objs = new cljs.core.IndexedSeq(G__11106__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__11107){
var objs = cljs.core.seq(arglist__11107);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11108__i = 0, G__11108__a = new Array(arguments.length -  0);
while (G__11108__i < G__11108__a.length) {G__11108__a[G__11108__i] = arguments[G__11108__i + 0]; ++G__11108__i;}
  objs = new cljs.core.IndexedSeq(G__11108__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__11109){
var objs = cljs.core.seq(arglist__11109);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11110__i = 0, G__11110__a = new Array(arguments.length -  0);
while (G__11110__i < G__11110__a.length) {G__11110__a[G__11110__i] = arguments[G__11110__i + 0]; ++G__11110__i;}
  objs = new cljs.core.IndexedSeq(G__11110__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__11111){
var objs = cljs.core.seq(arglist__11111);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11112__i = 0, G__11112__a = new Array(arguments.length -  0);
while (G__11112__i < G__11112__a.length) {G__11112__a[G__11112__i] = arguments[G__11112__i + 0]; ++G__11112__i;}
  objs = new cljs.core.IndexedSeq(G__11112__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__11113){
var objs = cljs.core.seq(arglist__11113);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11114__i = 0, G__11114__a = new Array(arguments.length -  0);
while (G__11114__i < G__11114__a.length) {G__11114__a[G__11114__i] = arguments[G__11114__i + 0]; ++G__11114__i;}
  objs = new cljs.core.IndexedSeq(G__11114__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__11115){
var objs = cljs.core.seq(arglist__11115);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11116__i = 0, G__11116__a = new Array(arguments.length -  0);
while (G__11116__i < G__11116__a.length) {G__11116__a[G__11116__i] = arguments[G__11116__i + 0]; ++G__11116__i;}
  objs = new cljs.core.IndexedSeq(G__11116__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__11117){
var objs = cljs.core.seq(arglist__11117);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11118__i = 0, G__11118__a = new Array(arguments.length -  0);
while (G__11118__i < G__11118__a.length) {G__11118__a[G__11118__i] = arguments[G__11118__i + 0]; ++G__11118__i;}
  objs = new cljs.core.IndexedSeq(G__11118__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__11119){
var objs = cljs.core.seq(arglist__11119);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11120__i = 0, G__11120__a = new Array(arguments.length -  0);
while (G__11120__i < G__11120__a.length) {G__11120__a[G__11120__i] = arguments[G__11120__i + 0]; ++G__11120__i;}
  objs = new cljs.core.IndexedSeq(G__11120__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__11121){
var objs = cljs.core.seq(arglist__11121);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11128_11134 = cljs.core.key(e);
var G__11129_11135 = w;
var G__11130_11136 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11128_11134,G__11129_11135,G__11130_11136) : print_one.call(null,G__11128_11134,G__11129_11135,G__11130_11136));

cljs.core._write(w," ");

var G__11131 = cljs.core.val(e);
var G__11132 = w;
var G__11133 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11131,G__11132,G__11133) : print_one.call(null,G__11131,G__11132,G__11133));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11137__i = 0, G__11137__a = new Array(arguments.length -  2);
while (G__11137__i < G__11137__a.length) {G__11137__a[G__11137__i] = arguments[G__11137__i + 2]; ++G__11137__i;}
  args = new cljs.core.IndexedSeq(G__11137__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11138){
var iref = cljs.core.first(arglist__11138);
arglist__11138 = cljs.core.next(arglist__11138);
var f = cljs.core.first(arglist__11138);
var args = cljs.core.rest(arglist__11138);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11141 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11141) : cljs.core.atom.call(null,G__11141));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11143 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11143) : cljs.core.deref.call(null,G__11143));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__11144_SHARP_,p2__11145_SHARP_){
var ret = (function (){var G__11148 = p1__11144_SHARP_;
var G__11149 = p2__11145_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11148,G__11149) : rf.call(null,G__11148,G__11149));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11152 = null;
var G__11152__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11152__1 = (function (result){
var G__11151 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11151) : rf.call(null,G__11151));
});
var G__11152__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11152 = function(result,input){
switch(arguments.length){
case 0:
return G__11152__0.call(this);
case 1:
return G__11152__1.call(this,result);
case 2:
return G__11152__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11152.cljs$core$IFn$_invoke$arity$0 = G__11152__0;
G__11152.cljs$core$IFn$_invoke$arity$1 = G__11152__1;
G__11152.cljs$core$IFn$_invoke$arity$2 = G__11152__2;
return G__11152;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11161 = null;
var G__11161__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11161__1 = (function (result){
var G__11157 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11157) : rf.call(null,G__11157));
});
var G__11161__2 = (function (result,input){
var prior = (function (){var G__11158 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11158) : cljs.core.deref.call(null,G__11158));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11159 = result;
var G__11160 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11159,G__11160) : rf.call(null,G__11159,G__11160));
}
});
G__11161 = function(result,input){
switch(arguments.length){
case 0:
return G__11161__0.call(this);
case 1:
return G__11161__1.call(this,result);
case 2:
return G__11161__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11161.cljs$core$IFn$_invoke$arity$0 = G__11161__0;
G__11161.cljs$core$IFn$_invoke$arity$1 = G__11161__1;
G__11161.cljs$core$IFn$_invoke$arity$2 = G__11161__2;
return G__11161;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5069__auto__ = this;
return cljs.core.es6_iterator(this__5069__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11163_SHARP_,p2__11162_SHARP_){
var G__11165 = p2__11162_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11165) : proc.call(null,G__11165));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11167 = {};
return obj11167;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._clj__GT_js[(function (){var G__11171 = x__4729__auto__;
return goog.typeOf(G__11171);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._key__GT_js[(function (){var G__11175 = x__4729__auto__;
return goog.typeOf(G__11175);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__11178 = k;
if(G__11178){
var bit__4767__auto__ = null;
if(cljs.core.truth_((function (){var or__4093__auto__ = bit__4767__auto__;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return G__11178.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11178.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11178);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11178);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11179 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11179) : cljs.core.clj__GT_js.call(null,G__11179));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11195 = x;
if(G__11195){
var bit__4767__auto__ = null;
if(cljs.core.truth_((function (){var or__4093__auto__ = bit__4767__auto__;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return G__11195.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11195.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11195);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11195);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11197 = {};
return obj11197;
})();
var seq__11198_11208 = cljs.core.seq(x);
var chunk__11199_11209 = null;
var count__11200_11210 = (0);
var i__11201_11211 = (0);
while(true){
if((i__11201_11211 < count__11200_11210)){
var vec__11202_11212 = chunk__11199_11209.cljs$core$IIndexed$_nth$arity$2(null,i__11201_11211);
var k_11213 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202_11212,(0),null);
var v_11214 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202_11212,(1),null);
(m[cljs.core.key__GT_js(k_11213)] = cljs$core$clj__GT_js(v_11214));

var G__11215 = seq__11198_11208;
var G__11216 = chunk__11199_11209;
var G__11217 = count__11200_11210;
var G__11218 = (i__11201_11211 + (1));
seq__11198_11208 = G__11215;
chunk__11199_11209 = G__11216;
count__11200_11210 = G__11217;
i__11201_11211 = G__11218;
continue;
} else {
var temp__4126__auto___11219 = cljs.core.seq(seq__11198_11208);
if(temp__4126__auto___11219){
var seq__11198_11220__$1 = temp__4126__auto___11219;
if(cljs.core.chunked_seq_QMARK_(seq__11198_11220__$1)){
var c__4878__auto___11221 = cljs.core.chunk_first(seq__11198_11220__$1);
var G__11222 = cljs.core.chunk_rest(seq__11198_11220__$1);
var G__11223 = c__4878__auto___11221;
var G__11224 = cljs.core.count(c__4878__auto___11221);
var G__11225 = (0);
seq__11198_11208 = G__11222;
chunk__11199_11209 = G__11223;
count__11200_11210 = G__11224;
i__11201_11211 = G__11225;
continue;
} else {
var vec__11203_11226 = cljs.core.first(seq__11198_11220__$1);
var k_11227 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11203_11226,(0),null);
var v_11228 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11203_11226,(1),null);
(m[cljs.core.key__GT_js(k_11227)] = cljs$core$clj__GT_js(v_11228));

var G__11229 = cljs.core.next(seq__11198_11220__$1);
var G__11230 = null;
var G__11231 = (0);
var G__11232 = (0);
seq__11198_11208 = G__11229;
chunk__11199_11209 = G__11230;
count__11200_11210 = G__11231;
i__11201_11211 = G__11232;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11204_11233 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__11205_11234 = null;
var count__11206_11235 = (0);
var i__11207_11236 = (0);
while(true){
if((i__11207_11236 < count__11206_11235)){
var x_11237__$1 = chunk__11205_11234.cljs$core$IIndexed$_nth$arity$2(null,i__11207_11236);
arr.push(x_11237__$1);

var G__11238 = seq__11204_11233;
var G__11239 = chunk__11205_11234;
var G__11240 = count__11206_11235;
var G__11241 = (i__11207_11236 + (1));
seq__11204_11233 = G__11238;
chunk__11205_11234 = G__11239;
count__11206_11235 = G__11240;
i__11207_11236 = G__11241;
continue;
} else {
var temp__4126__auto___11242 = cljs.core.seq(seq__11204_11233);
if(temp__4126__auto___11242){
var seq__11204_11243__$1 = temp__4126__auto___11242;
if(cljs.core.chunked_seq_QMARK_(seq__11204_11243__$1)){
var c__4878__auto___11244 = cljs.core.chunk_first(seq__11204_11243__$1);
var G__11245 = cljs.core.chunk_rest(seq__11204_11243__$1);
var G__11246 = c__4878__auto___11244;
var G__11247 = cljs.core.count(c__4878__auto___11244);
var G__11248 = (0);
seq__11204_11233 = G__11245;
chunk__11205_11234 = G__11246;
count__11206_11235 = G__11247;
i__11207_11236 = G__11248;
continue;
} else {
var x_11249__$1 = cljs.core.first(seq__11204_11243__$1);
arr.push(x_11249__$1);

var G__11250 = cljs.core.next(seq__11204_11243__$1);
var G__11251 = null;
var G__11252 = (0);
var G__11253 = (0);
seq__11204_11233 = G__11250;
chunk__11205_11234 = G__11251;
count__11206_11235 = G__11252;
i__11207_11236 = G__11253;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11255 = {};
return obj11255;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__4081__auto__ = x;
if(and__4081__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4081__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4729__auto__ = (((x == null))?null:x);
return (function (){var or__4093__auto__ = (cljs.core._js__GT_clj[(function (){var G__11259 = x__4729__auto__;
return goog.typeOf(G__11259);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__11316__delegate = function (x,opts){
var map__11289 = opts;
var map__11289__$1 = ((cljs.core.seq_QMARK_(map__11289))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11289):map__11289);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11289__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11289,map__11289__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__11305 = x__$1;
if(G__11305){
var bit__4767__auto__ = null;
if(cljs.core.truth_((function (){var or__4093__auto__ = bit__4767__auto__;
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return G__11305.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11305.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11305);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11305);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4847__auto__ = ((function (map__11289,map__11289__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__11306(s__11307){
return (new cljs.core.LazySeq(null,((function (map__11289,map__11289__$1,keywordize_keys,keyfn){
return (function (){
var s__11307__$1 = s__11307;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11307__$1);
if(temp__4126__auto__){
var s__11307__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11307__$2)){
var c__4845__auto__ = cljs.core.chunk_first(s__11307__$2);
var size__4846__auto__ = cljs.core.count(c__4845__auto__);
var b__11309 = cljs.core.chunk_buffer(size__4846__auto__);
if((function (){var i__11308 = (0);
while(true){
if((i__11308 < size__4846__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4845__auto__,i__11308);
cljs.core.chunk_append(b__11309,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11314 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11314) : keyfn.call(null,G__11314));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__11317 = (i__11308 + (1));
i__11308 = G__11317;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11309),cljs$core$js__GT_clj_$_thisfn_$_iter__11306(cljs.core.chunk_rest(s__11307__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11309),null);
}
} else {
var k = cljs.core.first(s__11307__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11315 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11315) : keyfn.call(null,G__11315));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__11306(cljs.core.rest(s__11307__$2)));
}
} else {
return null;
}
break;
}
});})(map__11289,map__11289__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11289,map__11289__$1,keywordize_keys,keyfn))
;
return iter__4847__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11289,map__11289__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11316 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11318__i = 0, G__11318__a = new Array(arguments.length -  1);
while (G__11318__i < G__11318__a.length) {G__11318__a[G__11318__i] = arguments[G__11318__i + 1]; ++G__11318__i;}
  opts = new cljs.core.IndexedSeq(G__11318__a,0);
} 
return G__11316__delegate.call(this,x,opts);};
G__11316.cljs$lang$maxFixedArity = 1;
G__11316.cljs$lang$applyTo = (function (arglist__11319){
var x = cljs.core.first(arglist__11319);
var opts = cljs.core.rest(arglist__11319);
return G__11316__delegate(x,opts);
});
G__11316.cljs$core$IFn$_invoke$arity$variadic = G__11316__delegate;
return G__11316;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__11320 = null;
if (arguments.length > 1) {
var G__11321__i = 0, G__11321__a = new Array(arguments.length -  1);
while (G__11321__i < G__11321__a.length) {G__11321__a[G__11321__i] = arguments[G__11321__i + 1]; ++G__11321__i;}
G__11320 = new cljs.core.IndexedSeq(G__11321__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__11324 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11324) : cljs.core.atom.call(null,G__11324));
})();
return ((function (mem){
return (function() { 
var G__11326__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11325 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11325) : cljs.core.deref.call(null,G__11325));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11326 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11327__i = 0, G__11327__a = new Array(arguments.length -  0);
while (G__11327__i < G__11327__a.length) {G__11327__a[G__11327__i] = arguments[G__11327__i + 0]; ++G__11327__i;}
  args = new cljs.core.IndexedSeq(G__11327__a,0);
} 
return G__11326__delegate.call(this,args);};
G__11326.cljs$lang$maxFixedArity = 0;
G__11326.cljs$lang$applyTo = (function (arglist__11328){
var args = cljs.core.seq(arglist__11328);
return G__11326__delegate(args);
});
G__11326.cljs$core$IFn$_invoke$arity$variadic = G__11326__delegate;
return G__11326;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11330 = ret;
f = G__11330;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__11331__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11331 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11332__i = 0, G__11332__a = new Array(arguments.length -  1);
while (G__11332__i < G__11332__a.length) {G__11332__a[G__11332__i] = arguments[G__11332__i + 1]; ++G__11332__i;}
  args = new cljs.core.IndexedSeq(G__11332__a,0);
} 
return G__11331__delegate.call(this,f,args);};
G__11331.cljs$lang$maxFixedArity = 1;
G__11331.cljs$lang$applyTo = (function (arglist__11333){
var f = cljs.core.first(arglist__11333);
var args = cljs.core.rest(arglist__11333);
return G__11331__delegate(f,args);
});
G__11331.cljs$core$IFn$_invoke$arity$variadic = G__11331__delegate;
return G__11331;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__11334 = null;
if (arguments.length > 1) {
var G__11335__i = 0, G__11335__a = new Array(arguments.length -  1);
while (G__11335__i < G__11335__a.length) {G__11335__a[G__11335__i] = arguments[G__11335__i + 1]; ++G__11335__i;}
G__11334 = new cljs.core.IndexedSeq(G__11335__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__11338 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11338) : Math.floor.call(null,G__11338));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11340 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11340) : f.call(null,G__11340));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11342 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11342) : cljs.core.atom.call(null,G__11342));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11343__i = 0, G__11343__a = new Array(arguments.length -  1);
while (G__11343__i < G__11343__a.length) {G__11343__a[G__11343__i] = arguments[G__11343__i + 1]; ++G__11343__i;}
  args = new cljs.core.IndexedSeq(G__11343__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11344){
var f = cljs.core.first(arglist__11344);
var args = cljs.core.rest(arglist__11344);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11409 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11409) : cljs.core.deref.call(null,G__11409));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__4093__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
var and__4081__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4081__auto__){
var and__4081__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4081__auto____$1){
var and__4081__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4081__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11434 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11432 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11432) : child.call(null,G__11432));
})(),(function (){var G__11433 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11433) : parent.call(null,G__11433));
})());
var G__11435 = (i + (1));
ret = G__11434;
i = G__11435;
continue;
}
break;
}
} else {
return and__4081__auto____$2;
}
} else {
return and__4081__auto____$1;
}
} else {
return and__4081__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11439 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11439) : cljs.core.deref.call(null,G__11439));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11443 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11443) : cljs.core.deref.call(null,G__11443));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11447 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11447) : cljs.core.deref.call(null,G__11447));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11456 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11456) : targets.call(null,G__11456));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11457 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11457) : sources.call(null,G__11457));
})()));
});})(tp,td,ta))
;
var or__4093__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11461 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11461) : tp.call(null,G__11461));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11462 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11462) : ta.call(null,G__11462));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11463 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11463) : ta.call(null,G__11463));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11470 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11470) : parentMap.call(null,G__11470));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11471 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11471) : parentMap.call(null,G__11471));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11464_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11464_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11464_SHARP_),cljs.core.second(p1__11464_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11472 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11472) : parentMap.call(null,G__11472));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11465_SHARP_,p2__11466_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11465_SHARP_,p2__11466_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11475 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11475) : cljs.core.deref.call(null,G__11475));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11476 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11476) : cljs.core.deref.call(null,G__11476));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11492 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11492) : cljs.core.deref.call(null,G__11492));
})().call(null,x);
var or__4093__auto__ = (cljs.core.truth_((function (){var and__4081__auto__ = xprefs;
if(cljs.core.truth_(and__4081__auto__)){
var G__11494 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11494) : xprefs.call(null,G__11494));
} else {
return and__4081__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11495 = cljs.core.rest(ps);
ps = G__11495;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4093__auto____$1)){
return or__4093__auto____$1;
} else {
var or__4093__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11496 = cljs.core.rest(ps);
ps = G__11496;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4093__auto____$2)){
return or__4093__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__4093__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4093__auto__)){
return or__4093__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11510){
var vec__11511 = p__11510;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11511,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11511,(1),null);
var e = vec__11511;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11512 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11512) : cljs.core.deref.call(null,G__11512));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4093__auto__ = (be == null);
if(or__4093__auto__){
return or__4093__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11513 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11513) : cljs.core.deref.call(null,G__11513));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11514 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11514) : cljs.core.deref.call(null,G__11514));
})(),(function (){var G__11515 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11515) : cljs.core.deref.call(null,G__11515));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11517 = {};
return obj11517;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._reset[(function (){var G__11521 = x__4729__auto__;
return goog.typeOf(G__11521);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._reset["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._add_method[(function (){var G__11525 = x__4729__auto__;
return goog.typeOf(G__11525);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._add_method["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._remove_method[(function (){var G__11529 = x__4729__auto__;
return goog.typeOf(G__11529);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._prefer_method[(function (){var G__11533 = x__4729__auto__;
return goog.typeOf(G__11533);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._get_method[(function (){var G__11537 = x__4729__auto__;
return goog.typeOf(G__11537);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._get_method["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._methods[(function (){var G__11541 = x__4729__auto__;
return goog.typeOf(G__11541);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._methods["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._prefers[(function (){var G__11545 = x__4729__auto__;
return goog.typeOf(G__11545);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._prefers["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core._default_dispatch_val = (function cljs$core$_default_dispatch_val(mf){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._default_dispatch_val[(function (){var G__11549 = x__4729__auto__;
return goog.typeOf(G__11549);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._default_dispatch_val["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val",mf);
}
}
})().call(null,mf);
}
});

cljs.core._dispatch_fn = (function cljs$core$_dispatch_fn(mf){
if((function (){var and__4081__auto__ = mf;
if(and__4081__auto__){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
} else {
return and__4081__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
} else {
var x__4729__auto__ = (((mf == null))?null:mf);
return (function (){var or__4093__auto__ = (cljs.core._dispatch_fn[(function (){var G__11553 = x__4729__auto__;
return goog.typeOf(G__11553);
})()]);
if(or__4093__auto__){
return or__4093__auto__;
} else {
var or__4093__auto____$1 = (cljs.core._dispatch_fn["_"]);
if(or__4093__auto____$1){
return or__4093__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11555 = this$__$1;
return goog.getUid(G__11555);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.default_dispatch_val;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11556 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11556) : cljs.core.deref.call(null,G__11556));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11557 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11557) : cljs.core.deref.call(null,G__11557));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.dispatch_fn;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11558 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11558) : cljs.core.deref.call(null,G__11558));
})(),(function (){var G__11559 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11559) : cljs.core.deref.call(null,G__11559));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11560 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11560) : cljs.core.deref.call(null,G__11560));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11561 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11561) : cljs.core.deref.call(null,G__11561));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12402 = null;
var G__12402__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12402__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11562 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11562) : self__.dispatch_fn.call(null,G__11562));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11563 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11563) : target_fn.call(null,G__11563));
});
var G__12402__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11564 = a;
var G__11565 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11564,G__11565) : self__.dispatch_fn.call(null,G__11564,G__11565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11566 = a;
var G__11567 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11566,G__11567) : target_fn.call(null,G__11566,G__11567));
});
var G__12402__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11568 = a;
var G__11569 = b;
var G__11570 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11568,G__11569,G__11570) : self__.dispatch_fn.call(null,G__11568,G__11569,G__11570));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11571 = a;
var G__11572 = b;
var G__11573 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11571,G__11572,G__11573) : target_fn.call(null,G__11571,G__11572,G__11573));
});
var G__12402__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11574 = a;
var G__11575 = b;
var G__11576 = c;
var G__11577 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11574,G__11575,G__11576,G__11577) : self__.dispatch_fn.call(null,G__11574,G__11575,G__11576,G__11577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11578 = a;
var G__11579 = b;
var G__11580 = c;
var G__11581 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11578,G__11579,G__11580,G__11581) : target_fn.call(null,G__11578,G__11579,G__11580,G__11581));
});
var G__12402__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11582 = a;
var G__11583 = b;
var G__11584 = c;
var G__11585 = d;
var G__11586 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11582,G__11583,G__11584,G__11585,G__11586) : self__.dispatch_fn.call(null,G__11582,G__11583,G__11584,G__11585,G__11586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11587 = a;
var G__11588 = b;
var G__11589 = c;
var G__11590 = d;
var G__11591 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11587,G__11588,G__11589,G__11590,G__11591) : target_fn.call(null,G__11587,G__11588,G__11589,G__11590,G__11591));
});
var G__12402__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11592 = a;
var G__11593 = b;
var G__11594 = c;
var G__11595 = d;
var G__11596 = e;
var G__11597 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11592,G__11593,G__11594,G__11595,G__11596,G__11597) : self__.dispatch_fn.call(null,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11598 = a;
var G__11599 = b;
var G__11600 = c;
var G__11601 = d;
var G__11602 = e;
var G__11603 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11598,G__11599,G__11600,G__11601,G__11602,G__11603) : target_fn.call(null,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603));
});
var G__12402__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11604 = a;
var G__11605 = b;
var G__11606 = c;
var G__11607 = d;
var G__11608 = e;
var G__11609 = f;
var G__11610 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610) : self__.dispatch_fn.call(null,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11611 = a;
var G__11612 = b;
var G__11613 = c;
var G__11614 = d;
var G__11615 = e;
var G__11616 = f;
var G__11617 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617) : target_fn.call(null,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617));
});
var G__12402__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11618 = a;
var G__11619 = b;
var G__11620 = c;
var G__11621 = d;
var G__11622 = e;
var G__11623 = f;
var G__11624 = g;
var G__11625 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625) : self__.dispatch_fn.call(null,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11626 = a;
var G__11627 = b;
var G__11628 = c;
var G__11629 = d;
var G__11630 = e;
var G__11631 = f;
var G__11632 = g;
var G__11633 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633) : target_fn.call(null,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633));
});
var G__12402__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11634 = a;
var G__11635 = b;
var G__11636 = c;
var G__11637 = d;
var G__11638 = e;
var G__11639 = f;
var G__11640 = g;
var G__11641 = h;
var G__11642 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642) : self__.dispatch_fn.call(null,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11643 = a;
var G__11644 = b;
var G__11645 = c;
var G__11646 = d;
var G__11647 = e;
var G__11648 = f;
var G__11649 = g;
var G__11650 = h;
var G__11651 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651) : target_fn.call(null,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651));
});
var G__12402__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11652 = a;
var G__11653 = b;
var G__11654 = c;
var G__11655 = d;
var G__11656 = e;
var G__11657 = f;
var G__11658 = g;
var G__11659 = h;
var G__11660 = i;
var G__11661 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661) : self__.dispatch_fn.call(null,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11662 = a;
var G__11663 = b;
var G__11664 = c;
var G__11665 = d;
var G__11666 = e;
var G__11667 = f;
var G__11668 = g;
var G__11669 = h;
var G__11670 = i;
var G__11671 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671) : target_fn.call(null,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671));
});
var G__12402__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11672 = a;
var G__11673 = b;
var G__11674 = c;
var G__11675 = d;
var G__11676 = e;
var G__11677 = f;
var G__11678 = g;
var G__11679 = h;
var G__11680 = i;
var G__11681 = j;
var G__11682 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682) : self__.dispatch_fn.call(null,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11683 = a;
var G__11684 = b;
var G__11685 = c;
var G__11686 = d;
var G__11687 = e;
var G__11688 = f;
var G__11689 = g;
var G__11690 = h;
var G__11691 = i;
var G__11692 = j;
var G__11693 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693) : target_fn.call(null,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693));
});
var G__12402__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11694 = a;
var G__11695 = b;
var G__11696 = c;
var G__11697 = d;
var G__11698 = e;
var G__11699 = f;
var G__11700 = g;
var G__11701 = h;
var G__11702 = i;
var G__11703 = j;
var G__11704 = k;
var G__11705 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705) : self__.dispatch_fn.call(null,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11706 = a;
var G__11707 = b;
var G__11708 = c;
var G__11709 = d;
var G__11710 = e;
var G__11711 = f;
var G__11712 = g;
var G__11713 = h;
var G__11714 = i;
var G__11715 = j;
var G__11716 = k;
var G__11717 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717) : target_fn.call(null,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717));
});
var G__12402__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11718 = a;
var G__11719 = b;
var G__11720 = c;
var G__11721 = d;
var G__11722 = e;
var G__11723 = f;
var G__11724 = g;
var G__11725 = h;
var G__11726 = i;
var G__11727 = j;
var G__11728 = k;
var G__11729 = l;
var G__11730 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730) : self__.dispatch_fn.call(null,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11731 = a;
var G__11732 = b;
var G__11733 = c;
var G__11734 = d;
var G__11735 = e;
var G__11736 = f;
var G__11737 = g;
var G__11738 = h;
var G__11739 = i;
var G__11740 = j;
var G__11741 = k;
var G__11742 = l;
var G__11743 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743) : target_fn.call(null,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743));
});
var G__12402__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11744 = a;
var G__11745 = b;
var G__11746 = c;
var G__11747 = d;
var G__11748 = e;
var G__11749 = f;
var G__11750 = g;
var G__11751 = h;
var G__11752 = i;
var G__11753 = j;
var G__11754 = k;
var G__11755 = l;
var G__11756 = m;
var G__11757 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757) : self__.dispatch_fn.call(null,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11758 = a;
var G__11759 = b;
var G__11760 = c;
var G__11761 = d;
var G__11762 = e;
var G__11763 = f;
var G__11764 = g;
var G__11765 = h;
var G__11766 = i;
var G__11767 = j;
var G__11768 = k;
var G__11769 = l;
var G__11770 = m;
var G__11771 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771) : target_fn.call(null,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771));
});
var G__12402__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11772 = a;
var G__11773 = b;
var G__11774 = c;
var G__11775 = d;
var G__11776 = e;
var G__11777 = f;
var G__11778 = g;
var G__11779 = h;
var G__11780 = i;
var G__11781 = j;
var G__11782 = k;
var G__11783 = l;
var G__11784 = m;
var G__11785 = n;
var G__11786 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786) : self__.dispatch_fn.call(null,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11787 = a;
var G__11788 = b;
var G__11789 = c;
var G__11790 = d;
var G__11791 = e;
var G__11792 = f;
var G__11793 = g;
var G__11794 = h;
var G__11795 = i;
var G__11796 = j;
var G__11797 = k;
var G__11798 = l;
var G__11799 = m;
var G__11800 = n;
var G__11801 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801) : target_fn.call(null,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801));
});
var G__12402__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11802 = a;
var G__11803 = b;
var G__11804 = c;
var G__11805 = d;
var G__11806 = e;
var G__11807 = f;
var G__11808 = g;
var G__11809 = h;
var G__11810 = i;
var G__11811 = j;
var G__11812 = k;
var G__11813 = l;
var G__11814 = m;
var G__11815 = n;
var G__11816 = o;
var G__11817 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817) : self__.dispatch_fn.call(null,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11818 = a;
var G__11819 = b;
var G__11820 = c;
var G__11821 = d;
var G__11822 = e;
var G__11823 = f;
var G__11824 = g;
var G__11825 = h;
var G__11826 = i;
var G__11827 = j;
var G__11828 = k;
var G__11829 = l;
var G__11830 = m;
var G__11831 = n;
var G__11832 = o;
var G__11833 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833) : target_fn.call(null,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833));
});
var G__12402__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11834 = a;
var G__11835 = b;
var G__11836 = c;
var G__11837 = d;
var G__11838 = e;
var G__11839 = f;
var G__11840 = g;
var G__11841 = h;
var G__11842 = i;
var G__11843 = j;
var G__11844 = k;
var G__11845 = l;
var G__11846 = m;
var G__11847 = n;
var G__11848 = o;
var G__11849 = p;
var G__11850 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850) : self__.dispatch_fn.call(null,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11851 = a;
var G__11852 = b;
var G__11853 = c;
var G__11854 = d;
var G__11855 = e;
var G__11856 = f;
var G__11857 = g;
var G__11858 = h;
var G__11859 = i;
var G__11860 = j;
var G__11861 = k;
var G__11862 = l;
var G__11863 = m;
var G__11864 = n;
var G__11865 = o;
var G__11866 = p;
var G__11867 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867) : target_fn.call(null,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867));
});
var G__12402__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11868 = a;
var G__11869 = b;
var G__11870 = c;
var G__11871 = d;
var G__11872 = e;
var G__11873 = f;
var G__11874 = g;
var G__11875 = h;
var G__11876 = i;
var G__11877 = j;
var G__11878 = k;
var G__11879 = l;
var G__11880 = m;
var G__11881 = n;
var G__11882 = o;
var G__11883 = p;
var G__11884 = q;
var G__11885 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885) : self__.dispatch_fn.call(null,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11886 = a;
var G__11887 = b;
var G__11888 = c;
var G__11889 = d;
var G__11890 = e;
var G__11891 = f;
var G__11892 = g;
var G__11893 = h;
var G__11894 = i;
var G__11895 = j;
var G__11896 = k;
var G__11897 = l;
var G__11898 = m;
var G__11899 = n;
var G__11900 = o;
var G__11901 = p;
var G__11902 = q;
var G__11903 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903) : target_fn.call(null,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903));
});
var G__12402__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11904 = a;
var G__11905 = b;
var G__11906 = c;
var G__11907 = d;
var G__11908 = e;
var G__11909 = f;
var G__11910 = g;
var G__11911 = h;
var G__11912 = i;
var G__11913 = j;
var G__11914 = k;
var G__11915 = l;
var G__11916 = m;
var G__11917 = n;
var G__11918 = o;
var G__11919 = p;
var G__11920 = q;
var G__11921 = r;
var G__11922 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922) : self__.dispatch_fn.call(null,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11923 = a;
var G__11924 = b;
var G__11925 = c;
var G__11926 = d;
var G__11927 = e;
var G__11928 = f;
var G__11929 = g;
var G__11930 = h;
var G__11931 = i;
var G__11932 = j;
var G__11933 = k;
var G__11934 = l;
var G__11935 = m;
var G__11936 = n;
var G__11937 = o;
var G__11938 = p;
var G__11939 = q;
var G__11940 = r;
var G__11941 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941) : target_fn.call(null,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941));
});
var G__12402__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11942 = a;
var G__11943 = b;
var G__11944 = c;
var G__11945 = d;
var G__11946 = e;
var G__11947 = f;
var G__11948 = g;
var G__11949 = h;
var G__11950 = i;
var G__11951 = j;
var G__11952 = k;
var G__11953 = l;
var G__11954 = m;
var G__11955 = n;
var G__11956 = o;
var G__11957 = p;
var G__11958 = q;
var G__11959 = r;
var G__11960 = s;
var G__11961 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961) : self__.dispatch_fn.call(null,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11962 = a;
var G__11963 = b;
var G__11964 = c;
var G__11965 = d;
var G__11966 = e;
var G__11967 = f;
var G__11968 = g;
var G__11969 = h;
var G__11970 = i;
var G__11971 = j;
var G__11972 = k;
var G__11973 = l;
var G__11974 = m;
var G__11975 = n;
var G__11976 = o;
var G__11977 = p;
var G__11978 = q;
var G__11979 = r;
var G__11980 = s;
var G__11981 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981) : target_fn.call(null,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981));
});
var G__12402__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12402 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12402__1.call(this,self__);
case 2:
return G__12402__2.call(this,self__,a);
case 3:
return G__12402__3.call(this,self__,a,b);
case 4:
return G__12402__4.call(this,self__,a,b,c);
case 5:
return G__12402__5.call(this,self__,a,b,c,d);
case 6:
return G__12402__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12402__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12402__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12402__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12402__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12402__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12402__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12402__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12402__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12402__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12402__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12402__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12402__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12402__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12402__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12402__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12402__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12402.cljs$core$IFn$_invoke$arity$1 = G__12402__1;
G__12402.cljs$core$IFn$_invoke$arity$2 = G__12402__2;
G__12402.cljs$core$IFn$_invoke$arity$3 = G__12402__3;
G__12402.cljs$core$IFn$_invoke$arity$4 = G__12402__4;
G__12402.cljs$core$IFn$_invoke$arity$5 = G__12402__5;
G__12402.cljs$core$IFn$_invoke$arity$6 = G__12402__6;
G__12402.cljs$core$IFn$_invoke$arity$7 = G__12402__7;
G__12402.cljs$core$IFn$_invoke$arity$8 = G__12402__8;
G__12402.cljs$core$IFn$_invoke$arity$9 = G__12402__9;
G__12402.cljs$core$IFn$_invoke$arity$10 = G__12402__10;
G__12402.cljs$core$IFn$_invoke$arity$11 = G__12402__11;
G__12402.cljs$core$IFn$_invoke$arity$12 = G__12402__12;
G__12402.cljs$core$IFn$_invoke$arity$13 = G__12402__13;
G__12402.cljs$core$IFn$_invoke$arity$14 = G__12402__14;
G__12402.cljs$core$IFn$_invoke$arity$15 = G__12402__15;
G__12402.cljs$core$IFn$_invoke$arity$16 = G__12402__16;
G__12402.cljs$core$IFn$_invoke$arity$17 = G__12402__17;
G__12402.cljs$core$IFn$_invoke$arity$18 = G__12402__18;
G__12402.cljs$core$IFn$_invoke$arity$19 = G__12402__19;
G__12402.cljs$core$IFn$_invoke$arity$20 = G__12402__20;
G__12402.cljs$core$IFn$_invoke$arity$21 = G__12402__21;
G__12402.cljs$core$IFn$_invoke$arity$22 = G__12402__22;
return G__12402;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11554){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11554)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11982 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11982) : self__.dispatch_fn.call(null,G__11982));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11983 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11983) : target_fn.call(null,G__11983));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11984 = a;
var G__11985 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11984,G__11985) : self__.dispatch_fn.call(null,G__11984,G__11985));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11986 = a;
var G__11987 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11986,G__11987) : target_fn.call(null,G__11986,G__11987));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11988 = a;
var G__11989 = b;
var G__11990 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11988,G__11989,G__11990) : self__.dispatch_fn.call(null,G__11988,G__11989,G__11990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11991 = a;
var G__11992 = b;
var G__11993 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11991,G__11992,G__11993) : target_fn.call(null,G__11991,G__11992,G__11993));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11994 = a;
var G__11995 = b;
var G__11996 = c;
var G__11997 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11994,G__11995,G__11996,G__11997) : self__.dispatch_fn.call(null,G__11994,G__11995,G__11996,G__11997));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11998 = a;
var G__11999 = b;
var G__12000 = c;
var G__12001 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11998,G__11999,G__12000,G__12001) : target_fn.call(null,G__11998,G__11999,G__12000,G__12001));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12002 = a;
var G__12003 = b;
var G__12004 = c;
var G__12005 = d;
var G__12006 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12002,G__12003,G__12004,G__12005,G__12006) : self__.dispatch_fn.call(null,G__12002,G__12003,G__12004,G__12005,G__12006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12007 = a;
var G__12008 = b;
var G__12009 = c;
var G__12010 = d;
var G__12011 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12007,G__12008,G__12009,G__12010,G__12011) : target_fn.call(null,G__12007,G__12008,G__12009,G__12010,G__12011));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12012 = a;
var G__12013 = b;
var G__12014 = c;
var G__12015 = d;
var G__12016 = e;
var G__12017 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12012,G__12013,G__12014,G__12015,G__12016,G__12017) : self__.dispatch_fn.call(null,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12018 = a;
var G__12019 = b;
var G__12020 = c;
var G__12021 = d;
var G__12022 = e;
var G__12023 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12018,G__12019,G__12020,G__12021,G__12022,G__12023) : target_fn.call(null,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12024 = a;
var G__12025 = b;
var G__12026 = c;
var G__12027 = d;
var G__12028 = e;
var G__12029 = f;
var G__12030 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030) : self__.dispatch_fn.call(null,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12031 = a;
var G__12032 = b;
var G__12033 = c;
var G__12034 = d;
var G__12035 = e;
var G__12036 = f;
var G__12037 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037) : target_fn.call(null,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12038 = a;
var G__12039 = b;
var G__12040 = c;
var G__12041 = d;
var G__12042 = e;
var G__12043 = f;
var G__12044 = g;
var G__12045 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045) : self__.dispatch_fn.call(null,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12046 = a;
var G__12047 = b;
var G__12048 = c;
var G__12049 = d;
var G__12050 = e;
var G__12051 = f;
var G__12052 = g;
var G__12053 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053) : target_fn.call(null,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12054 = a;
var G__12055 = b;
var G__12056 = c;
var G__12057 = d;
var G__12058 = e;
var G__12059 = f;
var G__12060 = g;
var G__12061 = h;
var G__12062 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062) : self__.dispatch_fn.call(null,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12063 = a;
var G__12064 = b;
var G__12065 = c;
var G__12066 = d;
var G__12067 = e;
var G__12068 = f;
var G__12069 = g;
var G__12070 = h;
var G__12071 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071) : target_fn.call(null,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12072 = a;
var G__12073 = b;
var G__12074 = c;
var G__12075 = d;
var G__12076 = e;
var G__12077 = f;
var G__12078 = g;
var G__12079 = h;
var G__12080 = i;
var G__12081 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081) : self__.dispatch_fn.call(null,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12082 = a;
var G__12083 = b;
var G__12084 = c;
var G__12085 = d;
var G__12086 = e;
var G__12087 = f;
var G__12088 = g;
var G__12089 = h;
var G__12090 = i;
var G__12091 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091) : target_fn.call(null,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12092 = a;
var G__12093 = b;
var G__12094 = c;
var G__12095 = d;
var G__12096 = e;
var G__12097 = f;
var G__12098 = g;
var G__12099 = h;
var G__12100 = i;
var G__12101 = j;
var G__12102 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102) : self__.dispatch_fn.call(null,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12103 = a;
var G__12104 = b;
var G__12105 = c;
var G__12106 = d;
var G__12107 = e;
var G__12108 = f;
var G__12109 = g;
var G__12110 = h;
var G__12111 = i;
var G__12112 = j;
var G__12113 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113) : target_fn.call(null,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12114 = a;
var G__12115 = b;
var G__12116 = c;
var G__12117 = d;
var G__12118 = e;
var G__12119 = f;
var G__12120 = g;
var G__12121 = h;
var G__12122 = i;
var G__12123 = j;
var G__12124 = k;
var G__12125 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125) : self__.dispatch_fn.call(null,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12126 = a;
var G__12127 = b;
var G__12128 = c;
var G__12129 = d;
var G__12130 = e;
var G__12131 = f;
var G__12132 = g;
var G__12133 = h;
var G__12134 = i;
var G__12135 = j;
var G__12136 = k;
var G__12137 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137) : target_fn.call(null,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12138 = a;
var G__12139 = b;
var G__12140 = c;
var G__12141 = d;
var G__12142 = e;
var G__12143 = f;
var G__12144 = g;
var G__12145 = h;
var G__12146 = i;
var G__12147 = j;
var G__12148 = k;
var G__12149 = l;
var G__12150 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150) : self__.dispatch_fn.call(null,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12151 = a;
var G__12152 = b;
var G__12153 = c;
var G__12154 = d;
var G__12155 = e;
var G__12156 = f;
var G__12157 = g;
var G__12158 = h;
var G__12159 = i;
var G__12160 = j;
var G__12161 = k;
var G__12162 = l;
var G__12163 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163) : target_fn.call(null,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12164 = a;
var G__12165 = b;
var G__12166 = c;
var G__12167 = d;
var G__12168 = e;
var G__12169 = f;
var G__12170 = g;
var G__12171 = h;
var G__12172 = i;
var G__12173 = j;
var G__12174 = k;
var G__12175 = l;
var G__12176 = m;
var G__12177 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177) : self__.dispatch_fn.call(null,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12178 = a;
var G__12179 = b;
var G__12180 = c;
var G__12181 = d;
var G__12182 = e;
var G__12183 = f;
var G__12184 = g;
var G__12185 = h;
var G__12186 = i;
var G__12187 = j;
var G__12188 = k;
var G__12189 = l;
var G__12190 = m;
var G__12191 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191) : target_fn.call(null,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12192 = a;
var G__12193 = b;
var G__12194 = c;
var G__12195 = d;
var G__12196 = e;
var G__12197 = f;
var G__12198 = g;
var G__12199 = h;
var G__12200 = i;
var G__12201 = j;
var G__12202 = k;
var G__12203 = l;
var G__12204 = m;
var G__12205 = n;
var G__12206 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206) : self__.dispatch_fn.call(null,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12207 = a;
var G__12208 = b;
var G__12209 = c;
var G__12210 = d;
var G__12211 = e;
var G__12212 = f;
var G__12213 = g;
var G__12214 = h;
var G__12215 = i;
var G__12216 = j;
var G__12217 = k;
var G__12218 = l;
var G__12219 = m;
var G__12220 = n;
var G__12221 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221) : target_fn.call(null,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12222 = a;
var G__12223 = b;
var G__12224 = c;
var G__12225 = d;
var G__12226 = e;
var G__12227 = f;
var G__12228 = g;
var G__12229 = h;
var G__12230 = i;
var G__12231 = j;
var G__12232 = k;
var G__12233 = l;
var G__12234 = m;
var G__12235 = n;
var G__12236 = o;
var G__12237 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237) : self__.dispatch_fn.call(null,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12238 = a;
var G__12239 = b;
var G__12240 = c;
var G__12241 = d;
var G__12242 = e;
var G__12243 = f;
var G__12244 = g;
var G__12245 = h;
var G__12246 = i;
var G__12247 = j;
var G__12248 = k;
var G__12249 = l;
var G__12250 = m;
var G__12251 = n;
var G__12252 = o;
var G__12253 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253) : target_fn.call(null,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12254 = a;
var G__12255 = b;
var G__12256 = c;
var G__12257 = d;
var G__12258 = e;
var G__12259 = f;
var G__12260 = g;
var G__12261 = h;
var G__12262 = i;
var G__12263 = j;
var G__12264 = k;
var G__12265 = l;
var G__12266 = m;
var G__12267 = n;
var G__12268 = o;
var G__12269 = p;
var G__12270 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270) : self__.dispatch_fn.call(null,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12271 = a;
var G__12272 = b;
var G__12273 = c;
var G__12274 = d;
var G__12275 = e;
var G__12276 = f;
var G__12277 = g;
var G__12278 = h;
var G__12279 = i;
var G__12280 = j;
var G__12281 = k;
var G__12282 = l;
var G__12283 = m;
var G__12284 = n;
var G__12285 = o;
var G__12286 = p;
var G__12287 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287) : target_fn.call(null,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12288 = a;
var G__12289 = b;
var G__12290 = c;
var G__12291 = d;
var G__12292 = e;
var G__12293 = f;
var G__12294 = g;
var G__12295 = h;
var G__12296 = i;
var G__12297 = j;
var G__12298 = k;
var G__12299 = l;
var G__12300 = m;
var G__12301 = n;
var G__12302 = o;
var G__12303 = p;
var G__12304 = q;
var G__12305 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305) : self__.dispatch_fn.call(null,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12306 = a;
var G__12307 = b;
var G__12308 = c;
var G__12309 = d;
var G__12310 = e;
var G__12311 = f;
var G__12312 = g;
var G__12313 = h;
var G__12314 = i;
var G__12315 = j;
var G__12316 = k;
var G__12317 = l;
var G__12318 = m;
var G__12319 = n;
var G__12320 = o;
var G__12321 = p;
var G__12322 = q;
var G__12323 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323) : target_fn.call(null,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318,G__12319,G__12320,G__12321,G__12322,G__12323));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12324 = a;
var G__12325 = b;
var G__12326 = c;
var G__12327 = d;
var G__12328 = e;
var G__12329 = f;
var G__12330 = g;
var G__12331 = h;
var G__12332 = i;
var G__12333 = j;
var G__12334 = k;
var G__12335 = l;
var G__12336 = m;
var G__12337 = n;
var G__12338 = o;
var G__12339 = p;
var G__12340 = q;
var G__12341 = r;
var G__12342 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342) : self__.dispatch_fn.call(null,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12343 = a;
var G__12344 = b;
var G__12345 = c;
var G__12346 = d;
var G__12347 = e;
var G__12348 = f;
var G__12349 = g;
var G__12350 = h;
var G__12351 = i;
var G__12352 = j;
var G__12353 = k;
var G__12354 = l;
var G__12355 = m;
var G__12356 = n;
var G__12357 = o;
var G__12358 = p;
var G__12359 = q;
var G__12360 = r;
var G__12361 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361) : target_fn.call(null,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12362 = a;
var G__12363 = b;
var G__12364 = c;
var G__12365 = d;
var G__12366 = e;
var G__12367 = f;
var G__12368 = g;
var G__12369 = h;
var G__12370 = i;
var G__12371 = j;
var G__12372 = k;
var G__12373 = l;
var G__12374 = m;
var G__12375 = n;
var G__12376 = o;
var G__12377 = p;
var G__12378 = q;
var G__12379 = r;
var G__12380 = s;
var G__12381 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381) : self__.dispatch_fn.call(null,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12382 = a;
var G__12383 = b;
var G__12384 = c;
var G__12385 = d;
var G__12386 = e;
var G__12387 = f;
var G__12388 = g;
var G__12389 = h;
var G__12390 = i;
var G__12391 = j;
var G__12392 = k;
var G__12393 = l;
var G__12394 = m;
var G__12395 = n;
var G__12396 = o;
var G__12397 = p;
var G__12398 = q;
var G__12399 = r;
var G__12400 = s;
var G__12401 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401) : target_fn.call(null,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});
/**
 * Given a multimethod, return it's default-dispatch-val.
 */
cljs.core.default_dispatch_val = (function cljs$core$default_dispatch_val(multifn){
return cljs.core._default_dispatch_val(multifn);
});
/**
 * Given a multimethod, return it's dispatch-fn.
 */
cljs.core.dispatch_fn = (function cljs$core$dispatch_fn(multifn){
return cljs.core._dispatch_fn(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__12403 = self__.uuid;
var G__12404 = other.uuid;
return goog.array.defaultCompare(G__12403,G__12404);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12405 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12405);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4672__auto__,writer__4673__auto__,opt__4674__auto__){
return cljs.core._write(writer__4673__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12413 = x;
var G__12414 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12413,G__12414) : pred.call(null,G__12413,G__12414));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12415 = y;
var G__12416 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12415,G__12416) : pred.call(null,G__12415,G__12416));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
